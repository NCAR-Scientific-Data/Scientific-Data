{"version":3,"file":"geo.min.js","sources":["../src/vgl/init.js","../src/vgl/GL.js","../src/vgl/timestamp.js","../src/vgl/object.js","../src/vgl/event.js","../src/vgl/boundingObject.js","../src/vgl/node.js","../src/vgl/groupNode.js","../src/vgl/actor.js","../src/vgl/freezeObject.js","../src/vgl/defaultValue.js","../src/vgl/geojsonReader.js","../src/vgl/data.js","../src/vgl/geomData.js","../src/vgl/mapper.js","../src/vgl/groupMapper.js","../src/vgl/materialAttribute.js","../src/vgl/blend.js","../src/vgl/material.js","../src/vgl/renderer.js","../src/vgl/renderWindow.js","../src/vgl/camera.js","../src/vgl/interactorStyle.js","../src/vgl/trackballInteractorStyle.js","../src/vgl/pvwInteractorStyle.js","../src/vgl/viewer.js","../src/vgl/shader.js","../src/vgl/shaderProgram.js","../src/vgl/texture.js","../src/vgl/uniform.js","../src/vgl/vertexAttribute.js","../src/vgl/source.js","../src/vgl/planeSource.js","../src/vgl/pointSource.js","../src/vgl/lineSource.js","../src/vgl/utils.js","../src/vgl/picker.js","../src/vgl/shapefileReader.js","../src/vgl/vtkReader.js","../src/vgl/DataBuffers.js","../src/core/init.js","../src/core/version.js","../src/util/init.js","../src/util/wigglemaps.js","../src/core/object.js","../src/core/sceneObject.js","../src/core/timestamp.js","../src/core/ellipsoid.js","../src/core/mercator.js","../src/core/latlng.js","../src/core/layer.js","../src/core/featureLayer.js","../src/core/event.js","../src/core/mapInteractor.js","../src/core/time.js","../src/core/fileReader.js","../src/core/jsonReader.js","../src/core/map.js","../src/core/feature.js","../src/core/pointFeature.js","../src/core/lineFeature.js","../src/core/pathFeature.js","../src/core/polygonFeature.js","../src/core/planeFeature.js","../src/core/geomFeature.js","../src/core/graphFeature.js","../src/core/transform.js","../src/core/renderer.js","../src/core/osmLayer.js","../src/gl/init.js","../src/gl/renderer.js","../src/gl/lineFeature.js","../src/gl/pointFeature.js","../src/gl/geomFeature.js","../src/gl/planeFeature.js","../src/gl/vglRenderer.js","../src/d3/init.js","../src/d3/object.js","../src/d3/pointFeature.js","../src/d3/lineFeature.js","../src/d3/pathFeature.js","../src/d3/graphFeature.js","../src/d3/planeFeature.js","../src/d3/d3Renderer.js","../src/ui/init.js","../src/ui/uiLayer.js","../src/ui/widget.js","../src/ui/sliderWidget.js"],"names":["inherit","C","P","F","prototype","uber","constructor","ogs","namespace","ns_string","i","parts","split","parent","slice","length","vgl","Object","size","obj","key","hasOwnProperty","GL","ColorBufferBit","DepthBufferBit","m_globalModifiedTime","timestamp","this","m_modifiedTime","modified","getMTime","object","event","call","keyPress","mousePress","mouseRelease","contextMenu","configure","enable","mouseWheel","keyRelease","middleButtonPress","startInteraction","enter","rightButtonPress","middleButtonRelease","char","disable","endInteraction","mouseMove","mouseOut","expose","timer","leftButtonPress","leave","rightButtonRelease","leftButtonRelease","click","dblClick","boundingObject","m_bounds","m_computeBoundsTimestamp","m_boundsDirtyTimestamp","bounds","hasValidBounds","Number","MAX_VALUE","setBounds","minX","maxX","minY","maxY","minZ","maxZ","resetBounds","computeBounds","computeBoundsTimestamp","boundsDirtyTimestamp","ReferenceFrame","Relative","Absolute","node","m_parent","m_material","m_visible","m_overlay","accept","visitor","visit","material","setMaterial","visible","setVisible","flag","setParent","removeChild","overlay","setOverlay","ascend","traverse","boundsModified","groupNode","m_children","b_setVisible","addChild","childNode","indexOf","push","index","splice","removeChildren","children","hasChild","child","type","UpdateVisitor","traverseChildrenAndUpdateBounds","CullVisitor","traverseChildren","mode","TraverseAllChildren","updateBounds","vesVisitor","childBounds","istep","jstep","actor","m_transformMatrix","mat4","create","m_referenceFrame","m_mapper","matrix","setMatrix","tmatrix","referenceFrame","setReferenceFrame","mapper","setMapper","computeLocalToWorldMatrix","computeWorldToLocalMatrix","undefined","mapperBounds","minPt","maxPt","newBounds","vec3","transformMat4","freezeObject","freezedObject","freeze","o","defaultValue","a","b","EMPTY_OBJECT","geojsonReader","readScalars","coordinates","geom","size_estimate","idx","array","s","r","g","m_scalarFormat","sourceData","vertexAttributeKeys","Scalar","sourceDataSf","m_scalarRange","setScalarRange","data","addSource","pushBack","insertAt","Color","sourceDataC3fv","readPoint","geometryData","vglpoints","points","vglcoords","sourceDataP3fv","indices","Uint16Array","x","y","z","setIndices","addPrimitive","setName","readMultiPoint","pntcnt","estpntcnt","readLineString","vglline","lineStrip","setIndicesPerPrimitive","readMultiLineString","j","thisLineLength","readPolygon","thisPolyLength","vl","vgltriangle","triangles","readMultiPolygon","ccount","numPolys","indexes","vf","flip","flipped","tcount","readGJObjectInt","properties","ScalarFormat","ScalarRange","ret","next","nextset","geometries","readGJObject","geometry","features","console","log","linearizeGeoms","geoms","toString","readGeomObject","getPrimitives","buffer","JSON","parse","scalarFormat","scalarRange","raster","point","lineString","polygon","Position","Normal","TextureCoordinate","primitive","m_indicesPerPrimitive","m_primitiveType","m_indicesValueType","m_indices","createIndices","numberOfIndices","sizeInBytes","BYTES_PER_ELEMENT","primitiveType","setPrimitiveType","indicesPerPrimitive","count","indicesValueType","setIndicesValueType","indicesArray","triangleStrip","gl","TRIANGLE_STRIP","UNSIGNED_SHORT","TRIANGLES","lines","LINES","LINE_STRIP","POINTS","vertexDataP3f","m_position","vertexDataP3N3f","m_normal","vertexDataP3T3f","m_texCoordinate","m_attributesMap","m_data","vglAttributeData","m_numberOfComponents","m_dataType","m_dataTypeSize","m_normalized","m_stride","m_offset","getData","setData","Array","addAttribute","dataType","sizeOfDataType","offset","stride","noOfComponents","normalized","newAttr","sizeOfArray","lengthOfArray","keys","numberOfComponents","sizeOfAttributeDataType","hasKey","numberOfAttributes","attributeNumberOfComponents","attributeDataType","attributeOffset","attributeStride","insert","sourceDataAnyfv","FLOAT","value","sourceDataP3T3f","sourceDataP3N3f","sourceDataT2fv","m_min","m_max","m_fixedmin","m_fixedmax","min","max","sourceDataDf","m_name","m_primitives","m_sources","name","source","numberOfSources","numberOfPrimitives","vertexIndex","attr","ib","jb","findClosestVertex","vi","vPos","dx","dy","dz","dist","minDist","minIndex","Math","sqrt","getPosition","getScalar","deleteVertexBufferObjects","m_buffers","deleteBuffer","createVertexBufferObjects","m_geomData","k","ks","bufferId","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","m_bufferVertexAttributeMap","m_glCompileTimestamp","cleanUpDrawObjects","setupDrawObjects","m_dirty","m_color","geomBounds","color","setColor","setGeometryData","render","renderState","vertexAttrib3fv","bufferIndex","noOfPrimitives","bindVertexData","drawArrays","groupMapper","m_createMappersTimestamp","m_mappers","m_geomDataArray","geometryDataArray","setGeometryDataArray","materialAttributeType","Undefined","ShaderProgram","Texture","Blend","Depth","materialAttribute","m_type","m_enabled","enabled","setup","bind","undoBind","setupVertexData","undoBindVertexData","blendFunction","destination","m_source","m_destination","apply","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","blend","m_wasEnabled","m_blendFunction","SRC_ALPHA","isEnabled","BLEND","m_shaderProgram","shaderProgram","m_binNumber","m_textureAttributes","m_attributes","binNumber","setBinNumber","binNo","exists","uniform","attribute","setAttribute","textureUnit","remove","RenderBin","Base","Default","Opaque","Transparent","Overlay","m_modelViewMatrix","m_normalMatrix","m_projectionMatrix","renderer","m_sceneRoot","m_camera","camera","m_nearClippingPlaneTolerance","m_x","m_y","m_width","m_height","m_resizable","m_resetScene","m_layer","m_resetClippingRange","width","height","layer","setLayer","layerNo","isResizable","setResizable","backgroundColor","clearColor","setBackgroundColor","setClearColor","sceneRoot","renSt","sortedActors","mvMatrixInv","DEPTH_TEST","depthFunc","LEQUAL","clearMask","clearDepth","clear","viewport","resetCamera","sort","multiply","viewMatrix","projectionMatrix","ortho","invert","transpose","vn","directionOfProjection","visibleBounds","center","diagonals","radius","aspect","viewAspect","angle","viewAngle","distance","vup","atan","tan","sin","viewUpDirection","abs","dot","setViewUpDirection","setFocalPoint","setPosition","resetCameraClippingRange","viewPlaneNormal","position","c","d","range","vec2","getParameter","DEPTH_BITS","setClippingRange","resize","positionAndResize","setViewAspect","addActor","hasActor","addActors","actors","removeActor","removeActors","removeAllActors","worldToDisplay","worldPt","viewProjectionMatrix","winX","winY","winZ","winW","clipPt","vec4","fromValues","displayToWorld","displayPt","viewProjectionInverse","focusDisplayPoint","focalPoint","focusWorldPt","resetScene","setResetScene","reset","resetClippingRange","setResetClippingRange","renderWindow","canvas","m_canvas","m_activeRender","m_renderers","windowSize","setWindowSize","windowPosition","setWindowPosition","renderers","activeRenderer","addRenderer","ren","hasRenderer","setClearMask","removeRenderer","getRenderer","createWindow","getContext","e","deleteWindow","m_viewAngle","PI","m_focalPoint","m_centerOfRotation","m_viewUp","m_rightDir","m_near","m_far","m_viewAspect","m_directionOfProjection","m_viewPlaneNormal","m_viewMatrix","m_computeModelViewMatrixTime","m_computeProjectMatrixTime","m_left","m_right","m_top","m_bottom","m_enableTranslation","m_enableRotation","m_enableScale","m_enableParallelProjection","m_clearColor","m_clearDepth","m_clearMask","setViewAngleDegrees","setViewAngle","centerOfRotation","setCenterOfRotation","clippingRange","near","far","enableScale","setEnableScale","enableRotation","setEnableRotation","enableTranslation","setEnableTranslation","isEnabledParallelProjection","enableParallelProjection","setEnnableParallelProjection","setParallelProjection","left","right","top","bottom","computeDirectionOfProjection","computeViewPlaneNormal","computeViewMatrix","computeProjectionMatrix","mask","setClearDepth","depth","subtract","normalize","zoom","dir","pan","computeOrthogonalAxes","cross","rotate","mat","inverseCenterOfRotation","identity","translate","lookAt","perspective","interactorStyle","m_that","m_viewer","viewer","setViewer","$","on","handleMouseDown","handleMouseUp","handleMouseMove","handleMouseOut","handleMouseWheel","handleKeyPress","mouseContextMenu","handleContextMenu","handleClick","handleDoubleClick","trackballInteractorStyle","m_outsideCanvas","m_leftMouseBtnDown","m_rightMouseBtnDown","m_midMouseBtnDown","m_currPos","m_lastPos","fp","fdp","fwp","dp1","dp2","wp1","wp2","coords","m_zTrans","cam","relMouseCoords","button","view","originalEvent","wheelDelta","pvwInteractorStyle","m_renderer","m_coords","m_currentMousePos","m_focusWorldPt","m_focusDisplayPt","m_displayPt1","m_displayPt2","m_worldPt1","m_worldPt2","m_dx","m_dy","m_dz","m_leftMouseButtonDown","m_rightMouseButtonDown","m_middleMouseButtonDown","m_mouseLastPos","rens","secCameras","deltaxy","m_ready","m_interactorStyle","m_renderWindow","init","setInteractorStyle","style","fixedEvent","fix","window","preventDefault","state","trigger","pageX","pageY","totalOffsetX","totalOffsetY","canvasX","canvasY","currentElement","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","bindEventHandlers","unbindEventHandlers","off","_init","shader","m_shaderHandle","m_compileTimestamp","m_shaderType","m_shaderSource","shaderHandle","shaderType","shaderSource","setShaderSource","compile","deleteShader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","attachShader","programHandle","m_programHandle","m_shaders","m_uniforms","m_vertexAttributes","m_uniformNameToLocation","m_vertexAttributeNameToLocation","queryUniformLocation","getUniformLocation","queryAttributeLocation","getAttribLocation","addShader","addUniform","addVertexAttribute","uniformLocation","attributeLocation","updateUniforms","callGL","link","linkProgram","getProgramParameter","LINK_STATUS","use","useProgram","cleanUp","deleteVertexAndFragment","deleteProgram","createProgram","bindAttributes","bindUniforms","update","bindAttribLocation","texture","activateTextureUnit","m_textureUnit","activeTexture","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","m_depth","m_textureHandle","m_pixelFormat","m_pixelDataType","m_internalFormat","m_image","m_setupTimestamp","deleteTexture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","pixelStorei","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","updateDimensions","computeInternalFormatUsingImage","texImage2D","image","setImage","setTextureUnit","unit","setWidth","setDepth","textureHandle","internalFormat","setInternalFormat","pixelFormat","setPixelFormat","pixelDataType","setPixelDataType","RGBA","UNSIGNED_BYTE","lookupTable","m_range","m_colorTable","map","Uint8Array","colorTable","setColorTable","colors","setRange","updateRange","getTypeNumberOfComponents","INT","BOOL","FLOAT_VEC2","INT_VEC2","BOOL_VEC2","FLOAT_VEC3","INT_VEC3","BOOLT_VEC3","FLOAT_VEC4","INT_VEC4","BOOL_VEC4","FLOAT_MAT3","FLOAT_MAT4","m_dataArray","get","set","location","m_numberElements","uniform1iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","FALSE","uniformMatrix4fv","modelViewUniform","projectionUniform","floatUniform","normalMatrixUniform","CountAttributeIndex","vertexAttributeKeysIndexed","Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","vertexAttribute","program","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","planeSource","m_origin","m_point1","m_point2","m_xresolution","m_yresolution","m_geom","setOrigin","setPoint1","setPoint2","ii","numPts","sourceTexCoords","tc","v1","v2","pts","posIndex","normIndex","colorIndex","texCoordIndex","positions","normals","texCoords","tristrip","sourcePositions","sourceColors","pointSource","m_this","m_positions","m_colors","m_textureCoords","m_size","getPositions","setPositions","getColors","setColors","getSize","setSize","setTextureCoordinates","texcoords","pointsPrimitive","sourceSize","lineSource","linesPrimitive","utils","computePowerOfTwo","pow","createTextureVertexShader","vertexShaderSource","join","VERTEX_SHADER","createTextureFragmentShader","fragmentShaderSource","FRAGMENT_SHADER","createRgbaTextureFragmentShader","createVertexShader","createPointVertexShader","createVertexShaderSolidColor","createVertexShaderColorMap","createFragmentShader","createPhongVertexShader","createPhongFragmentShader","createFragmentShaderSolidColor","context","createFragmentShaderColorMap","createPointSpritesVertexShader","createPointSpritesFragmentShader","createTextureMaterial","isRgba","prog","vertexShader","fragmentShader","posVertAttr","texCoordVertAttr","pointsizeUniform","samplerUniform","opacityUniform","createGeometryMaterial","pointSize","opacity","colorVertAttr","createPointGeometryMaterial","sizeVertAttr","createPhongMaterial","normalVertAttr","normalUniform","createColorMaterial","createColorMappedMaterial","lut","scalarVertAttr","lutMinUniform","lutMaxUniform","updateColorMappedMaterial","lutMin","lutMax","createSolidColorMaterial","createPointSpritesMaterial","heightUniform","vertexColorWeightUniform","scalarsToColors","useScalarsToColors","useVertexColors","createPlane","originX","originY","originZ","point1X","point1Y","point1Z","point2X","point2Y","point2Z","createTexturePlane","createPoints","createPointSprites","createLines","createColorLegend","varname","origin","countMajor","countMinor","createLabels","pt1","pt2","delta","axisLabelOffset","create2DTexture","toFixed","createTicksAndLabels","pt1X","pt1Y","pt1Z","pt2X","pt2Y","pt2Z","heightMajor","concat","group","textToWrite","textSize","font","alignment","baseline","bold","document","getElementById","ctx","createElement","display","fillStyle","fillRect","textAlign","textBaseline","fillText","picker","m_actors","getActors","pick","selectionX","selectionY","bb","tmin","tmax","tymin","tymax","tzmin","tzmax","fpoint","focusDisplayPt","cameraPos","ray","shapefileReader","SHP_NULL","SHP_POINT","SHP_POLYGON","SHP_POLYLINE","int8","charCodeAt","bint32","lint32","bint16","lint16","ldbl64","b0","b1","b2","b3","b4","b5","b6","b7","sign","exp","frac","lfloat32","str","chars","readHeader","code","version","shapetype","xmin","ymin","xmax","ymax","Box","vect","loadShx","appendIndex","Shapefile","options","path","ajax","url","mimeType","success","dbf_data","loadShp","localShapefile","shxFile","shx","shpFile","shp","dbfFile","dbf","shxReader","FileReader","onloadend","result","shpReader","shpData","dbfReader","dbfData","readAsBinaryString","loadDBF","level","num_entries","header_size","record_size","FIELDS_START","HEADER_LENGTH","header_offset","headers","records","record_offset","declare","record","header","trim","parseFloat","readRing","start","end","ring","readRecord","geom_type","num_parts","num_points","parts_start","points_start","rings","feature","vtkReader","m_base64Chars","m_reverseBase64Chars","m_vtkRenderedList","m_vtkObjectCount","m_vtkScene","m_node","END_OF_INPUT","m_base64Str","m_base64Count","m_pos","ntos","n","unN","unescape","readReverseBase64","nextCharacter","charAt","decode64","inBuffer","done","readNumber","ss","v","readF3Array","numberOfPoints","test","Int8Array","readColorArray","vglcolors","tmp","parseObject","vtkObject","shaderProg","atob","String","fromCharCode","parseLineData","parseMeshData","parsePointData","parseColorMapData","hasTransparency","numberOfIndex","temp","m","vgllines","p","copy","tcoord","vgltriangles","pn","vglVertexes","parseSceneMetadata","bgc","localWidth","localHeight","sceneRenderer","Renderers","LookAt","Background1","initScene","createViewer","deleteViewer","updateCanvas","numObjects","setVtkScene","scene","DataBuffers","initialSize","current","copyArray","dst","src","min_expand","new_size","newArray","len","oldArray","dirty","alloc","num","write","repeat","elem","geo","fileReaders","registerFileReader","func","createFileReader","opts","registerRenderer","createRenderer","registerFeature","category","createFeature","arg","api","extend","registerLayer","layers","createLayer","registerWidget","widgets","createWidget","requestAnimationFrame","setTimeout","cssColors","util","isFunction","f","ensureFunction","randomString","floor","random","substring","convertColor","parseInt","isFinite","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Vector2D","RangeNode","subtree","xrange","x_in","yrange","y_in","subquery","box","y_left","x_right","search","contains","x_left","RangeTree","root","_box","clone","y_right","area","vertex","intersects","union","centroid","add","sub","scale","div","zero","tol","omega","cos","xp","yp","intersect2dt","denom","Infinity","num_t","t","intersect2dpos","num_s","m_eventHandlers","m_idleHandlers","m_deferredCount","onIdle","handler","addDeferred","defer","forEach","geoOn","isArray","geoTrigger","args","geoOff","filter","sceneObject","s_trigger","s_addDeferred","s_onIdle","draw","childrenOnly","geoArgs","stopPropagation","_triggeredBy","ellipsoid","m_radii","m_radiiSquared","m_minimumRadius","m_maximumRadius","radii","radiiSquared","maximumRadius","minimumRadius","computeGeodeticSurfaceNormal","lat","lon","cosLatitude","transformPoint","elev","gamma","transformGeometry","sourceDataArray","WGS84","UNIT_SPHERE","mercator","r_major","r_minor","spherical","long2tilex","rad","lat2tiley","long2tilex2","lat2tiley2","tilex2long","tiley2lat","y2lat","lat2y","deg2rad","rad2deg","ll2m","es","eccent","phi","sinphi","con","com","con2","ts","m2ll","pjPhi2","dphi","N_ITER","HALFPI","TOL","eccnth","Phi","latlng","arg1","arg2","arg3","m_lat","m_lng","lng","m_elv","elv","val","layerOptions","showAttribution","newLayerId","currentId","id","m_style","bin","m_id","m_gcs","m_timeRange","m_map","m_isReference","m_initialized","m_rendererName","m_dataTime","m_updateTime","m_drawTime","m_sticky","sticky","gcs","transform","transformLayer","baseLayer","timeRange","append","dataTime","updateTime","drawTime","query","referenceLayer","initialized","toLocal","input","fromLocal","css","_exit","_update","_resize","w","h","featureLayer","m_features","s_init","s_update","s_draw","featureName","newFeature","deleteFeature","_render","request","opacityUpdate","layerAdd","layerRemove","layerToggle","layerSelect","layerUnselect","animate","drawEnd","animationPause","animationStop","animationComplete","mousemove","mouseclick","brush","brushend","brushstart","mapInteractor","eventMatch","modifiers","m_mouse","buttons","alt","meta","shift","ctrl","calcSpeed","doRespond","m_disableThrottle","m_wait","m_wheelQueue","m_throttleTime","m_keyboard","m_state","$node","m_options","m_selectionLayer","m_selectionPlane","panMoveButton","panMoveModifiers","zoomMoveButton","zoomMoveModifiers","panWheelEnabled","panWheelModifiers","zoomWheelEnabled","zoomWheelModifiers","wheelScaleX","wheelScaleY","zoomScale","selectionButton","selectionModifiers","momentum","maxSpeed","minSpeed","drag","page","middle","time","Date","deltaTime","velocity","_connectEvents","_disconnectEvents","_handleMouseMove","_handleMouseDown","_handleMouseUp","_handleMouseWheel","_getMousePosition","evt","dt","valueOf","displayToGcs","_getMouseButton","which","_getMouseModifiers","altKey","ctrlKey","metaKey","shiftKey","_getSelection","mouse","upperLeft","lowerRight","upperRight","lowerLeft","action","deleteLayer","screenCoordinates","fillOpacity","_handleMouseMoveDocument","_handleMouseUpDocument","selectionObj","oldAction","vx","vy","speed","zoomFactor","direction","deltaFactor","deltaX","deltaY","_handleDoubleClick","destroy","keyboard","simulateEvent","Event","incrementTime","setDate","getDate","setMonth","getMonth","setYear","getYear","fileReader","newFileReader","progress","reader","onprogress","error","canRead","read","file","_getString","readAsText","_getArrayBuffer","jsonReader","File","match","_featureArray","_readObject","onDone","fileString","fail","spec","_featureType","_getCoordinates","_getStyle","strokeWidth","strokeColor","strokeOpacity","fillColor","_done","allFeatures","fill","_addFeature","stroke","_style","toMillis","calculateGlobalAnimationRange","cloneTimestep","m_pause","m_stop","m_uigcs","uigcs","m_center","m_zoom","m_baseLayer","m_animationState","timestep","m_intervalMap","m_fileReader","m_interactor","m_validZoomRange","m_transition","milliseconds","seconds","minutes","hours","days","weeks","months","years","deltaLowercase","toLowerCase","deltaUnits","layerTimeRange","layerDelta","indexTimestep","smallestDeltaInMillis","getTime","base","previousCenter","zoomLevel","screenPosition","eventType","gcsDelta","screenDelta","newCenter","currentCenter","gcsToDisplay","layerName","newLayer","target","toggle","world","output","animationRange","_animate","pauseAnimation","stopAnimation","stepAnimationForward","_stepAnimationForward","stepAnimationBackward","_stepAnimationBackward","renderTimestep","clearInterval","_animateTimestep","nextTimestep","setInterval","each","previousTimestep","readerType","addLayer","interactor","dataTransfer","dropEffect","files","zoomRange","transition","interp1","p0","p1","defaultInterp","zoom2z","z2zoom","log2","anim","defaultOpts","duration","ease","interp","zCoord","m_selectionAPI","selectionAPI","m_bin","m_buildTime","m_selectedFeatures","_bindMouseHandlers","_unbindMouseHandlers","_handleMousemove","_handleMouseclick","_handleBrushend","_handleBrush","pointSearch","found","over","newFeatures","oldFeatures","mouseover","mouseout","boxSearch","out","all","arguments","drawables","_drawables","buildTime","_build","pointFeature","m_rangeTree","s_data","s_style","m_maxRadius","_updateRangeTree","pt","ifound","q","pos","_boundingBox","defaultStyle","sprites","sprites_image","lineFeature","m_line","line","strokeStyle","pathFeature","polygonFeature","fill_color","planeFeature","ul","lr","m_upperLeft","m_lowerRight","m_defaultDepth","m_drawOnAsyncResourceLoad","drawOnAsyncResourceLoad","geomFeature","point_sprites","point_sprites_image","graphFeature","m_nodes","m_points","m_links","s_exit","nodes","links","linkType","l","nodeFeature","linkFeatures","nLinks","osmTransformFeature","destGcs","inplace","yCoord","pointOffset","inPos","outPos","srcGcs","transformFeature","projPoint","projSrcGcs","proj4","Proj","projDestGcs","Point","osmLayer","transformCoordinates","handleLatLngCoordinates","xAcc","yAcc","writer","handleArrayCoordinates","zAcc","handleObjectCoordinates","xCoord","worldToGcs","_connectMouseEvents","getModifiedMapZoom","m_zoomLevelDelta","isTileVisible","tile","m_visibleTilesRange","index_x","startX","endX","index_y","startY","endY","drawTiles","_removeTiles","m_pendingNewTilesStat","m_updateTimerId","updateOSMTiles","m_lastVisibleZoom","_addTiles","m_tileUrl","m_tiles","m_hiddenBinNumber","m_lastVisibleBinNumber","m_visibleBinNumber","m_pendingNewTiles","m_pendingInactiveTiles","m_numberOfCachedTiles","m_tileCacheSize","m_baseUrl","m_imageFormat","m_updateDefer","baseUrl","zoomDelta","imageFormat","tileUrl","tileCacheSize","_hasTile","_addTile","noOfTilesX","noOfTilesY","totalLatDegrees","lonPerTile","latPerTile","llx","lly","urx","ury","Image","LOADING","LOADED","REMOVED","REMOVING","crossOrigin","lastused","currZoom","lastZoom","tileOnLoad","Deferred","updateTimerId","total","resolve","lastStartX","lastStartY","lastEndX","lastEndY","currStartX","currStartY","currEndX","currEndY","tile1x","tile1y","tile2x","tile2y","invJ","worldPt1","worldPt2","onload","_updateTiles","clearTimeout","ggl","contextRenderer","vglRenderer","createGLLines","posFunc","strokeWidthFunc","strokeColorFunc","strokeOpacityFunc","prev","itemIndex","lineItemIndex","lineItem","buffers","prevSourcePositions","nextSourcePositions","offsetSourcePositions","sourceStokeWidth","sourceStrokeColor","sourceStrokeOpacity","trianglePrimitive","posAttr","prevAttr","nextAttr","offsetAttr","stokeWidthAttr","strokeColorAttr","strokeOpacityAttr","pixelWidthUniform","item","lineItemData","sc","posxx","m_actor","currentIndex","addVert","createGLPoints","radFunc","fillColorFunc","fillFunc","strokeFunc","fillOpacityFunc","strokeOpactityFunc","rect","sourceUnits","sourceRadius","sourceFillColor","sourceFill","sourceStroke","sourceAlpha","trianglesPrimitive","unitAttr","radAttr","fillColorAttr","fillAttr","strokeAttr","fillOpacityAttr","m_pixelWidthUniform","m_aspectUniform","verts","m_scalar","m_noOfPrimitives","m_onloadCallback","or","img","complete","_vglViewerInstances","viewers","maps","vglViewerInstance","makeViewer","mapIdx","deleteCache","m_contextRenderer","_updateRendererCamera","cr","focusPoint","centerDisplay","centerGeo","newCenterDisplay","newCenterGeo","newZ","gd3","strLength","uniqueID","strArray","d3Rescale","_d3id","select","_removeFeature","pos_func","attributes","_convertScale","cx","cy","classes","_drawFeatures","d3","svg","diag","diagonal","trg","selection","d3Renderer","setAttrs","attrs","setStyles","styles","_convertColor","getMap","getGroup","m_svg","initCorners","m_corners","setTransform","m_scale","baseToLocal","localToBase","m_defs","rgb","_convertPosition","shadow","scaleFactor","dataIndex","__render","exit","selectAll","gui","uiLayer","widgetName","newWidget","deleteWidget","widget","_createFeature","_deleteFeature","sliderWidget","put_icon","icon","m_xscale","m_yscale","m_plus","m_minus","m_track","m_nub","m_plusIcon","m_minusIcon","m_group","m_lowContrast","m_nubSize","m_highlightDur","respond","trans","zrange","x0","y0","linear","domain","classed","datum","cursor","mouseOver","clamp"],"mappings":"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AAgBlN,OAEvBu0D,QAAQ51D,UAAUD;;IA/SpB,MAAM/G,gBAAgB46D,IAAIrJ,eACxB,OAAO,IAAIqJ,IAAIrJ,aAAa1lB;IAE9BA,MAAMA,WACNX,IAAIqmB,aAAajxD,KAAKN,MAAM6rC;IAO5B,IAAI1U,SAASn3B,MACT48D,UAAU,MACVwB,sBAAsB,MACtBC,kBAAkB,MAClBvd,SAAS9gD,KAAKgrB,OACd+1B,WAAW/gD,KAAKwgD,SAEhBhoB,uBACA,uBACA,wBACA,wBACA,6BACA,+BACA,gCACA,gCACA,kCACA,yBACA,2BACA,6BACA,yBACA,iCACA,kCACA,yBACA,8BACA,gCACA,4BACA,iCACA,0BACA,4BACA,mBACA,KACA,iCACA,mDACA,yDACA,mCACA,qBACA,yBACA,sBACA,0EACA,uBACA,kBACA,OACA,iCACA,uEACA,qCACA,MACAC,KAAK,OASLG,yBACA,gBACA,4BACA,UACA,yBACA,yBACA,8BACA,gCACA,4BACA,iCACA,0BACA,4BACA,mCACA,sBACA,qBACA,UACA,oBACA,KACA,kBACA,oCACA,wCACA,kCACA,kDACA,2BACA,gBACA,kEACA,0CACA,sCACA,4EACA,kBACA,mDACA,UACA,qCACA,+EACA,gBACA,gDACA,UACA,iCACA,oCACA,mCACA,oDACA,iEACA,qEACA,wEACA,0DACA,OACA,YACA,gEACA,4EACA,OACA,MACAH,KAAK,OAQL6kC,OAAO,SAAUrzD,GAAGC,GAAGw2C,GAAGC;QAC5B,IAAI2d,UACAr0D,IAAIy2C,GAAGx2C,IAAIy2C,GACX12C,IAAIy2C,GAAGx2C,IAAIy2C,GACX12C,IAAIy2C,GAAGx2C,IAAIy2C,GACX12C,IAAIy2C,GAAGx2C,IAAIy2C,GACX12C,IAAIy2C,GAAGx2C,IAAIy2C,GACX12C,IAAIy2C,GAAGx2C,IAAIy2C;QAEf,OAAO2d;;IAgPT,OA/DAt+D,KAAKgrB,QAAQ;QACX81B,OAAOxgD,KAAK62B,QAAQ0U;OAUtB7rC,KAAKsxD,SAAS;QAERsL,WACFzlC,OAAO1d,WAAWohD,kBAAkBn8C,YAAYk+C,UAG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","sourcesContent":["//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nif(typeof ogs === 'undefined') {\n  var ogs = {};\n}\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create namespace for the given name\n *\n * @param ns_string\n * @returns {*|{}}\n */\n//////////////////////////////////////////////////////////////////////////////\nogs.namespace = function(ns_string) {\n  'use strict';\n\n  var parts = ns_string.split('.'), parent = ogs, i;\n\n  // strip redundant leading global\n  if (parts[0] === \"ogs\") {\n    parts = parts.slice(1);\n  }\n  for (i = 0; i < parts.length; i += 1) {\n    // create a property if it doesn't exist\n    if (typeof parent[parts[i]] === \"undefined\") {\n      parent[parts[i]] = {};\n    }\n    parent = parent[parts[i]];\n  }\n  return parent;\n};\n\n/** vgl namespace */\nvar vgl = ogs.namespace(\"gl\");\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to define JS inheritance\n *\n * @param C\n * @param P\n */\n//////////////////////////////////////////////////////////////////////////////\nfunction inherit(C, P) {\n  \"use strict\";\n\n  var F = function() {\n  };\n  F.prototype = P.prototype;\n  C.prototype = new F();\n  C.uber = P.prototype;\n  C.prototype.constructor = C;\n}\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to get size of an object\n *\n * @param obj\n * @returns {number} *\n */\n//////////////////////////////////////////////////////////////////////////////\nObject.size = function(obj) {\n  \"use strict\";\n\n  var size = 0, key = null;\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      size++;\n    }\n  }\n  return size;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2, bitwise: true*/\n\n/*global vgl, gl, ogs, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Wrap GL enums. Currently to get values of the enums we need to create\n * or access the context.\n *\n * Using enums from here:\n * https://github.com/toji/dart-gl-enums/blob/master/lib/gl_enums.dart\n *\n * @class\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.GL = {\n   ColorBufferBit : 0x00004000,\n   DepthBufferBit : 0x00000100\n};","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class timestamp\n *\n * @class\n * @returns {vgl.timestamp}\n */\n//////////////////////////////////////////////////////////////////////////////\nvar m_globalModifiedTime = 0;\n\nvgl.timestamp = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.timestamp)) {\n    return new vgl.timestamp();\n  }\n\n  var m_modifiedTime = 0;\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update modified time\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.modified = function() {\n    ++m_globalModifiedTime;\n    m_modifiedTime = m_globalModifiedTime;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get modified time\n   *\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.getMTime = function() {\n    return m_modifiedTime;\n  };\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class object\n *\n * @class\n * @returns {vgl.object}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.object = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.object)) {\n    return new vgl.object();\n  }\n\n  /** @private */\n  var m_modifiedTime = vgl.timestamp();\n  m_modifiedTime.modified();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Mark the object modified\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.modified = function() {\n    m_modifiedTime.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return modified time of the object\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getMTime = function() {\n    return m_modifiedTime.getMTime();\n  };\n\n  return this;\n};","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class event\n *\n * @class event\n * @returns {vgl.event}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.event = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.event)) {\n    return new vgl.event();\n  }\n  vgl.object.call(this);\n\n  return this;\n};\n\ninherit(vgl.event, vgl.object);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n *  types\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.event.keyPress = \"vgl.event.keyPress\";\nvgl.event.mousePress = \"vgl.event.mousePress\";\nvgl.event.mouseRelease = \"vgl.event.mouseRelease\";\nvgl.event.contextMenu = \"vgl.event.contextMenu\";\nvgl.event.configure = \"vgl.event.configure\";\nvgl.event.enable = \"vgl.event.enable\";\nvgl.event.mouseWheel = \"vgl.event.mouseWheel\";\nvgl.event.keyRelease = \"vgl.event.keyRelease\";\nvgl.event.middleButtonPress = \"vgl.event.middleButtonPress\";\nvgl.event.startInteraction = \"vgl.event.startInteraction\";\nvgl.event.enter = \"vgl.event.enter\";\nvgl.event.rightButtonPress = \"vgl.event.rightButtonPress\";\nvgl.event.middleButtonRelease = \"vgl.event.middleButtonRelease\";\nvgl.event.char = \"vgl.event.char\";\nvgl.event.disable = \"vgl.event.disable\";\nvgl.event.endInteraction = \"vgl.event.endInteraction\";\nvgl.event.mouseMove = \"vgl.event.mouseMove\";\nvgl.event.mouseOut = \"vgl.event.mouseOut\";\nvgl.event.expose = \"vgl.event.expose\";\nvgl.event.timer = \"vgl.event.timer\";\nvgl.event.leftButtonPress = \"vgl.event.leftButtonPress\";\nvgl.event.leave = \"vgl.event.leave\";\nvgl.event.rightButtonRelease = \"vgl.event.rightButtonRelease\";\nvgl.event.leftButtonRelease = \"vgl.event.leftButtonRelease\";\nvgl.event.click = \"vgl.event.click\";\nvgl.event.dblClick = \"vgl.event.dblClick\";\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class boundingObject\n *\n * @class\n * @return {vgl.boundingObject}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.boundingObject = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.boundingObject)) {\n    return new vgl.boundingObject();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_bounds = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n      m_computeBoundsTimestamp = vgl.timestamp(),\n      m_boundsDirtyTimestamp = vgl.timestamp();\n\n  m_computeBoundsTimestamp.modified();\n  m_boundsDirtyTimestamp.modified();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get current bounds of the object\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bounds = function() {\n    return m_bounds;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if bounds are valid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasValidBounds = function(bounds) {\n    if (bounds[0] == Number.MAX_VALUE ||\n        bounds[1] == -Number.MAX_VALUE ||\n        bounds[2] == Number.MAX_VALUE ||\n        bounds[3] == -Number.MAX_VALUE ||\n        bounds[4] == Number.MAX_VALUE ||\n        bounds[5] == -Number.MAX_VALUE)  {\n      return false;\n    }\n\n    return true;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set current bounds of the object\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBounds = function(minX, maxX, minY, maxY, minZ, maxZ) {\n    if (!this.hasValidBounds([minX, maxX, minY, maxY, minZ, maxZ])) {\n      return;\n    }\n\n    m_bounds[0] = minX;\n    m_bounds[1] = maxX;\n    m_bounds[2] = minY;\n    m_bounds[3] = maxY;\n    m_bounds[4] = minZ;\n    m_bounds[5] = maxZ;\n\n    this.modified();\n    m_computeBoundsTimestamp.modified();\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset bounds to default values\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetBounds = function() {\n    m_bounds[0] = Number.MAX_VALUE;\n    m_bounds[1] = -Number.MAX_VALUE;\n    m_bounds[2] = Number.MAX_VALUE;\n    m_bounds[3] = -Number.MAX_VALUE;\n    m_bounds[4] = Number.MAX_VALUE;\n    m_bounds[5] = -Number.MAX_VALUE;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds of the object\n   *\n   * Should be implemented by the concrete class\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bounds computation modification time\n   *\n   * @returns {vgl.timestamp}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBoundsTimestamp = function() {\n    return m_computeBoundsTimestamp;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bounds dirty timestamp\n   *\n   * @returns {vgl.timestamp}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boundsDirtyTimestamp = function() {\n    return m_boundsDirtyTimestamp;\n  };\n\n  this.resetBounds();\n\n  return this;\n};\n\nvgl.boundingObject.ReferenceFrame = {\n  \"Relative\" : 0,\n  \"Absolute\" : 1\n};\n\ninherit(vgl.boundingObject, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class node\n *\n * @class\n * @returns {vgl.node}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.node = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.node)) {\n    return new vgl.node();\n  }\n  vgl.boundingObject.call(this);\n\n  /** @private */\n  var m_parent = null,\n      m_material = null,\n      m_visible = true,\n      m_overlay = false;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Accept visitor for scene traversal\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.accept = function(visitor) {\n    visitor.visit(this);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active material used by the node\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.material = function() {\n    return m_material;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set material to be used the node\n   *\n   * @param material\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setMaterial = function(material) {\n    if (material !== m_material) {\n      m_material = material;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if the node is visible or node\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.visible = function() {\n    return m_visible;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Turn ON/OFF visibility of the node\n   *\n   * @param flag\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setVisible = function(flag) {\n    if (flag !== m_visible) {\n      m_visible = flag;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return current parent of the node\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parent = function() {\n    return m_parent;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set parent of the node\n   *\n   * @param parent\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setParent = function(parent) {\n    if (parent !== m_parent) {\n      if (m_parent !== null) {\n        m_parent.removeChild(this);\n      }\n      m_parent = parent;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if the node is an overlay node\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.overlay = function() {\n    return m_overlay;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set if the node is an overlay node or not\n   *\n   * @param flag\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setOverlay = function(flag) {\n    if (m_overlay !== flag) {\n      m_overlay = flag;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /*\n   * Traverse parent and their parent and so on\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.ascend = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse children\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverse = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Mark that the bounds are modified\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boundsModified = function() {\n    // @todo Implement this\n    this.boundsDirtyTimestamp().modified();\n\n    if (m_parent !== null) {\n      m_parent.boundsModified();\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.node, vgl.boundingObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class groupNode\n *\n * @class\n * @returns {vgl.groupNode}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.groupNode = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.groupNode)) {\n    return new vgl.groupNode();\n  }\n  vgl.node.call(this);\n\n  var m_children = [];\n\n  // Reference to base class methods\n  this.b_setVisible = this.setVisible;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Turn on / off visibility\n   *\n   * @param flag\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setVisible = function(flag) {\n    var i;\n\n    if (this.b_setVisible(flag) !== true) {\n      return false;\n    }\n\n    for (i = 0; i < m_children.length; ++i) {\n      m_children[i].setVisible(flag);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Make the incoming node as child of the group node\n   *\n   * @param childNode\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addChild = function(childNode) {\n    if (childNode instanceof vgl.node) {\n      if (m_children.indexOf(childNode) === -1) {\n        childNode.setParent(this);\n        m_children.push(childNode);\n        this.boundsDirtyTimestamp().modified();\n        return true;\n      }\n      return false;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove parent-child relationship between the group and incoming node\n   *\n   * @param childNode\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeChild = function(childNode) {\n    if (childNode.parent() === this) {\n      var index = m_children.indexOf(childNode);\n      m_children.splice(index, 1);\n      this.boundsDirtyTimestamp().modified();\n      return true;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove parent-child relationship between child nodes and the group node\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeChildren = function() {\n    var i;\n    for (i = 0; i < m_children.length; ++i) {\n      this.removeChild(m_children[i]);\n    }\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return children of this group node\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.children = function() {\n    return m_children;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return true if this group node has node as a child, false otherwise.\n   *\n   * @param node\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasChild = function(node) {\n    var i = 0, child = false;\n\n    for (i = 0; i < m_children.length; i++) {\n      if (m_children[i] === node) {\n        child = true;\n        break;\n      }\n    }\n\n    return child;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Accept a visitor and traverse the scene tree\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.accept = function(visitor) {\n    visitor.visit(this);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse the scene\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverse = function(visitor) {\n    switch (visitor.type()) {\n      case visitor.UpdateVisitor:\n        this.traverseChildrenAndUpdateBounds(visitor);\n        break;\n      case visitor.CullVisitor:\n        this.traverseChildren(visitor);\n        break;\n      default:\n        break;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse all of the children and update the bounds for each\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverseChildrenAndUpdateBounds = function(visitor) {\n    var i;\n\n    if (this.m_parent && this.boundsDirtyTimestamp().getMTime() >\n      this.computeBoundsTimestamp().getMTime()) {\n      // Flag parents bounds dirty.\n      this.m_parent.boundsDirtyTimestamp.modified();\n    }\n\n    this.computeBounds();\n\n    if (visitor.mode() === visitor.TraverseAllChildren) {\n      for (i = 0; i < m_children.length(); ++i) {\n        m_children[i].accept(visitor);\n        this.updateBounds(m_children[i]);\n      }\n    }\n\n    this.computeBoundsTimestamp().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Traverse children of the group node\n   *\n   * @param visitor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.traverseChildren = function(visitor) {\n    var i;\n\n    if (visitor.mode() === vgl.vesVisitor.TraverseAllChildren) {\n      for (i = 0; i < m_children.length(); ++i) {\n        m_children[i].accept(visitor);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds for the group node\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    var i = 0;\n\n    if (this.computeBoundsTimestamp().getMTime() >\n        this.boundsDirtyTimestamp().getMTime()) {\n      return;\n    }\n\n    for (i = 0; i < m_children.length; ++i) {\n      this.updateBounds(m_children[i]);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update bounds for the group node\n   *\n   * This method is used internally to update bounds of the group node by\n   * traversing each of its child.\n   *\n   * @param child\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateBounds = function(child) {\n    // FIXME: This check should not be required and possibly is incorrect\n    if (child.overlay()) {\n      return;\n    }\n\n    // Make sure that child bounds are upto date\n    child.computeBounds();\n\n    var bounds = this.bounds(),\n        childBounds = child.bounds(),\n        istep = 0,\n        jstep = 0,\n        i;\n\n    for (i = 0; i < 3; ++i) {\n      istep = i * 2;\n      jstep = i * 2 + 1;\n      if (childBounds[istep] < bounds[istep]) {\n        bounds[istep] = childBounds[istep];\n      }\n      if (childBounds[jstep] > bounds[jstep]) {\n        bounds[jstep] = childBounds[jstep];\n      }\n    }\n\n    this.setBounds(bounds[0], bounds[1], bounds[2], bounds[3],\n                   bounds[4], bounds[5]);\n  };\n\n  return this;\n};\n\ninherit(vgl.groupNode, vgl.node);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class actor\n *\n * @class\n * @returns {vgl.actor}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.actor = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.actor)) {\n    return new vgl.actor();\n  }\n  vgl.node.call(this);\n\n  /** @private */\n  var m_transformMatrix = mat4.create(),\n      m_referenceFrame = vgl.boundingObject.ReferenceFrame.Relative,\n      m_mapper = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get transformation matrix used by the actor\n   *\n   * @returns {mat4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.matrix = function() {\n    return m_transformMatrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set transformation matrix for the actor\n   *\n   * @param {mat4} 4X4 transformation matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setMatrix = function(tmatrix) {\n    if (tmatrix !== m_transformMatrix) {\n      m_transformMatrix = tmatrix;\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get reference frame for the transformations\n   *\n   * @returns {String} Possible values are Absolute or Relative\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.referenceFrame = function() {\n    return m_referenceFrame;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set reference frame for the transformations\n   *\n   * @param {vgl.boundingObject.ReferenceFrame}\n   * referenceFrame Possible values are (Absolute | Relative)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setReferenceFrame = function(referenceFrame) {\n    if (referenceFrame !== m_referenceFrame) {\n      m_referenceFrame = referenceFrame;\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return mapper where actor gets it behavior and data\n   *\n   * @returns {vgl.mapper}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.mapper = function() {\n    return m_mapper;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect an actor to its data source\n   *\n   * @param {vgl.mapper}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setMapper = function(mapper) {\n    if (mapper !== m_mapper) {\n      m_mapper = mapper;\n      this.boundsModified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.accept = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.ascend = function(visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute object space to world space matrix\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeLocalToWorldMatrix = function(matrix, visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute world space to object space matrix\n   * @todo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeWorldToLocalMatrix = function(matrix, visitor) {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute actor bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_mapper === null || m_mapper === undefined) {\n      this.resetBounds();\n      return;\n    }\n\n    var computeBoundsTimestamp = this.computeBoundsTimestamp(),\n        mapperBounds, minPt, maxPt, actorMatrix, newBounds;\n\n    if (this.boundsDirtyTimestamp().getMTime() > computeBoundsTimestamp.getMTime() ||\n      m_mapper.boundsDirtyTimestamp().getMTime() > computeBoundsTimestamp.getMTime()) {\n\n      m_mapper.computeBounds();\n      mapperBounds = m_mapper.bounds();\n\n      minPt = [mapperBounds[0], mapperBounds[2], mapperBounds[4]];\n      maxPt = [mapperBounds[1], mapperBounds[3], mapperBounds[5]];\n\n      vec3.transformMat4(minPt, minPt, m_transformMatrix);\n      vec3.transformMat4(maxPt, maxPt, m_transformMatrix);\n\n      newBounds = [\n        minPt[0] > maxPt[0] ? maxPt[0] : minPt[0],\n        minPt[0] > maxPt[0] ? minPt[0] : maxPt[0],\n        minPt[1] > maxPt[1] ? maxPt[1] : minPt[1],\n        minPt[1] > maxPt[1] ? minPt[1] : maxPt[1],\n        minPt[2] > maxPt[2] ? maxPt[2] : minPt[2],\n        minPt[2] > maxPt[2] ? minPt[2] : maxPt[2]\n      ];\n\n      this.setBounds(newBounds[0], newBounds[1],\n                     newBounds[2], newBounds[3],\n                     newBounds[4], newBounds[5]);\n\n      computeBoundsTimestamp.modified();\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.actor, vgl.node);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Freeze javascript object\n *\n * @param obj\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.freezeObject = function(obj) {\n  'use strict';\n\n  /**\n   * Freezes an object, using Object.freeze if available, otherwise returns\n   * the object unchanged.  This function should be used in setup code to prevent\n   * errors from completely halting JavaScript execution in legacy browsers.\n   *\n   * @exports freezeObject\n   */\n  var freezedObject = Object.freeze(obj);\n  if (typeof freezedObject === 'undefined') {\n    freezedObject = function(o) {\n      return o;\n    };\n  }\n\n  return freezedObject;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Returns the first parameter if not undefined,\n * otherwise the second parameter.\n *\n * @class\n * @returns {vgl.defaultValue}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.defaultValue = function(a, b) {\n  'use strict';\n\n  if (typeof a !== 'undefined') {\n    return a;\n  }\n  return b;\n};\n\nvgl.defaultValue.EMPTY_OBJECT = vgl.freezeObject({});\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $, Uint16Array*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geojson reader\n *\n * This contains code that reads a geoJSON file and produces rendering\n * primitives from it.\n *\n * @class\n * @returns {vgl.geojsonReader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.geojsonReader = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.geojsonReader)) {\n    return new vgl.geojsonReader();\n  }\n\n  var m_scalarFormat = \"none\",\n      m_scalarRange = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read scalars\n   *\n   * @param coordinates\n   * @param geom\n   * @param size_estimate\n   * @param idx\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readScalars = function(coordinates, geom, size_estimate, idx) {\n    var array = null,\n        s = null,\n        r  = null,\n        g = null,\n        b = null;\n\n    if (this.m_scalarFormat === \"values\" && coordinates.length === 4)\n    {\n      s = coordinates[3];\n      array = geom.sourceData(vgl.vertexAttributeKeys.Scalar);\n\n      if (!array) {\n        array = new vgl.sourceDataSf();\n        if (this.m_scalarRange) {\n          array.setScalarRange(this.m_scalarRange[0],this.m_scalarRange[1]);\n        }\n        if (size_estimate !== undefined) {\n          //array.length = size_estimate; //no, slow on Safari\n          array.data().length = size_estimate;\n        }\n        geom.addSource(array);\n      }\n      if (size_estimate === undefined) {\n        array.pushBack(s);\n      } else {\n        array.insertAt(idx, s);\n      }\n    } else if (this.m_scalarFormat === \"rgb\" && coordinates.length === 6) {\n      array = geom.sourceData(vgl.vertexAttributeKeys.Color);\n      if (!array) {\n        array = new vgl.sourceDataC3fv();\n        if (size_estimate !== undefined) {\n          array.length = size_estimate*3;\n        }\n        geom.addSource(array);\n      }\n      r = coordinates[3];\n      g = coordinates[4];\n      b = coordinates[5];\n      if (size_estimate === undefined) {\n        array.pushBack([r,g,b]);\n      } else {\n        array.insertAt(idx, [r,g,b]);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read point data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readPoint = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglpoints = new vgl.points(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        indices = new Uint16Array(1),\n        x = null,\n        y = null,\n        z = null,\n        i = null;\n\n    geom.addSource(vglcoords);\n    for (i = 0; i < 1; i++) {\n      indices[i] = i;\n\n      x = coordinates[0];\n      y = coordinates[1];\n      z = 0.0;\n      if (coordinates.length>2) {\n        z = coordinates[2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.pushBack([x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates, geom);\n    }\n\n    vglpoints.setIndices(indices);\n    geom.addPrimitive(vglpoints);\n    geom.setName(\"aPoint\");\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read multipoint data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readMultiPoint = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglpoints = new vgl.points(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        indices = new Uint16Array(coordinates.length),\n        pntcnt = 0,\n        estpntcnt = coordinates.length,\n        x = null,\n        y = null,\n        z = null,\n        i;\n\n    //preallocate with size estimate\n    vglcoords.data().length = estpntcnt * 3; //x,y,z\n\n    for (i = 0; i < coordinates.length; i++) {\n      indices[i] = i;\n      x = coordinates[i][0];\n      y = coordinates[i][1];\n      z = 0.0;\n      if (coordinates[i].length>2) {\n        z = coordinates[i][2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.insertAt(pntcnt, [x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates[i], geom, estpntcnt, pntcnt);\n\n      pntcnt++;\n    }\n\n    vglpoints.setIndices(indices);\n    geom.addPrimitive(vglpoints);\n    geom.addSource(vglcoords);\n    geom.setName(\"manyPoints\");\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read line string data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readLineString = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglline = new vgl.lineStrip(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        indices = [],\n        i = null,\n        x = null,\n        y = null,\n        z = null;\n\n    vglline.setIndicesPerPrimitive(coordinates.length);\n\n    for (i = 0; i < coordinates.length; i++) {\n      indices.push(i);\n      x = coordinates[i][0];\n      y = coordinates[i][1];\n      z = 0.0;\n      if (coordinates[i].length>2) {\n        z = coordinates[i][2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.pushBack([x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates[i], geom);\n    }\n\n    vglline.setIndices(indices);\n    geom.addPrimitive(vglline);\n    geom.addSource(vglcoords);\n    geom.setName(\"aLineString\");\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read multi line string\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readMultiLineString = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        pntcnt = 0,\n        //lines should be at least 2 verts long, underest OK\n        estpntcnt = coordinates.length * 2,\n        i = null,\n        j = null,\n        x = null,\n        y = null,\n        z = null,\n        indices = null,\n        vglline = null,\n        thisLineLength = null;\n\n    // Preallocate with size estimate\n    vglcoords.data().length = estpntcnt*3; //x,y,z\n\n    for (j = 0; j < coordinates.length; j++) {\n      indices = [];\n      //console.log(\"getting line \" + j);\n      vglline = new vgl.lineStrip();\n      thisLineLength = coordinates[j].length;\n      vglline.setIndicesPerPrimitive(thisLineLength);\n      for (i = 0; i < thisLineLength; i++) {\n        indices.push(pntcnt);\n        x = coordinates[j][i][0];\n        y = coordinates[j][i][1];\n        z = 0.0;\n        if (coordinates[j][i].length>2) {\n          z = coordinates[j][i][2];\n        }\n\n        //console.log(\"read \" + x + \",\" + y + \",\" + z);\n        vglcoords.insertAt(pntcnt, [x,y,z]);\n\n        //attributes\n        this.readScalars(coordinates[j][i], geom, estpntcnt*2, pntcnt);\n\n        pntcnt++;\n      }\n\n      vglline.setIndices(indices);\n      geom.addPrimitive(vglline);\n    }\n\n    geom.setName(\"aMultiLineString\");\n    geom.addSource(vglcoords);\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read polygon data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readPolygon = function(coordinates) {\n    //TODO: ignoring holes given in coordinates[1...]\n    //TODO: ignoring convex\n    //TODO: implement ear clipping in VGL instead of this to handle both\n    var geom = new vgl.geometryData(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        x = null,\n        y = null,\n        z  = null,\n        thisPolyLength = coordinates[0].length,\n        vl = 1,\n        i = null,\n        indices = null,\n        vgltriangle = null;\n\n\n    for (i = 0; i < thisPolyLength; i++) {\n      x = coordinates[0][i][0];\n      y = coordinates[0][i][1];\n      z = 0.0;\n      if (coordinates[0][i].length>2) {\n        z = coordinates[0][i][2];\n      }\n\n      //console.log(\"read \" + x + \",\" + y + \",\" + z);\n      vglcoords.pushBack([x,y,z]);\n\n      //attributes\n      this.readScalars(coordinates[0][i], geom);\n\n      if (i > 1) {\n        //console.log(\"Cutting new triangle 0,\"+ vl+ \",\"+ i);\n        indices = new Uint16Array([0,vl,i]);\n        vgltriangle = new vgl.triangles();\n        vgltriangle.setIndices(indices);\n        geom.addPrimitive(vgltriangle);\n        vl = i;\n      }\n    }\n\n    geom.setName(\"POLY\");\n    geom.addSource(vglcoords);\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read multi polygon data\n   *\n   * @param coordinates\n   * @returns {vgl.geometryData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readMultiPolygon = function(coordinates) {\n    var geom = new vgl.geometryData(),\n        vglcoords = new vgl.sourceDataP3fv(),\n        ccount = 0,\n        numPolys = coordinates.length,\n        pntcnt = 0,\n        estpntcnt = numPolys* 3, // assume triangles, underest is fine\n        vgltriangle = new vgl.triangles(),\n        indexes = [],\n        i = null,\n        j = null,\n        x = null,\n        y = null,\n        z  = null,\n        thisPolyLength = null,\n        vf = null,\n        vl = null,\n        flip = null,\n        flipped = false,\n        tcount = 0;\n\n\n    //var time1 = new Date().getTime()\n    //var a = 0;\n    //var b = 0;\n    //var c = 0;\n    //var d = 0;\n\n    //preallocate with size estimate\n    vglcoords.data().length = numPolys*3; //x,y,z\n    for (j = 0; j < numPolys; j++) {\n      //console.log(\"getting poly \" + j);\n\n      thisPolyLength = coordinates[j][0].length;\n      vf = ccount;\n      vl = ccount+1;\n      flip = [false,false,false];\n      for (i = 0; i < thisPolyLength; i++) {\n        //var timea = new Date().getTime()\n\n        x = coordinates[j][0][i][0];\n        y = coordinates[j][0][i][1];\n        z = 0.0;\n        if (coordinates[j][0][i].length>2) {\n          z = coordinates[j][0][i][2];\n        }\n        flipped = false;\n        if (x > 180) {\n          flipped = true;\n          x = x - 360;\n        }\n        if (i === 0) {\n          flip[0] = flipped;\n        } else {\n          flip[1+(i-1)%2] = flipped;\n        }\n        //var timeb = new Date().getTime();\n        //console.log(\"read \" + x + \",\" + y + \",\" + z);\n\n        vglcoords.insertAt(pntcnt, [x,y,z]);\n        //var timec = new Date().getTime();\n\n        //attributes\n        this.readScalars(coordinates[j][0][i], geom, estpntcnt, pntcnt);\n        pntcnt++;\n        //var timed = new Date().getTime()\n\n        if (i > 1) {\n          //if (vl < 50) {\n            //console.log(\"Cutting new triangle \" + tcount + \":\" + vf + \",\" + vl + \",\" + ccount);\n            //console.log(indexes);\n          //}\n          if (flip[0] === flip[1] && flip[1] === flip[2]) {\n              //indexes = indexes.concat([vf,vl,ccount]); //no, very slow in Safari\n              indexes[tcount*3+0] = vf\n              indexes[tcount*3+1] = vl\n              indexes[tcount*3+2] = ccount\n              tcount++;\n          }\n          //else {\n          //  //TODO: duplicate triangles that straddle boundary on either side\n          //}\n\n          vl = ccount;\n        }\n        ccount++;\n        //var timee = new Date().getTime()\n        //a = a + (timeb-timea)\n        //b = b + (timec-timeb)\n        //c = c + (timed-timec)\n        //d = d + (timee-timed)\n      }\n    }\n    vgltriangle.setIndices(indexes);\n    geom.addPrimitive(vgltriangle);\n\n    //console.log(\"NUMPOLYS \" + pntcnt);\n    //console.log(\"RMP: \", a, \",\", b, \",\", c, \",\", d)\n    //var time2 = new Date().getTime()\n\n    geom.setName(\"aMultiPoly\");\n    geom.addSource(vglcoords);\n    //var time3 = new Date().getTime()\n    //console.log(\"RMP: \", time2-time1, \",\", time3-time2)\n\n    return geom;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @param object\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readGJObjectInt = function(object) {\n    if (!object.hasOwnProperty('type')) {\n      //console.log(\"uh oh, not a geojson object\");\n      return null;\n    }\n\n    //look for properties type annotation\n    if (object.properties &&\n        object.properties.ScalarFormat &&\n        object.properties.ScalarFormat === \"values\") {\n      this.m_scalarFormat = \"values\";\n      if (object.properties.ScalarRange) {\n        this.m_scalarRange = object.properties.ScalarRange;\n      }\n    }\n    if (object.properties &&\n        object.properties.ScalarFormat &&\n        object.properties.ScalarFormat === \"rgb\") {\n      this.m_scalarFormat = \"rgb\";\n    }\n\n    //TODO: ignoring \"crs\" and \"bbox\" and misc meta data on all of these,\n    //best to handle as references into original probably\n    var ret,\n        type = object.type,\n        next = null,\n        nextset = null,\n        i = null;\n\n    switch (type) {\n      case \"Point\":\n        //console.log(\"parsed Point\");\n        ret = this.readPoint(object.coordinates);\n        break;\n      case \"MultiPoint\":\n        //console.log(\"parsed MultiPoint\");\n        ret = this.readMultiPoint(object.coordinates);\n        break;\n      case \"LineString\":\n        //console.log(\"parsed LineString\");\n        ret = this.readLineString(object.coordinates);\n        break;\n      case \"MultiLineString\":\n        //console.log(\"parsed MultiLineString\");\n        ret = this.readMultiLineString(object.coordinates);\n        break;\n      case \"Polygon\":\n        //console.log(\"parsed Polygon\");\n        ret = this.readPolygon(object.coordinates);\n        break;\n      case \"MultiPolygon\":\n        //console.log(\"parsed MultiPolygon\");\n        ret = this.readMultiPolygon(object.coordinates);\n        break;\n      case \"GeometryCollection\":\n        //console.log(\"parsed GeometryCollection\");\n        nextset = [];\n        for (i = 0; i < object.geometries.length; i++) {\n          next = this.readGJObject(object.geometries[i]);\n          nextset.push(next);\n        }\n        ret = nextset;\n        break;\n      case \"Feature\":\n        //console.log(\"parsed Feature\");\n        next = this.readGJObject(object.geometry);\n        ret = next;\n        break;\n      case \"FeatureCollection\":\n        //console.log(\"parsed FeatureCollection\");\n        nextset = [];\n        for (i = 0; i < object.features.length; i++) {\n          next = this.readGJObject(object.features[i]);\n          nextset.push(next);\n        }\n        ret = nextset;\n        break;\n      default:\n        console.log(\"Don't understand type \" + type);\n        ret = null;\n      break;\n    }\n    return ret;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @param object\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readGJObject = function(object) {\n    //var time1, time2;\n    var ret;\n    //time1 = new Date().getTime()\n    ret = this.readGJObjectInt(object);\n    //time2 = new Date().getTime()\n    //console.log(\"ELAPSED: \", time2-time1)\n    return ret;\n  };\n\n  /**\n   * Linearize geometries\n   *\n   * @param geoms\n   * @param geom\n   */\n  this.linearizeGeoms = function(geoms, geom) {\n    var i = null;\n\n    if( Object.prototype.toString.call( geom ) === '[object Array]' ) {\n      for (i = 0; i < geom.length; i++) {\n        this.linearizeGeoms(geoms, geom[i]);\n      }\n    }\n    else {\n     geoms.push(geom);\n   }\n };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Read geometries from geojson object\n   *\n   * @param object\n   * @returns {Array}\n   */\n ////////////////////////////////////////////////////////////////////////////\n this.readGeomObject = function(object) {\n    var geom,\n        geoms = [];\n\n    geom = this.readGJObject(object);\n    this.linearizeGeoms(geoms, geom);\n    return geoms;\n };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Given a buffer get rendering primitives\n   *\n   * @param buffer\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getPrimitives = function(buffer) {\n    //console.log(\"Parsing geoJSON\");\n    if (!buffer) {\n      return [];\n    }\n\n    var obj = JSON.parse(buffer),\n      geom = this.readGJObject(obj),\n      geoms = [];\n\n    this.m_scalarFormat = \"none\";\n    this.m_scalarRange = null;\n\n    this.linearizeGeoms(geoms, geom);\n\n    return { \"geoms\":geoms,\n             \"scalarFormat\":this.m_scalarFormat,\n             \"scalarRange\":this.m_scalarRange };\n  };\n\n  return this;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.data = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.data)) {\n    return new vgl.data();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return data type. Should be implemented by the derived class\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n  };\n};\n\nvgl.data.raster = 0;\nvgl.data.point = 1;\nvgl.data.lineString = 2;\nvgl.data.polygon = 3;\nvgl.data.geometry = 10;","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, Uint16Array, gl, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Vertex attribute keys\n *\n * @type {{Position: number, Normal: number, TextureCoordinate: number,\n *         Color: number, Scalar: number}}\n */\n//////////////////////////////////////////////////////////////////////////////\nvar vertexAttributeKeys = {\n  \"Position\" : 0,\n  \"Normal\" : 1,\n  \"TextureCoordinate\" : 2,\n  \"Color\" : 3,\n  \"Scalar\" : 4\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class primitive\n *\n * @class\n * @return {vgl.primitive}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.primitive = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.primitive)) {\n    return new vgl.primitive();\n  }\n\n  /** @private */\n  var m_indicesPerPrimitive = 0,\n      m_primitiveType = 0,\n      m_indicesValueType = 0,\n      m_indices = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get indices of the primitive\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.indices = function() {\n    return m_indices;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create indices array for the primitive\n   * @param type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createIndices = function(type) {\n    // TODO Check for the type\n    m_indices = new Uint16Array();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the number of indices\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfIndices = function() {\n    return m_indices.length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of indices in bytes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sizeInBytes = function() {\n    return m_indices.length * Uint16Array.BYTES_PER_ELEMENT;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /*\n   * Return primitive type g\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.primitiveType = function() {\n    return m_primitiveType;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set primitive type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPrimitiveType = function(type) {\n    m_primitiveType = type;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return count of indices that form a primitives\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.indicesPerPrimitive = function() {\n    return m_indicesPerPrimitive;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set count of indices that form a primitive\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setIndicesPerPrimitive = function(count) {\n    m_indicesPerPrimitive = count;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return indices value type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.indicesValueType = function() {\n    return m_indicesValueType;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set indices value type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setIndicesValueType = function(type) {\n    m_indicesValueType = type;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set indices from a array\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setIndices = function(indicesArray) {\n    // TODO Check for the type\n    m_indices = new Uint16Array(indicesArray);\n  };\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class triangleStrip\n *\n * @returns {vgl.triangleStrip}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.triangleStrip = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.triangleStrip)) {\n    return new vgl.triangleStrip();\n  }\n\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.TRIANGLE_STRIP);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(3);\n\n  return this;\n};\n\ninherit(vgl.triangleStrip, vgl.primitive);\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class triangles\n *\n * @returns {vgl.triangles}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.triangles = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.triangles)) {\n    return new vgl.triangles();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.TRIANGLES);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(3);\n\n  return this;\n};\n\ninherit(vgl.triangles, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * create a instance of lines primitive type\n *\n * @returns {vgl.lines}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.lines = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.lines)) {\n    return new vgl.lines();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.LINES);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(2);\n\n  return this;\n};\ninherit(vgl.lines, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * create a instance of line strip primitive type\n *\n * @returns {vgl.lineStrip}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.lineStrip = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.lineStrip)) {\n    return new vgl.lineStrip();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.LINE_STRIP);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(2);\n\n  return this;\n};\ninherit(vgl.lineStrip, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class points\n *\n * @returns {vgl.points}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.points = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.points)) {\n    return new vgl.points();\n  }\n  vgl.primitive.call(this);\n\n  this.setPrimitiveType(gl.POINTS);\n  this.setIndicesValueType(gl.UNSIGNED_SHORT);\n  this.setIndicesPerPrimitive(1);\n\n  return this;\n};\n\ninherit(vgl.points, vgl.primitive);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vertexDataP3f\n *\n * @returns {vgl.vertexDataP3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexDataP3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexDataP3f)) {\n    return new vgl.vertexDataP3f();\n  }\n\n  /** @private */\n  this.m_position = [];\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vertexDataP3N3f\n *\n * @class\n * @returns {vgl.vertexDataP3N3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexDataP3N3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexDataP3N3f)) {\n    return new vgl.vertexDataP3N3f();\n  }\n\n  this.m_position = [];\n  this.m_normal = [];\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vertexDataP3T3f\n *\n * @class\n * @returns {vgl.vertexDataP3T3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexDataP3T3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexDataP3T3f)) {\n    return new vgl.vertexDataP3T3f();\n  }\n\n  this.m_position = [];\n  this.m_texCoordinate = [];\n\n  return this;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceData\n * @class\n * @returns {vgl.sourceData}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceData = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceData)) {\n    return new vgl.sourceData();\n  }\n\n  var m_attributesMap = {},\n      m_data = [],\n\n      ////////////////////////////////////////////////////////////////////////////\n      /**\n       * Attribute data for the source\n       */\n      ////////////////////////////////////////////////////////////////////////////\n      vglAttributeData = function() {\n        // Number of components per group\n        // Type of data type (GL_FLOAT etc)\n        this.m_numberOfComponents = 0;\n            // Size of data type\n        this.m_dataType = 0;\n        this.m_dataTypeSize = 0;\n        // Specifies whether fixed-point data values should be normalized\n        // (true) or converted directly as fixed-point values (false)\n        // when they are accessed.\n        this.m_normalized = false;\n        // Strides for each attribute.\n        this.m_stride = 0;\n        // Offset\n        this.m_offset = 0;\n      };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return raw data for this source\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function() {\n    return m_data;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n /**\n   * Return raw data for this source\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getData = function() {\n    return data();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set data for this source\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setData = function(data) {\n    if (!(data instanceof Array)) {\n      console.log(\"[error] Requires array\");\n      return;\n    }\n    m_data = data.slice(0);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new attribute data to the source\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addAttribute = function(key, dataType, sizeOfDataType, offset, stride,\n                               noOfComponents, normalized) {\n\n    if (!m_attributesMap.hasOwnProperty(key)) {\n      var newAttr = new vglAttributeData();\n      newAttr.m_dataType = dataType;\n      newAttr.m_dataTypeSize = sizeOfDataType;\n      newAttr.m_offset = offset;\n      newAttr.m_stride = stride;\n      newAttr.m_numberOfComponents = noOfComponents;\n      newAttr.m_normalized = normalized;\n      m_attributesMap[key] = newAttr;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of the source data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sizeOfArray = function() {\n    return Object.size(m_data);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return length of array\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.lengthOfArray = function() {\n    return m_data.length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of the source data in bytes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  /*\n    * TODO: code below is probably wrong.\n    *   Example:\n    *            format P3N3f\n    *            m_data = [ 1, 2, 3, 4, 5, 6 ]; // contains one vertex, one normal, m_data.length == 6\n    *\n    *       The inner loop computes:\n    *             sizeInBytes += 3 * 4; // for position\n    *             sizeInBytes += 3 * 4; // for normal\n    *\n    *        Then sizeInBytes *= 6; // m_data.length == 6\n    *        which gives sizeInBytes == 144 bytes when it should have been 4*6 = 24\n    */\n  this.sizeInBytes = function() {\n    var sizeInBytes = 0,\n        keys = this.keys(), i;\n\n    for (i = 0; i < keys.length(); ++i) {\n      sizeInBytes += this.numberOfComponents(keys[i])\n                     * this.sizeOfAttributeDataType(keys[i]);\n    }\n\n    sizeInBytes *= this.sizeOfArray();\n\n    return sizeInBytes;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if there is attribute exists of a given key type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasKey = function(key) {\n    return m_attributesMap.hasOwnProperty(key);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return keys of all attributes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.keys = function() {\n    return Object.keys(m_attributesMap);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of attributes of source data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfAttributes = function() {\n    return Object.size(m_attributesMap);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of components of the attribute data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeNumberOfComponents = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_numberOfComponents;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return if the attribute data is normalized\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.normalized = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_normalized;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return size of the attribute data type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sizeOfAttributeDataType = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_dataTypeSize;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return attribute data type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeDataType = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_dataType;\n    }\n\n    return undefined;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return attribute offset\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeOffset = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_offset;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return attribute stride\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attributeStride = function(key) {\n    if (m_attributesMap.hasOwnProperty(key)) {\n      return m_attributesMap[key].m_stride;\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Virtual function to insert new vertex data at the end\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pushBack = function(vertexData) {\n    // Should be implemented by the base class\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Insert new data block to the raw data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.insert = function(data) {\n    var i;\n\n    //m_data = m_data.concat(data); //no, slow on Safari\n    if (!data.length) {\n      m_data[m_data.length] = data;\n    } else {\n      for (i = 0; i < data.length; i++) {\n        m_data[m_data.length] = data[i];\n      }\n    }\n  };\n\n  this.insertAt = function(index, data) {\n    var i;\n\n    if (!data.length) {\n      m_data[index] = data;\n    } else {\n      for (i = 0; i < data.length; i++) {\n        m_data[index*data.length+i] = data[i];\n      }\n    }\n  };\n\n  return this;\n};\n\n\nvgl.sourceDataAnyfv = function(size, key) {\n  if (!(this instanceof vgl.sourceDataAnyfv)) {\n      return new vgl.sourceDataAnyfv(size, key);\n    }\n\n    vgl.sourceData.call(this);\n    this.addAttribute(key, gl.FLOAT,\n                      4, 0, size * 4, size, false);\n\n    this.pushBack = function(value) {\n      this.insert(value);\n    };\n\n    return this;\n};\ninherit(vgl.sourceDataAnyfv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataP3T3f\n *\n * @returns {vgl.sourceDataP3T3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataP3T3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataP3T3f)) {\n    return new vgl.sourceDataP3T3f();\n  }\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Position, gl.FLOAT, 4, 0, 6 * 4, 3,\n                    false);\n  this.addAttribute(vgl.vertexAttributeKeys.TextureCoordinate, gl.FLOAT, 4, 12,\n                    6 * 4, 3, false);\n\n  this.pushBack = function(value) {\n    this.insert(value.m_position);\n    this.insert(value.m_texCoordinate);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataP3T3f, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataP3N3f\n *\n * @returns {vgl.sourceDataP3N3f}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataP3N3f = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataP3N3f)) {\n    return new vgl.sourceDataP3N3f();\n  }\n\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Position, gl.FLOAT, 4, 0, 6 * 4, 3,\n                    false);\n  this.addAttribute(vgl.vertexAttributeKeys.Normal, gl.FLOAT, 4, 12, 6 * 4, 3,\n                    false);\n\n  this.pushBack = function(value) {\n    this.insert(value.m_position);\n    this.insert(value.m_normal);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataP3N3f, vgl.sourceData);\n\n/////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataP3fv\n *\n * @returns {vgl.sourceDataP3fv}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataP3fv = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataP3fv)) {\n    return new vgl.sourceDataP3fv();\n  }\n\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Position, gl.FLOAT, 4, 0, 3 * 4, 3,\n                    false);\n\n  this.pushBack = function(value) {\n    this.insert(value);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataP3fv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataT2fv\n *\n * @returns {vgl.sourceDataT2fv}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataT2fv = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataT2fv)) {\n    return new vgl.sourceDataT2fv();\n  }\n\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.TextureCoordinate, gl.FLOAT, 4, 0,\n                    2 * 4, 2, false);\n\n  this.pushBack = function(value) {\n    this.insert(value);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataT2fv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataC3fv\n *\n * @returns {vgl.sourceDataC3fv}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataC3fv = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataC3fv)) {\n    return new vgl.sourceDataC3fv();\n  }\n\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Color, gl.FLOAT, 4, 0, 3 * 4, 3, false);\n\n  this.pushBack = function(value) {\n    this.insert(value);\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataC3fv, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataSf meant to hold scalar float values\n *\n * @class\n * @returns {vgl.sourceDataSf}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataSf = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataSf)) {\n    return new vgl.sourceDataSf();\n  }\n\n  var m_min = null,\n      m_max = null,\n      m_fixedmin = null,\n      m_fixedmax = null;\n\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Scalar, gl.FLOAT, 4, 0, 4, 1, false);\n\n  this.pushBack = function(value) {\n    if (m_max === null || value > m_max) {\n      m_max = value;\n    }\n    if (m_min === null || value < m_min) {\n      m_min = value;\n    }\n    //this.insert(value); //no, slow on Safari\n    this.data()[this.data().length] = value;\n  };\n\n  this.insertAt = function(index, value) {\n    if (m_max === null || value > m_max) {\n      m_max = value;\n    }\n    if (m_min === null || value < m_min) {\n      m_min = value;\n    }\n    //call superclass ??\n    //vgl.sourceData.insertAt.call(this, index, value);\n    this.data()[index] = value;\n  };\n\n  this.scalarRange = function() {\n    if (m_fixedmin === null || m_fixedmax === null) {\n      return [m_min, m_max];\n    }\n\n    return [m_fixedmin, m_fixedmax];\n  };\n\n  this.setScalarRange = function(min, max) {\n    m_fixedmin = min;\n    m_fixedmax = max;\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataSf, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sourceDataDf meant to hold data float values\n *\n * This source array is the best way to pass a array of floats to the shader\n * that has one entry for each of the vertices.\n *\n * @class\n * @returns {vgl.sourceDataDf}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.sourceDataDf = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.sourceDataDf)) {\n    return new vgl.sourceDataDf();\n  }\n\n  var m_min = null,\n      m_max = null,\n      m_fixedmin = null,\n      m_fixedmax = null;\n\n  vgl.sourceData.call(this);\n\n  this.addAttribute(vgl.vertexAttributeKeys.Scalar, gl.FLOAT,\n                    4, 0, 4, 1, false);\n\n  this.pushBack = function(value) {\n    this.data()[this.data().length] = value;\n  };\n\n  this.insertAt = function(index, value) {\n    this.data()[index] = value;\n  };\n\n  return this;\n};\n\ninherit(vgl.sourceDataDf, vgl.sourceData);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class geometryData\n *\n * @class\n * @returns {vgl.geometryData}\n */\n /////////////////////////////////////////////////////////////////////////////\nvgl.geometryData = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.geometryData)) {\n    return new vgl.geometryData();\n  }\n  vgl.data.call(this);\n\n  /** @private */\n  var m_name = \"\",\n      m_primitives = [],\n      m_sources = [],\n      m_bounds = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n      m_computeBoundsTimestamp = vgl.timestamp(),\n      m_boundsDirtyTimestamp = vgl.timestamp();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return type\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n    return vgl.data.geometry;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return ID of the geometry data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set name of the geometry data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setName = function(name) {\n    m_name = name;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new source\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addSource = function(source) {\n    // @todo Check if the incoming source has duplicate keys\n\n    // NOTE This might not work on IE8 or lower\n    if (m_sources.indexOf(source) === -1) {\n      m_sources.push(source);\n\n      if (source.hasKey(vgl.vertexAttributeKeys.Position)) {\n        m_boundsDirtyTimestamp.modified();\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return source for a given index. Returns 0 if not found.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.source = function(index) {\n    if (index < m_sources.length) {\n      return m_sources[index];\n    }\n\n    return 0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of sources\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfSources = function() {\n    return m_sources.length;\n  };\n\n  /**\n   * Return source data given a key\n   */\n  this.sourceData = function(key) {\n    var i;\n\n    for (i = 0; i < m_sources.length; ++i) {\n      if (m_sources[i].hasKey(key)) {\n        return m_sources[i];\n      }\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new primitive\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addPrimitive = function(primitive) {\n    m_primitives.push(primitive);\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return primitive for a given index. Returns null if not found.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.primitive = function(index) {\n    if (index < m_primitives.length) {\n      return m_primitives[index];\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return number of primitives\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numberOfPrimitives = function() {\n    return m_primitives.length;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bounds [minX, maxX, minY, maxY, minZ, maxZ]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bounds = function() {\n    if (m_boundsDirtyTimestamp.getMTime() > m_computeBoundsTimestamp.getMTime()) {\n      this.computeBounds();\n    }\n    return m_bounds;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetBounds = function() {\n    m_bounds[0] = 0.0;\n    m_bounds[1] = 0.0;\n    m_bounds[2] = 0.0;\n    m_bounds[3] = 0.0;\n    m_bounds[4] = 0.0;\n    m_bounds[5] = 0.0;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBounds = function(minX, maxX, minY, maxY, minZ, maxZ) {\n    m_bounds[0] = minX;\n    m_bounds[1] = maxX;\n    m_bounds[2] = minY;\n    m_bounds[3] = maxY;\n    m_bounds[4] = minZ;\n    m_bounds[5] = maxZ;\n\n    m_computeBoundsTimestamp.modified();\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_boundsDirtyTimestamp.getMTime() > m_computeBoundsTimestamp.getMTime()) {\n      var attr = vgl.vertexAttributeKeys.Position,\n          sourceData = this.sourceData(attr),\n          data = sourceData.data(),\n          numberOfComponents = sourceData.attributeNumberOfComponents(attr),\n          stride = sourceData.attributeStride(attr),\n          offset = sourceData.attributeOffset(attr),\n          sizeOfDataType = sourceData.sizeOfAttributeDataType(attr),\n          count = data.length,\n          ib = 0,\n          jb = 0,\n          value = null,\n          vertexIndex,\n          j;\n\n      // We advance by index, not by byte\n      stride /= sizeOfDataType;\n      offset /= sizeOfDataType;\n\n      this.resetBounds();\n\n      for (vertexIndex = offset; vertexIndex < count; vertexIndex += stride) {\n        for (j = 0; j < numberOfComponents; ++j) {\n          value = data[vertexIndex + j];\n          ib = j * 2;\n          jb = j * 2 + 1;\n\n          if (vertexIndex === offset) {\n            m_bounds[ib] = value;\n            m_bounds[jb] = value;\n          } else {\n            if (value > m_bounds[jb]) {\n              m_bounds[jb] = value;\n            }\n            if (value < m_bounds[ib]) {\n              m_bounds[ib] = value;\n            }\n          }\n        }\n      }\n\n      m_computeBoundsTimestamp.modified();\n    }\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the vertex closest to a given position\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.findClosestVertex = function(point) {\n    var attr = vgl.vertexAttributeKeys.Position,\n        sourceData = this.sourceData(attr),\n        sizeOfDataType = sourceData.sizeOfAttributeDataType(attr),\n        numberOfComponents = sourceData.attributeNumberOfComponents(attr),\n        data = sourceData.data(),\n        stride = sourceData.attributeStride(attr) / sizeOfDataType,\n        offset = sourceData.attributeOffset(attr) / sizeOfDataType,\n        minDist = Number.MAX_VALUE,\n        minIndex = null,\n        vi, vPos, dx, dy, dz, dist, i;\n\n    // assume positions are always triplets\n    if (numberOfComponents !== 3) {\n      console.log('[warning] Find closest vertex assumes three' +\n        'component vertex ');\n    }\n\n    if (!point.z) {\n      point = {x:point.x, y:point.y, z:0};\n    }\n\n    for (vi = offset, i = 0; vi < data.length; vi += stride, i++) {\n      vPos = [data[vi],\n              data[vi + 1],\n              data[vi + 2]];\n\n      dx = vPos[0] - point.x;\n      dy = vPos[1] - point.y;\n      dz = vPos[2] - point.z;\n      dist = Math.sqrt(dx*dx + dy*dy + dz*dz);\n      if (dist < minDist) {\n        minDist = dist;\n        minIndex = i;\n      }\n    }\n    return minIndex;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the requested vertex position\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getPosition = function(index) {\n    var attr = vgl.vertexAttributeKeys.Position,\n        sourceData = this.sourceData(attr),\n        sizeOfDataType = sourceData.sizeOfAttributeDataType(attr),\n        numberOfComponents = sourceData.attributeNumberOfComponents(attr),\n        data = sourceData.data(),\n        stride = sourceData.attributeStride(attr) / sizeOfDataType,\n        offset = sourceData.attributeOffset(attr) / sizeOfDataType;\n\n    // assume positions are always triplets\n    if (numberOfComponents !== 3) {\n      console.log(\"[warning] getPosition assumes three component data\");\n    }\n\n    return [ data[offset + index*stride],\n             data[offset + index*stride + 1],\n             data[offset + index*stride + 2] ];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the scalar corresponding to a given vertex index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getScalar = function(index) {\n    var attr = vgl.vertexAttributeKeys.Scalar,\n        sourceData = this.sourceData(attr),\n        numberOfComponents, sizeOfDataType, data, stride, offset;\n\n    if (!sourceData) {\n      return null;\n    }\n\n    numberOfComponents = sourceData.attributeNumberOfComponents(attr);\n    sizeOfDataType = sourceData.sizeOfAttributeDataType(attr);\n    data = sourceData.data();\n    stride = sourceData.attributeStride(attr) / sizeOfDataType;\n    offset = sourceData.attributeOffset(attr) / sizeOfDataType;\n\n    //console.log(\"index for scalar is \" + index);\n    //console.log(\"offset for scalar is \" + offset);\n    //console.log(\"stride for scalar is \" + stride);\n\n    //console.log(\"have \" + data.length + \" scalars\");\n\n    if (index * stride + offset >= data.length) {\n      console.log(\"access out of bounds in getScalar\");\n    }\n\n    return data[index * stride + offset];\n  };\n\n  return this;\n};\n\ninherit(vgl.geometryData, vgl.data);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, Float32Array, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class mapper\n *\n * @class\n * @returns {vgl.mapper}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.mapper = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.mapper)) {\n    return new vgl.mapper();\n  }\n  vgl.boundingObject.call(this);\n\n  /** @private */\n  var m_dirty = true,\n      m_color = [ 0.0, 1.0, 1.0 ],\n      m_geomData = null,\n      m_buffers = [],\n      m_bufferVertexAttributeMap = {},\n      m_glCompileTimestamp = vgl.timestamp();\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete cached VBO if any\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function deleteVertexBufferObjects() {\n    var i;\n    for (i = 0; i < m_buffers.length; ++i) {\n      gl.deleteBuffer(m_buffers[i]);\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create new VBO for all its geometryData sources and primitives\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function createVertexBufferObjects() {\n    if (m_geomData) {\n      var numberOfSources = m_geomData.numberOfSources(),\n          i, j, k, bufferId = null, keys, ks, numberOfPrimitives;\n\n      for (i = 0; i < numberOfSources; ++i) {\n        bufferId = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\n        gl.bufferData(gl.ARRAY_BUFFER,\n          new Float32Array(m_geomData.source(i).data()), gl.STATIC_DRAW);\n\n        keys = m_geomData.source(i).keys();\n        ks = [];\n\n        for (j = 0; j < keys.length; ++j) {\n          ks.push(keys[j]);\n        }\n\n        m_bufferVertexAttributeMap[i] = ks;\n        m_buffers[i] = bufferId;\n      }\n\n      numberOfPrimitives = m_geomData.numberOfPrimitives();\n      for (k = 0; k < numberOfPrimitives; ++k) {\n        bufferId = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\n        gl.bufferData(gl.ARRAY_BUFFER, m_geomData.primitive(k)\n            .indices(), gl.STATIC_DRAW);\n        m_buffers[i++] = bufferId;\n      }\n\n      m_glCompileTimestamp.modified();\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clear cache related to buffers\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function cleanUpDrawObjects() {\n    m_bufferVertexAttributeMap = {};\n    m_buffers = [];\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Setup draw objects; Delete old ones and create new ones\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setupDrawObjects() {\n    // Delete buffer objects from past if any.\n    deleteVertexBufferObjects();\n\n    // Clear any cache related to buffers\n    cleanUpDrawObjects();\n\n    // Now construct the new ones.\n    createVertexBufferObjects();\n\n    m_dirty = false;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds of the data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_geomData === null || typeof m_geomData === 'undefined') {\n      this.resetBounds();\n      return;\n    }\n\n    var computeBoundsTimestamp = this.computeBoundsTimestamp(),\n        boundsDirtyTimestamp = this.boundsDirtyTimestamp(),\n        geomBounds = null;\n\n    if (boundsDirtyTimestamp.getMTime() > computeBoundsTimestamp.getMTime()) {\n      geomBounds = m_geomData.bounds();\n\n      this.setBounds(geomBounds[0], geomBounds[1], geomBounds[2],\n        geomBounds[3], geomBounds[4], geomBounds[5]) ;\n\n      computeBoundsTimestamp.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get solid color of the geometry\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.color = function() {\n    return m_color;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set solid color of the geometry. Default is teal [1.0, 1.0, 1.0]\n   *\n   * @param r Red component of the color [0.0 - 1.0]\n   * @param g Green component of the color [0.0 - 1.0]\n   * @param b Blue component of the color [0.0 - 1.0]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setColor = function(r, g, b) {\n    m_color[0] = r;\n    m_color[1] = g;\n    m_color[2] = b;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return stored geometry data if any\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometryData = function() {\n    return m_geomData;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mapper to its geometry data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setGeometryData = function(geom) {\n    if (m_geomData !== geom) {\n      m_geomData = geom;\n\n      this.modified();\n      this.boundsDirtyTimestamp().modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the mapper\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function(renderState) {\n    if (this.getMTime() > m_glCompileTimestamp.getMTime()) {\n      setupDrawObjects(renderState);\n    }\n\n    // Fixed vertex color\n    gl.vertexAttrib3fv(vgl.vertexAttributeKeys.Color, this.color());\n\n    // TODO Use renderState\n    var bufferIndex = 0,\n        j = 0, i, noOfPrimitives = null, primitive = null;\n\n    for (i in m_bufferVertexAttributeMap) {\n      if (m_bufferVertexAttributeMap.hasOwnProperty(i)) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, m_buffers[bufferIndex]);\n        for (j = 0; j < m_bufferVertexAttributeMap[i].length; ++j) {\n          renderState.m_material\n              .bindVertexData(renderState, m_bufferVertexAttributeMap[i][j]);\n        }\n        ++bufferIndex;\n      }\n    }\n\n    noOfPrimitives = m_geomData.numberOfPrimitives();\n    for (j = 0; j < noOfPrimitives; ++j) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, m_buffers[bufferIndex++]);\n      primitive = m_geomData.primitive(j);\n      switch(primitive.primitiveType()) {\n        case gl.POINTS:\n          gl.drawArrays (gl.TRIANGLES, 0, primitive.numberOfIndices());\n          break;\n        case gl.LINES:\n          gl.drawArrays (gl.LINES, 0, primitive.numberOfIndices());\n          break;\n        case gl.LINE_STRIP:\n          gl.drawArrays (gl.LINE_STRIP, 0, primitive.numberOfIndices());\n          break;\n        case gl.TRIANGLES:\n          gl.drawArrays (gl.TRIANGLES, 0, primitive.numberOfIndices());\n          break;\n        case gl.TRIANGLE_STRIP:\n          gl.drawArrays (gl.TRIANGLE_STRIP, 0, primitive.numberOfIndices());\n          break;\n      }\n      gl.bindBuffer (gl.ARRAY_BUFFER, null);\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.mapper, vgl.boundingObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.groupMapper = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.groupMapper)) {\n    return new vgl.groupMapper();\n  }\n  vgl.mapper.call(this);\n\n  /** @private */\n  var m_createMappersTimestamp = vgl.timestamp(),\n      m_mappers = [],\n      m_geomDataArray = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return stored geometry data if any\n   *\n   * @param index optional\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometryData = function(index) {\n    if (index !== undefined && index < m_geomDataArray.length ) {\n      return m_geomDataArray[index];\n    }\n\n    if (m_geomDataArray.length > 0) {\n      return m_geomDataArray[0];\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mapper to its geometry data\n   *\n   * @param geom {vgl.geomData}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setGeometryData = function(geom) {\n    if (m_geomDataArray.length === 1) {\n      if (m_geomDataArray[0] === geom) {\n        return;\n      }\n    }\n    m_geomDataArray = [];\n    m_geomDataArray.push(geom);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return stored geometry data array if any\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometryDataArray = function() {\n    return m_geomDataArray;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mapper to its geometry data\n   *\n   * @param geoms {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setGeometryDataArray = function(geoms) {\n    if (geoms instanceof Array) {\n      if (m_geomDataArray !== geoms) {\n        m_geomDataArray = [];\n        m_geomDataArray = geoms;\n        this.modified();\n        return true;\n      }\n    } else {\n      console.log('[error] Requies array of geometry data');\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute bounds of the data\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeBounds = function() {\n    if (m_geomDataArray === null ||\n        m_geomDataArray === undefined) {\n      this.resetBounds();\n      return;\n    }\n\n    var computeBoundsTimestamp = this.computeBoundsTimestamp(),\n        boundsDirtyTimestamp = this.boundsDirtyTimestamp(),\n        m_bounds = this.bounds(),\n        geomBounds = null,\n        i = null;\n\n    if (boundsDirtyTimestamp.getMTime() >\n        computeBoundsTimestamp.getMTime()) {\n\n      for (i = 0; i < m_geomDataArray.length; ++i) {\n        geomBounds = m_geomDataArray[i].bounds();\n\n        if (m_bounds[0] > geomBounds[0]) {\n          m_bounds[0] = geomBounds[0];\n        }\n        if (m_bounds[1] < geomBounds[1]) {\n          m_bounds[1] = geomBounds[1];\n        }\n        if (m_bounds[2] > geomBounds[2]) {\n          m_bounds[2] = geomBounds[2];\n        }\n        if (m_bounds[3] < geomBounds[3]) {\n          m_bounds[3] = geomBounds[3];\n        }\n        if (m_bounds[4] > geomBounds[4]) {\n          m_bounds[4] = geomBounds[4];\n        }\n        if (m_bounds[5] < geomBounds[5]) {\n          m_bounds[5] = geomBounds[5];\n        }\n      }\n\n      this.modified();\n      computeBoundsTimestamp.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the mapper\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function(renderState) {\n    var i = null;\n\n    if (this.getMTime() > m_createMappersTimestamp.getMTime()) {\n      // NOTE Hoping that it will release the graphics resources\n      for (i = 0; i < m_geomDataArray.length; ++i) {\n        m_mappers.push(vgl.mapper());\n        m_mappers[i].setGeometryData(m_geomDataArray[i]);\n      }\n        m_createMappersTimestamp.modified();\n    }\n\n    for (i = 0; i < m_mappers.length; ++i) {\n      m_mappers[i].render(renderState);\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.groupMapper, vgl.mapper);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.materialAttributeType = {\n  \"Undefined\" : 0x0,\n  \"ShaderProgram\" : 0x1,\n  \"Texture\" : 0x2,\n  \"Blend\" : 0x3,\n  \"Depth\" : 0x4\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class materialAttribute\n *\n * @class\n * @param type\n * @returns {vgl.materialAttribute}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.materialAttribute = function(type) {\n  'use strict';\n\n  if (!(this instanceof vgl.materialAttribute)) {\n    return new vgl.materialAttribute();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_type = type,\n      m_enabled = true;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return tyep of the material attribute\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n    return m_type;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return if material attribute is enabled or not\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enabled = function() {\n    return m_enabled;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Setup (initialize) the material attribute\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setup = function(renderState) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind and activate the material attribute\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind and deactivate the material\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize vertex data for the material attribute\n   *\n   * @param renderState\n   * @param key\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setupVertexData = function(renderState, key) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind and activate vertex specific data\n   *\n   * @param renderState\n   * @param key\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind and deactivate vertex specific data\n   *\n   * @param renderState\n   * @param key\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    return false;\n  };\n\n  return this;\n};\n\ninherit(vgl.materialAttribute, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of clas blendFunction\n *\n * @class\n * @param source\n * @param destination\n * @returns {vgl.blendFunction}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.blendFunction = function(source, destination) {\n  'use strict';\n\n  if (!(this instanceof vgl.blendFunction)) {\n    return new vgl.blendFunction(source, destination);\n  }\n\n  /** @private */\n  var m_source = source,\n      m_destination = destination;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Apply blend function to the current state\n   *\n   * @param {vgl.renderState}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.apply = function(renderState) {\n    gl.blendFuncSeparate(m_source, m_destination, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n  };\n\n  return this;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class blend\n *\n * @returns {vgl.blend}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.blend = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.blend)) {\n    return new vgl.blend();\n  }\n  vgl.materialAttribute.call(\n    this, vgl.materialAttributeType.Blend);\n\n  /** @private */\n  var m_wasEnabled = false,\n      m_blendFunction = vgl.blendFunction(gl.SRC_ALPHA,\n                                                gl.ONE_MINUS_SRC_ALPHA);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind blend attribute\n   *\n   * @param {vgl.renderState}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    m_wasEnabled = gl.isEnabled(gl.BLEND);\n\n    if (this.enabled()) {\n      gl.enable(gl.BLEND);\n      m_blendFunction.apply(renderState);\n    }\n    else {\n      gl.disable(gl.BLEND);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind blend attribute\n   *\n   * @param {vgl.renderState}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    if (m_wasEnabled) {\n      gl.enable(gl.BLEND);\n    }\n    else {\n      gl.disable(gl.BLEND);\n    }\n\n    return true;\n  };\n\n  return this;\n};\n\ninherit(vgl.blend, vgl.materialAttribute);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class material\n *\n * @class\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.material = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.material)) {\n    return new vgl.material();\n  }\n  vgl.object.call(this);\n\n  // / Private member variables\n  var m_shaderProgram = new vgl.shaderProgram(),\n      m_binNumber = 100,\n      m_textureAttributes = {},\n      m_attributes = {};\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return bin number for the material\n   *\n   * @default 100\n   * @returns {number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.binNumber = function() {\n    return m_binNumber;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set bin number for the material\n   *\n   * @param binNo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBinNumber = function(binNo) {\n    m_binNumber = binNo;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if incoming attribute already exists in the material\n   *\n   * @param attr\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.exists = function(attr) {\n    if (attr.type() === vgl.materialAttribute.Texture) {\n      return m_textureAttributes.hasOwnProperty(attr);\n    }\n\n    return m_attributes.hasOwnProperty(attr);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get uniform given a name\n\n   * @param name Uniform name\n   * @returns {vgl.uniform}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.uniform = function(name) {\n    if (m_shaderProgram) {\n      return m_shaderProgram.uniform(name);\n    }\n\n    return null;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get material attribute\n\n   * @param attr Attribute name\n   * @returns {vgl.materialAttribute}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.attribute = function(name) {\n    if (m_attributes.hasOwnProperty(name)) {\n      return m_attributes[name];\n    }\n\n    if (m_textureAttributes.hasOwnProperty(name)) {\n      return m_textureAttributes[name];\n    }\n\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set a new attribute for the material\n   *\n   * This method replace any existing attribute except for textures as\n   * materials can have multiple textures.\n   *\n   * @param attr\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setAttribute = function(attr) {\n    if (attr.type() === vgl.materialAttributeType.Texture &&\n        m_textureAttributes[attr.textureUnit()] !== attr) {\n      m_textureAttributes[attr.textureUnit()] = attr;\n      this.modified();\n      return true;\n    }\n\n    if (m_attributes[attr.type()] === attr) {\n      return false;\n    }\n\n    // Shader is a very special attribute\n    if (attr.type() === vgl.materialAttributeType.ShaderProgram) {\n      m_shaderProgram = attr;\n    }\n\n    m_attributes[attr.type()] = attr;\n    this.modified();\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new attribute to the material.\n   *\n   * @param attr\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addAttribute = function(attr) {\n    if (this.exists(attr)) {\n      return false;\n    }\n\n    if (attr.type() === vgl.materialAttributeType.Texture) {\n      // TODO Currently we don't check if we are replacing or not.\n      // It would be nice to have a flag for it.\n      m_textureAttributes[attr.textureUnit()] = attr;\n      this.modified();\n      return true;\n    }\n\n    // Shader is a very special attribute\n    if (attr.type() === vgl.materialAttributeType.ShaderProgram) {\n      m_shaderProgram = attr;\n    }\n\n    m_attributes[attr.type()] = attr;\n    this.modified();\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return shader program used by the material\n   *\n   * @returns {vgl.shaderProgram}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.shaderProgram = function() {\n    return m_shaderProgram;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Activate the material\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function(renderState) {\n    this.bind(renderState);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Deactivate the material\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.remove = function(renderState) {\n    this.undoBind(renderState);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind and activate material states\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    var key = null;\n\n    for (key in m_attributes) {\n      if (m_attributes.hasOwnProperty(key)) {\n        m_attributes[key].bind(renderState);\n      }\n    }\n\n    for (key in m_textureAttributes) {\n      if (m_textureAttributes.hasOwnProperty(key)) {\n        m_textureAttributes[key].bind(renderState);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo-bind and de-activate material states\n   *\n   * @param renderState\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    var key = null;\n    for (key in m_attributes) {\n      if (m_attributes.hasOwnProperty(key)) {\n        m_attributes[key].undoBind(renderState);\n      }\n    }\n\n    for (key in m_textureAttributes) {\n      if (m_textureAttributes.hasOwnProperty(key)) {\n        m_textureAttributes[key].undoBind(renderState);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex data\n   *\n   * @param renderState\n   * @param key\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    var i = null;\n\n    for (i in m_attributes) {\n      if (m_attributes.hasOwnProperty(i)) {\n        m_attributes[i].bindVertexData(renderState, key);\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind vertex data\n   *\n   * @param renderState\n   * @param key\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    var i = null;\n\n    for (i in m_attributes) {\n      if (m_attributes.hasOwnProperty(i)) {\n        m_attributes.undoBindVertexData(renderState, key);\n      }\n    }\n  };\n\n  return this;\n};\n\nvgl.material.RenderBin = {\n  \"Base\" : 0,\n  \"Default\" : 100,\n  \"Opaque\" : 100,\n  \"Transparent\" : 1000,\n  \"Overlay\" : 10000\n};\n\ninherit(vgl.material, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, bitwise:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec2, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderState\n *\n * @returns {vgl.renderState}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.renderState = function() {\n  'use strict';\n\n  this.m_modelViewMatrix = mat4.create();\n  this.m_normalMatrix = mat4.create();\n  this.m_projectionMatrix = null;\n  this.m_material = null;\n  this.m_mapper = null;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderer *\n *\n * @returns {vgl.renderer}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.renderer = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.renderer)) {\n    return new vgl.renderer();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_sceneRoot = new vgl.groupNode(),\n      m_camera = new vgl.camera(),\n      m_nearClippingPlaneTolerance = null,\n      m_x = 0,\n      m_y = 0,\n      m_width = 0,\n      m_height = 0,\n      m_resizable = true,\n      m_resetScene = true,\n      m_layer = 0,\n      m_resetClippingRange = true;\n\n  m_camera.addChild(m_sceneRoot);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get width of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.width = function() {\n    return m_width;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get height of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.height = function() {\n    return m_height;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get layer this renderer is associated with\n   *\n   * @return {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n     return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set the layer this renderer is associated with.\n   *\n   * @param layerNo\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setLayer = function(layerNo) {\n    m_layer = layerNo;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.isResizable = function() {\n    return m_resizable;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setResizable = function(r) {\n    m_resizable = r;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get background color\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.backgroundColor = function() {\n    return m_camera.clearColor();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set background color of the renderer\n   *\n   * @param r\n   * @param g\n   * @param b\n   * @param a\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setBackgroundColor = function(r, g, b, a) {\n    m_camera.setClearColor(r, g, b, a);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get scene root\n   *\n   * @returns {vgl.groupNode}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sceneRoot = function() {\n    return m_sceneRoot;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get main camera of the renderer\n   *\n   * @returns {vgl.camera}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.camera = function() {\n    return m_camera;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the scene\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function() {\n    var i, renSt, children, actor = null, sortedActors = [],\n        mvMatrixInv = mat4.create(), clearColor = null;\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LEQUAL);\n\n    if (m_camera.clearMask() & vgl.GL.ColorBufferBit) {\n      clearColor = m_camera.clearColor();\n      gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n    }\n\n    if (m_camera.clearMask() & vgl.GL.DepthBufferBit) {\n      gl.clearDepth(m_camera.clearDepth());\n    }\n\n    gl.clear(m_camera.clearMask());\n\n    // Set the viewport for this renderer\n    gl.viewport(m_x, m_y, m_width, m_height);\n\n    renSt = new vgl.renderState();\n    children = m_sceneRoot.children();\n\n    if (children.length > 0 && m_resetScene) {\n      this.resetCamera();\n      m_resetScene = false;\n    }\n\n    for ( i = 0; i < children.length; ++i) {\n      actor = children[i];\n      actor.computeBounds();\n      if (!actor.visible()) {\n        continue;\n      }\n\n      sortedActors.push([actor.material().binNumber(), actor]);\n    }\n\n    // Now perform sorting\n    sortedActors.sort(function(a, b) {return a[0] - b[0];});\n\n    for ( i = 0; i < sortedActors.length; ++i) {\n      actor = sortedActors[i][1];\n\n      if (actor.referenceFrame() ===\n          vgl.boundingObject.ReferenceFrame.Relative) {\n        mat4.multiply(renSt.m_modelViewMatrix, m_camera.viewMatrix(),\n          actor.matrix());\n        renSt.m_projectionMatrix = m_camera.projectionMatrix();\n      } else {\n        renSt.m_modelViewMatrix = actor.matrix();\n        renSt.m_projectionMatrix = mat4.create();\n        mat4.ortho(renSt.m_projectionMatrix, 0, m_width, 0, m_height, -1, 1);\n      }\n\n      mat4.invert(mvMatrixInv, renSt.m_modelViewMatrix);\n      mat4.transpose(renSt.m_normalMatrix, mvMatrixInv);\n      renSt.m_material = actor.material();\n      renSt.m_mapper = actor.mapper();\n\n      // TODO Fix this shortcut\n      renSt.m_material.render(renSt);\n      renSt.m_mapper.render(renSt);\n      renSt.m_material.remove(renSt);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Automatically set up the camera based on visible actors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetCamera = function() {\n    m_camera.computeBounds();\n\n    var vn = m_camera.directionOfProjection(),\n        visibleBounds = m_camera.bounds(),\n        center = [\n          (visibleBounds[0] + visibleBounds[1]) / 2.0,\n          (visibleBounds[2] + visibleBounds[3]) / 2.0,\n          (visibleBounds[4] + visibleBounds[5]) / 2.0\n        ],\n        diagonals = [\n          visibleBounds[1] - visibleBounds[0],\n          visibleBounds[3] - visibleBounds[2],\n          visibleBounds[5] - visibleBounds[4]\n        ],\n        radius = 0.0,\n        aspect = m_camera.viewAspect(),\n        angle = m_camera.viewAngle(),\n        distance = null,\n        vup = null;\n\n    if (diagonals[0] > diagonals[1]) {\n      if (diagonals[0] > diagonals[2]) {\n        radius = diagonals[0] / 2.0;\n      } else {\n        radius = diagonals[2] / 2.0;\n      }\n    } else {\n      if (diagonals[1] > diagonals[2]) {\n        radius = diagonals[1] / 2.0;\n      } else {\n        radius = diagonals[2] / 2.0;\n      }\n    }\n\n    // @todo Need to figure out what's happening here\n    if (aspect >= 1.0) {\n      angle = 2.0 * Math.atan(Math.tan(angle * 0.5) / aspect);\n    } else {\n      angle = 2.0 * Math.atan(Math.tan(angle * 0.5) * aspect);\n    }\n\n    distance = radius / Math.sin(angle * 0.5);\n    vup = m_camera.viewUpDirection();\n\n    if (Math.abs(vec3.dot(vup, vn)) > 0.999) {\n      m_camera.setViewUpDirection(-vup[2], vup[0], vup[1]);\n    }\n\n    m_camera.setFocalPoint(center[0], center[1], center[2]);\n    m_camera.setPosition(center[0] + distance * -vn[0],\n      center[1] + distance * -vn[1], center[2] + distance * -vn[2]);\n\n    this.resetCameraClippingRange(visibleBounds);\n  };\n\n  this.hasValidBounds = function(bounds) {\n    if (bounds[0] == Number.MAX_VALUE ||\n        bounds[1] == -Number.MAX_VALUE ||\n        bounds[2] == Number.MAX_VALUE ||\n        bounds[3] == -Number.MAX_VALUE ||\n        bounds[4] == Number.MAX_VALUE ||\n        bounds[5] == -Number.MAX_VALUE)  {\n      return false;\n    }\n\n    return true;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Recalculate camera's clipping range\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetCameraClippingRange = function(bounds) {\n    if (typeof bounds === 'undefined') {\n      m_camera.computeBounds();\n      bounds = m_camera.bounds();\n    }\n\n    if (!this.hasValidBounds(bounds)) {\n      return;\n    }\n\n    var vn = m_camera.viewPlaneNormal(),\n        position = m_camera.position(),\n        a = -vn[0],\n        b = -vn[1],\n        c = -vn[2],\n        d = -(a*position[0] + b*position[1] + c*position[2]),\n        range = vec2.create(),\n        dist = null,\n        i = null,\n        j = null,\n        k = null;\n\n    if (!m_resetClippingRange) {\n        return;\n    }\n\n    // Set the max near clipping plane and the min far clipping plane\n    range[0] = a * bounds[0] + b * bounds[2] + c * bounds[4] + d;\n    range[1] = 1e-18;\n\n    // Find the closest / farthest bounding box vertex\n    for (k = 0; k < 2; k++ ) {\n      for (j = 0; j < 2; j++) {\n        for (i = 0; i < 2; i++) {\n          dist = a * bounds[i] + b * bounds[2 + j] + c * bounds[4 + k] + d;\n          range[0] = (dist < range[0]) ? (dist) : (range[0]);\n          range[1] = (dist > range[1]) ? (dist) : (range[1]);\n        }\n      }\n    }\n\n    // Do not let the range behind the camera throw off the calculation.\n    if (range[0] < 0.0) {\n      range[0] = 0.0;\n    }\n\n    // Give ourselves a little breathing room\n    range[0] = 0.99 * range[0] - (range[1] - range[0]) * 0.5;\n    range[1] = 1.01 * range[1] + (range[1] - range[0]) * 0.5;\n\n    // Make sure near is not bigger than far\n    range[0] = (range[0] >= range[1]) ? (0.01 * range[1]) : (range[0]);\n\n    // Make sure near is at least some fraction of far - this prevents near\n    // from being behind the camera or too close in front. How close is too\n    // close depends on the resolution of the depth buffer.\n    if (!m_nearClippingPlaneTolerance) {\n      m_nearClippingPlaneTolerance = 0.01;\n\n      if (gl !== null && gl.getParameter(gl.DEPTH_BITS) > 16) {\n        m_nearClippingPlaneTolerance = 0.001;\n      }\n    }\n\n    // make sure the front clipping range is not too far from the far clippnig\n    // range, this is to make sure that the zbuffer resolution is effectively\n    // used.\n    if (range[0] < m_nearClippingPlaneTolerance*range[1]) {\n       range[0] = m_nearClippingPlaneTolerance*range[1];\n    }\n\n    m_camera.setClippingRange(range[0], range[1]);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize viewport given a width and height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resize = function(width, height) {\n    // @note: where do m_x and m_y come from?\n    this.positionAndResize(m_x, m_y, width, height);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize viewport given a position, width and height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.positionAndResize = function(x, y, width, height) {\n    // TODO move this code to camera\n    if (x < 0 || y < 0 || width < 0 || height < 0) {\n      console.log('[error] Invalid position and resize values',\n        x, y, width, height);\n    }\n\n    //If we're allowing this renderer to resize ...\n    if (m_resizable) {\n      m_width = width;\n      m_height = height;\n\n      m_camera.setViewAspect(m_width / m_height);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add new actor to the collection\n   *\n   * @param actor\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addActor = function(actor) {\n    if (actor instanceof vgl.actor) {\n      m_sceneRoot.addChild(actor);\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return true if this renderer has this actor attached, false otherwise.\n   *\n   * @param actor\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasActor = function(actor) {\n      return m_sceneRoot.hasChild(actor);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add an array of actors to the collection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addActors = function(actors) {\n    var i = null;\n    if (actors instanceof Array) {\n      for (i = 0; i < actors.length; ++i) {\n        m_sceneRoot.addChild(actors[i]);\n      }\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove the actor from the collection\n   *\n   * @param actor\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeActor = function(actor) {\n    if (m_sceneRoot.children().indexOf(actor) !== -1) {\n      m_sceneRoot.removeChild(actor);\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove actors from the collection\n   *\n   * @param actors\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeActors = function(actors) {\n    if (!(actors instanceof Array)) {\n      return false;\n    }\n\n    var i;\n    for (i = 0; i < actors.length; ++i) {\n      m_sceneRoot.removeChild(actors[i]);\n    }\n    this.modified();\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove all actors for a renderer\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeAllActors = function() {\n    return m_sceneRoot.removeChildren();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in the world space to display space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function(worldPt, viewMatrix, projectionMatrix, width,\n                                 height) {\n    var viewProjectionMatrix = mat4.create(),\n        winX = null,\n        winY = null,\n        winZ = null,\n        winW = null,\n        clipPt = null;\n\n\n    mat4.multiply(viewProjectionMatrix, projectionMatrix, viewMatrix);\n\n    // Transform world to clipping coordinates\n    clipPt = vec4.create();\n    vec4.transformMat4(clipPt, worldPt, viewProjectionMatrix);\n\n    if (clipPt[3] !== 0.0) {\n      clipPt[0] = clipPt[0] / clipPt[3];\n      clipPt[1] = clipPt[1] / clipPt[3];\n      clipPt[2] = clipPt[2] / clipPt[3];\n      clipPt[3] = 1.0;\n    }\n\n    winX = (((clipPt[0]) + 1) / 2.0) * width;\n    // We calculate -point3D.getY() because the screen Y axis is\n    // oriented top->down\n    winY = ((1 - clipPt[1]) / 2.0) * height;\n    winZ = clipPt[2];\n    winW = clipPt[3];\n\n    return vec4.fromValues(winX, winY, winZ, winW);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in display space to world space\n   * @param displayPt\n   * @param viewMatrix\n   * @param projectionMatrix\n   * @param width\n   * @param height\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function(displayPt, viewMatrix, projectionMatrix,\n                                 width, height) {\n    var x = (2.0 * displayPt[0] / width) - 1,\n        y = -(2.0 * displayPt[1] / height) + 1,\n        z = displayPt[2],\n        viewProjectionInverse = mat4.create(),\n        worldPt = null;\n\n    mat4.multiply(viewProjectionInverse, projectionMatrix, viewMatrix);\n    mat4.invert(viewProjectionInverse, viewProjectionInverse);\n\n    worldPt = vec4.fromValues(x, y, z, 1);\n    vec4.transformMat4(worldPt, worldPt, viewProjectionInverse);\n    if (worldPt[3] !== 0.0) {\n      worldPt[0] = worldPt[0] / worldPt[3];\n      worldPt[1] = worldPt[1] / worldPt[3];\n      worldPt[2] = worldPt[2] / worldPt[3];\n      worldPt[3] = 1.0;\n    }\n\n    return worldPt;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the focusDisplayPoint\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.focusDisplayPoint = function() {\n    var focalPoint = m_camera.focalPoint(),\n      focusWorldPt = vec4.fromValues(\n        focalPoint[0], focalPoint[1], focalPoint[2], 1);\n\n    return this.worldToDisplay(\n      focusWorldPt, m_camera.viewMatrix(),\n      m_camera.projectionMatrix(), m_width, m_height);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Will the scene be reset.\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetScene = function() {\n    return m_resetScene;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * If true the scene will be reset, otherwise the scene will not be\n   * automatically reset.\n   *\n   * @param reset\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setResetScene = function(reset) {\n     if (m_resetScene !== reset) {\n       m_resetScene = reset;\n       this.modified()\n     }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Will the clipping range be reset\n   * @returns {bool}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resetClippingRange = function() {\n    return m_resetClippingRange;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * If true the camera clipping range will be reset, otherwise the scene will\n   * not be automatically reset.\n   *\n   * @param reset\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setResetClippingRange = function(reset) {\n     if (m_resetClippingRange !== reset) {\n       m_resetClippingRange = reset;\n       this.modified()\n     }\n  };\n\n  return this;\n};\n\ninherit(vgl.renderer, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n// TODO Current we support only one context\nvar gl = null;\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderWindow\n *\n * @class\n * @returns {vgl.renderWindow}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.renderWindow = function(canvas) {\n  'use strict';\n\n  if (!(this instanceof vgl.renderWindow)) {\n    return new vgl.renderWindow(canvas);\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_x = 0,\n      m_y = 0,\n      m_width = 400,\n      m_height = 400,\n      m_canvas = canvas,\n      m_activeRender = null,\n      m_renderers = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get size of the render window\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.windowSize = function() {\n    return [ m_width, m_height ];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set size of the render window\n   *\n   * @param width\n   * @param height\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setWindowSize = function(width, height) {\n\n    if (m_width !== width || m_height !== height) {\n      m_width = width;\n      m_height = height;\n\n      this.modified();\n\n      return true;\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get window position (top left coordinates)\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.windowPosition = function() {\n    return [ m_x, m_y ];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set window position (top left coordinates)\n   *\n   * @param x\n   * @param y\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setWindowPosition = function(x, y) {\n    if ((m_x !== x) || (m_y !== y)) {\n      m_x = x;\n      m_y = y;\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return all renderers contained in the render window\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderers = function() {\n    return m_renderers;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get active renderer of the the render window\n   *\n   * @returns vgl.renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.activeRenderer = function() {\n    return m_activeRender;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add renderer to the render window\n   *\n   * @param ren\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.addRenderer = function(ren) {\n    if (this.hasRenderer(ren) === false) {\n      m_renderers.push(ren);\n      if (m_activeRender === null) {\n        m_activeRender = ren;\n      }\n      if (ren.layer() !== 0) {\n        ren.camera().setClearMask(vgl.GL.DepthBufferBit);\n      }\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove renderer from the render window\n   *\n   * @param ren\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.removeRenderer = function(ren) {\n    var index = m_renderers.indexOf(ren);\n    if (index !== -1) {\n      if (m_activeRender === ren) {\n        m_activeRender = null;\n      }\n      m_renderers.splice(index, 1);\n      this.modified();\n      return true;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return a renderer at a given index\n   *\n   * @param index\n   * @returns {vgl.renderer}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getRenderer = function(index) {\n    if (index < m_renderers.length) {\n      return m_renderers[index];\n    }\n\n    console.log(\"[WARNING] Out of index array\");\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if the renderer exists\n   *\n   * @param ren\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.hasRenderer = function(ren) {\n    var i;\n    for (i = 0; i < m_renderers.length; ++i) {\n      if (ren === m_renderers[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize window\n   *\n   * @param width\n   * @param height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resize = function(width, height) {\n    this.positionAndResize(m_x, m_y, width, height);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize and reposition the window\n   *\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.positionAndResize = function(x, y, width, height) {\n    m_x = x;\n    m_y = y;\n    m_width = width;\n    m_height = height;\n    var i;\n    for (i = 0; i < m_renderers.length; ++i) {\n      m_renderers[i].positionAndResize(m_x, m_y, m_width, m_height);\n    }\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create the window\n   *\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createWindow = function() {\n    // Initialize the global variable gl to null.\n    gl = null;\n\n    try {\n      // Try to grab the standard context. If it fails, fallback to\n      // experimental.\n      gl = m_canvas.getContext(\"webgl\")\n           || m_canvas.getContext(\"experimental-webgl\");\n\n      // Set width and height of renderers if not set already\n      var i;\n      for (i = 0; i < m_renderers.length; ++i) {\n        if ((m_renderers[i].width() > m_width) || m_renderers[i].width() === 0\n            || (m_renderers[i].height() > m_height)\n            || m_renderers[i].height() === 0) {\n          m_renderers[i].resize(m_x, m_y, m_width, m_height);\n        }\n      }\n\n      return true;\n    }\n    catch (e) {\n    }\n\n    // If we don't have a GL context, give up now\n    if (!gl) {\n      console(\"[ERROR] Unable to initialize WebGL. Your browser may not support it.\");\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete this window and release any graphics resources\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteWindow = function() {\n    // TODO\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render the scene\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function() {\n    var i;\n    m_renderers.sort(function(a, b) {return a.layer() - b.layer();});\n    for (i = 0; i < m_renderers.length; ++i) {\n      m_renderers[i].render();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the focusDisplayPoint from the activeRenderer\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.focusDisplayPoint = function() {\n    return m_activeRender.focusDisplayPoint();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in display space to world space\n   * @param {Number} x\n   * @param {Number} y\n   * @param {vec4} focusDisplayPoint\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function(x, y, focusDisplayPoint, ren) {\n    ren = ren === undefined ? ren = m_activeRender : ren;\n\n    var camera = ren.camera();\n    if(!focusDisplayPoint) {\n      focusDisplayPoint = ren.focusDisplayPoint();\n    }\n\n    return ren.displayToWorld(\n      vec4.fromValues(x, y, focusDisplayPoint[2], 1.0), camera.viewMatrix(),\n      camera.projectionMatrix(), m_width, m_height);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point in display space to world space\n   * @param {Number} x\n   * @param {Number} y\n   * @param {vec4} focusDisplayPoint\n   * @returns {vec4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function(x, y, z, ren) {\n    ren = ren === undefined ? ren = m_activeRender : ren;\n\n    var camera = ren.camera();\n\n    return ren.worldToDisplay(\n      vec4.fromValues(x, y, z, 1.0), camera.viewMatrix(),\n      camera.projectionMatrix(), m_width, m_height);\n  };\n\n  return this;\n};\n\ninherit(vgl.renderWindow, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2, bitwise: true*/\n\n/*global vgl, gl, ogs, vec3, vec4, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class camera\n *\n * @class\n * @returns {vgl.camera}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.camera = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.camera)) {\n    return new vgl.camera();\n  }\n  vgl.groupNode.call(this);\n\n  /** @private */\n  var m_viewAngle = (Math.PI * 30) / 180.0,\n      m_position = vec4.fromValues(0.0, 0.0, 1.0, 1.0),\n      m_focalPoint = vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n      m_centerOfRotation = vec3.fromValues(0.0, 0.0, 0.0),\n      m_viewUp = vec4.fromValues(0.0, 1.0, 0.0, 0.0),\n      m_rightDir = vec4.fromValues(1.0, 0.0, 0.0, 0.0),\n      m_near = 0.01,\n      m_far = 10000.0,\n      m_viewAspect = 1.0,\n      m_directionOfProjection = vec4.fromValues(0.0, 0.0, -1.0, 0.0),\n      m_viewPlaneNormal = vec4.fromValues(0.0, 0.0, 1.0, 0.0),\n      m_viewMatrix = mat4.create(),\n      m_projectionMatrix = mat4.create(),\n      m_computeModelViewMatrixTime = vgl.timestamp(),\n      m_computeProjectMatrixTime = vgl.timestamp(),\n      m_left = -1.0,\n      m_right = 1.0,\n      m_top = +1.0,\n      m_bottom = -1.0,\n      m_enableTranslation = true,\n      m_enableRotation = true,\n      m_enableScale = true,\n      m_enableParallelProjection = false,\n      m_clearColor = [1.0, 1.0, 1.0, 1.0],\n      m_clearDepth = 1.0,\n      m_clearMask = vgl.GL.ColorBufferBit |\n                    vgl.GL.DepthBufferBit;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get view angle of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewAngle = function() {\n    return m_viewAngle;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view angle of the camera in degrees, which is converted to radians.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewAngleDegrees = function(a) {\n    m_viewAngle = (Math.PI * a) / 180.0;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view angle of the camera in degrees, which is converted to radians.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewAngle = function(a) {\n    if (m_enableScale) {\n      m_viewAngle = a;\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get position of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function() {\n    return m_position;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set position of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPosition = function(x, y, z) {\n    if (m_enableTranslation) {\n      m_position = vec4.fromValues(x, y, z, 1.0);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get focal point of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.focalPoint = function() {\n    return m_focalPoint;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set focal point of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setFocalPoint = function(x, y, z) {\n    if (m_enableRotation && m_enableTranslation) {\n      m_focalPoint = vec4.fromValues(x, y, z, 1.0);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get view-up direction of camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewUpDirection = function() {\n    return m_viewUp;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view-up direction of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewUpDirection = function(x, y, z) {\n    m_viewUp = vec4.fromValues(x, y, z, 0);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get center of rotation for camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.centerOfRotation = function() {\n    return m_centerOfRotation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set center of rotation for camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setCenterOfRotation = function(centerOfRotation) {\n    m_centerOfRotation = centerOfRotation;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get clipping range of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clippingRange = function() {\n    return [m_near, m_far];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set clipping range of the camera\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClippingRange = function(near, far) {\n    m_near = near;\n    m_far = far;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get view aspect\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewAspect = function() {\n    return m_viewAspect;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set view aspect\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewAspect = function(aspect) {\n    m_viewAspect = aspect;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active mode for scaling (enabled / disabled)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableScale = function(flag) {\n    return m_enableScale;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable/disable scaling\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnableScale = function(flag) {\n    if (flag !== m_enableScale) {\n      m_enableScale = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableScale;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active mode for rotation (enabled / disabled)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableRotation = function(f) {\n    return m_enableRotation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable rotation\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnableRotation = function(flag) {\n    if (flag !== m_enableRotation) {\n      m_enableRotation = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableRotation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return active mode for translation (enabled/disabled)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableTranslation = function(flag) {\n    return m_enableTranslation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable translation\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnableTranslation = function(flag) {\n    if (flag !== m_enableTranslation) {\n      m_enableTranslation = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableTranslation;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return if parallel projection is enabled\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.isEnabledParallelProjection = function() {\n    return m_enableParallelProjection;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable parallel projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.enableParallelProjection = function(flag) {\n    if (flag !== m_enableParallelProjection) {\n      m_enableParallelProjection = flag;\n      this.modified();\n      return true;\n    }\n\n    return m_enableParallelProjection;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Enable / disable parallel projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setEnnableParallelProjection = function(flag) {\n    return enableParallelProjection();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set parallel projection parameters\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setParallelProjection = function(left, right, top, bottom) {\n    m_left = left;\n    m_right = right;\n    m_top = top;\n    m_bottom = bottom;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return direction of projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.directionOfProjection = function() {\n    this.computeDirectionOfProjection();\n    return m_directionOfProjection;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return view plane normal direction\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewPlaneNormal = function() {\n    this.computeViewPlaneNormal();\n    return m_viewPlaneNormal;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return view-matrix for the camera This method does not compute the\n   * view-matrix for the camera. It is assumed that a call to computeViewMatrix\n   * has been made earlier.\n   *\n   * @returns {mat4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewMatrix = function() {\n    return this.computeViewMatrix();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return camera projection matrix This method does not compute the\n   * projection-matrix for the camera. It is assumed that a call to\n   * computeProjectionMatrix has been made earlier.\n   *\n   * @returns {mat4}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.projectionMatrix = function() {\n    return this.computeProjectionMatrix();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return clear mask used by this camera\n   *\n   * @returns {number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clearMask = function() {\n    return m_clearMask;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set clear mask for camera\n   *\n   * @param mask\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClearMask = function(mask) {\n    m_clearMask = mask;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get clear color (background color) of the camera\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clearColor = function() {\n    return m_clearColor;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set clear color (background color) for the camera\n   *\n   * @param color RGBA\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClearColor = function(r, g, b, a) {\n    m_clearColor[0] = r;\n    m_clearColor[1] = g;\n    m_clearColor[2] = b;\n    m_clearColor[3] = a;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   * @returns {{1.0: null}}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clearDepth = function() {\n    return m_clearDepth;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   *\n   * @param depth\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setClearDepth = function(depth) {\n    m_clearDepth = depth;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute direction of projection\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeDirectionOfProjection = function() {\n    vec3.subtract(m_directionOfProjection, m_focalPoint, m_position);\n    vec3.normalize(m_directionOfProjection, m_directionOfProjection);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute view plane normal\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeViewPlaneNormal = function() {\n    m_viewPlaneNormal[0] = -m_directionOfProjection[0];\n    m_viewPlaneNormal[1] = -m_directionOfProjection[1];\n    m_viewPlaneNormal[2] = -m_directionOfProjection[2];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Move camera closer or further away from the scene\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.zoom = function(d, dir) {\n    if (d === 0) {\n      return;\n    }\n\n    if (!m_enableTranslation) {\n      return;\n    }\n\n    d = d * vec3.distance(m_focalPoint, m_position);\n    if (!dir) {\n      dir = m_directionOfProjection;\n      m_position[0] = m_focalPoint[0] - d * dir[0];\n      m_position[1] = m_focalPoint[1] - d * dir[1];\n      m_position[2] = m_focalPoint[2] - d * dir[2];\n    } else {\n      m_position[0] = m_position[0]  + d * dir[0];\n      m_position[1] = m_position[1]  + d * dir[1];\n      m_position[2] = m_position[2]  + d * dir[2];\n    }\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Move camera sideways\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pan = function(dx, dy, dz) {\n    if (!m_enableTranslation) {\n      return;\n    }\n\n    m_position[0] += dx;\n    m_position[1] += dy;\n    m_position[2] += dz;\n\n    m_focalPoint[0] += dx;\n    m_focalPoint[1] += dy;\n    m_focalPoint[2] += dz;\n\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute camera coordinate axes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeOrthogonalAxes = function() {\n    this.computeDirectionOfProjection();\n    vec3.cross(m_rightDir, m_directionOfProjection, m_viewUp);\n    vec3.normalize(m_rightDir, m_rightDir);\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Rotate camera around center of rotation\n   * @param dx Rotation around vertical axis in degrees\n   * @param dy Rotation around horizontal axis in degrees\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.rotate = function(dx, dy) {\n    if (!m_enableRotation) {\n      return;\n    }\n\n    // Convert degrees into radians\n    dx = 0.5 * dx * (Math.PI / 180.0);\n    dy = 0.5 * dy * (Math.PI / 180.0);\n\n    var mat = mat4.create(),\n        inverseCenterOfRotation = new vec3.create();\n\n    mat4.identity(mat);\n\n    inverseCenterOfRotation[0] = -m_centerOfRotation[0];\n    inverseCenterOfRotation[1] = -m_centerOfRotation[1];\n    inverseCenterOfRotation[2] = -m_centerOfRotation[2];\n\n    mat4.translate(mat, mat, m_centerOfRotation);\n    mat4.rotate(mat, mat, dx, m_viewUp);\n    mat4.rotate(mat, mat, dy, m_rightDir);\n    mat4.translate(mat, mat, inverseCenterOfRotation);\n\n    vec4.transformMat4(m_position, m_position, mat);\n    vec4.transformMat4(m_focalPoint, m_focalPoint, mat);\n\n    // Update viewup vector\n    vec4.transformMat4(m_viewUp, m_viewUp, mat);\n    vec4.normalize(m_viewUp, m_viewUp);\n\n    // Update direction of projection\n    this.computeOrthogonalAxes();\n\n    // Mark modified\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute camera view matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeViewMatrix = function() {\n    if (m_computeModelViewMatrixTime.getMTime() < this.getMTime()) {\n      mat4.lookAt(m_viewMatrix, m_position, m_focalPoint, m_viewUp);\n      m_computeModelViewMatrixTime.modified();\n    }\n    return m_viewMatrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute camera projection matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeProjectionMatrix = function() {\n    if (m_computeProjectMatrixTime.getMTime() < this.getMTime()) {\n      if (!m_enableParallelProjection) {\n        mat4.perspective(m_projectionMatrix, m_viewAngle, m_viewAspect, m_near, m_far);\n      } else {\n        console.log('paralle projection');\n        mat4.ortho(m_projectionMatrix,\n          m_left, m_right, m_bottom, m_top, m_near, m_far);\n      }\n\n      m_computeProjectMatrixTime.modified();\n    }\n\n    return m_projectionMatrix;\n  };\n\n  this.computeDirectionOfProjection();\n\n  return this;\n};\n\ninherit(vgl.camera, vgl.groupNode);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class interactorStyle\n *\n * @class vgl.interactorStyle\n * interactorStyle is a base class for all interactor styles\n * @returns {vgl.interactorStyle}\n */\n////////////////////////////////////////////////////////////////////////////\nvgl.interactorStyle = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.interactorStyle)) {\n    return new vgl.interactorStyle();\n  }\n  vgl.object.call(this);\n\n  // Private member variables\n  var m_that = this,\n      m_viewer = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return viewer referenced by the interactor style\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewer = function() {\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set viewer for the interactor style\n   *\n   * @param viewer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setViewer = function(viewer) {\n    if (viewer !== m_viewer) {\n      m_viewer = viewer;\n      $(m_viewer).on(vgl.event.mousePress, m_that.handleMouseDown);\n      $(m_viewer).on(vgl.event.mouseRelease, m_that.handleMouseUp);\n      $(m_viewer).on(vgl.event.mouseMove, m_that.handleMouseMove);\n      $(m_viewer).on(vgl.event.mouseOut, m_that.handleMouseOut);\n      $(m_viewer).on(vgl.event.mouseWheel, m_that.handleMouseWheel);\n      $(m_viewer).on(vgl.event.keyPress, m_that.handleKeyPress);\n      $(m_viewer).on(vgl.event.mouseContextMenu, m_that.handleContextMenu);\n      $(m_viewer).on(vgl.event.click, m_that.handleClick);\n      $(m_viewer).on(vgl.event.dblClick, m_that.handleDoubleClick);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseOut = function(event) {\n    return true;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseWheel = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleClick = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle double click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleDoubleClick = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle key press event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleKeyPress = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle context menu event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleContextMenu = function(event) {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset to default\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.reset = function() {\n    return true;\n  };\n\n  return this;\n};\n\ninherit(vgl.interactorStyle, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of trackballInteractorStyle\n *\n * @class vgl.trackballInteractorStyle\n * @returns {vgl.trackballInteractorStyle}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.trackballInteractorStyle = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.trackballInteractorStyle)) {\n    return new vgl.trackballInteractorStyle();\n  }\n  vgl.interactorStyle.call(this);\n  var m_that = this,\n      m_leftMouseBtnDown = false,\n      m_rightMouseBtnDown = false,\n      m_midMouseBtnDown = false,\n      m_outsideCanvas,\n      m_currPos = {x: 0, y: 0},\n      m_lastPos = {x: 0, y: 0};\n\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    var canvas = m_that.viewer().canvas(),\n        width = m_that.viewer().renderWindow().windowSize()[0],\n        height = m_that.viewer().renderWindow().windowSize()[1],\n        ren = m_that.viewer().renderWindow().activeRenderer(),\n        cam = ren.camera(), coords = m_that.viewer().relMouseCoords(event),\n        fp, fdp, fwp, dp1, dp2, wp1, wp2, coords, dx, dy, dz,\n        coords, m_zTrans;\n\n    m_outsideCanvas = false;\n    m_currPos = {x: 0, y: 0};\n\n    if ((coords.x < 0) || (coords.x > width)) {\n      m_currPos.x = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currPos.x = coords.x;\n    }\n    if ((coords.y < 0) || (coords.y > height)) {\n      m_currPos.y = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currPos.y = coords.y;\n    }\n    if (m_outsideCanvas === true) {\n      return;\n    }\n\n    fp = cam.focalPoint();\n    fwp = vec4.fromValues(fp[0], fp[1], fp[2], 1);\n    fdp = ren.worldToDisplay(fwp, cam.viewMatrix(),\n                              cam.projectionMatrix(), width, height);\n\n    dp1 = vec4.fromValues(m_currPos.x, m_currPos.y, fdp[2], 1.0);\n    dp2 = vec4.fromValues(m_lastPos.x, m_lastPos.y, fdp[2], 1.0);\n\n    wp1 = ren.displayToWorld(dp1, cam.viewMatrix(), cam.projectionMatrix(),\n                             width, height);\n    wp2 = ren.displayToWorld(dp2, cam.viewMatrix(), cam.projectionMatrix(),\n                             width, height);\n\n    dx = wp1[0] - wp2[0];\n    dy = wp1[1] - wp2[1];\n    dz = wp1[2] - wp2[2];\n\n    if (m_midMouseBtnDown) {\n      cam.pan(-dx, -dy, -dz);\n      m_that.viewer().render();\n    }\n    if (m_leftMouseBtnDown) {\n      cam.rotate((m_lastPos.x - m_currPos.x),\n      (m_lastPos.y - m_currPos.y));\n      ren.resetCameraClippingRange();\n      m_that.viewer().render();\n    }\n    if (m_rightMouseBtnDown) {\n      /// 2.0 is the speed up factor\n      m_zTrans = 2.0 * (m_currPos.y - m_lastPos.y) / height;\n\n      // Calculate zoom scale here\n      if (m_zTrans > 0) {\n        cam.zoom(1 - Math.abs(m_zTrans));\n      } else {\n        cam.zoom(1 + Math.abs(m_zTrans));\n      }\n      ren.resetCameraClippingRange();\n      m_that.viewer().render();\n    }\n    m_lastPos.x = m_currPos.x;\n    m_lastPos.y = m_currPos.y;\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    var coords;\n\n    if (event.button === 0) {\n      m_leftMouseBtnDown = true;\n    }\n    if (event.button === 1) {\n      m_midMouseBtnDown = true;\n    }\n    if (event.button === 2) {\n      m_rightMouseBtnDown = true;\n    }\n    coords = m_that.view.relMouseCoords(event);\n    if (coords.x < 0) {\n      m_lastPos.x = 0;\n    } else {\n      m_lastPos.x = coords.x;\n    }\n    if (coords.y < 0) {\n      m_lastPos.y = 0;\n    } else {\n      m_lastPos.y = coords.y;\n    }\n    return false;\n  };\n\n  // @note We never get mouse up from scroll bar: See the bug report here\n  // http://bugs.jquery.com/ticket/8184\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    if (event.button === 0) {\n      m_leftMouseBtnDown = false;\n    }\n    if (event.button === 1) {\n      m_midMouseBtnDown = false;\n    }\n    if (event.button === 2) {\n      m_rightMouseBtnDown = false;\n    }\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseWheel = function(event) {\n    var ren = m_that.viewer().renderWindow().activeRenderer(),\n        cam = ren.camera();\n\n    // TODO Compute zoom factor intelligently\n    if (event.originalEvent.wheelDelta < 0) {\n      cam.zoom(0.9);\n    } else {\n      cam.zoom(1.1);\n    }\n    ren.resetCameraClippingRange();\n    m_that.viewer().render();\n    return true;\n  };\n\n  return this;\n};\ninherit(vgl.trackballInteractorStyle, vgl.interactorStyle);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of pvwInteractorStyle (for ParaViewWeb)\n *\n * @class vgl.pvwInteractorStyle\n * @returns {vgl.pvwInteractorStyle}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.pvwInteractorStyle = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.pvwInteractorStyle)) {\n    return new vgl.pvwInteractorStyle();\n  }\n  vgl.trackballInteractorStyle.call(this);\n  var m_that = this,\n      m_leftMouseButtonDown = false,\n      m_rightMouseButtonDown = false,\n      m_middleMouseButtonDown = false,\n      m_width,\n      m_height,\n      m_renderer,\n      m_camera,\n      m_outsideCanvas,\n      m_coords,\n      m_currentMousePos,\n      m_focalPoint,\n      m_focusWorldPt,\n      m_focusDisplayPt,\n      m_displayPt1,\n      m_displayPt2,\n      m_worldPt1,\n      m_worldPt2,\n      m_dx,\n      m_dy,\n      m_dz,\n      m_zTrans,\n      m_mouseLastPos = {\n        x: 0,\n        y: 0\n      };\n\n  function render() {\n    m_renderer.resetCameraClippingRange();\n    m_that.viewer().render();\n  }\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    var rens = [], i = null, secCameras = [], deltaxy = null;\n        m_width = m_that.viewer().renderWindow().windowSize()[0];\n        m_height = m_that.viewer().renderWindow().windowSize()[1];\n        m_renderer = m_that.viewer().renderWindow().activeRenderer();\n        m_camera = m_renderer.camera();\n        m_outsideCanvas = false;\n        m_coords = m_that.viewer().relMouseCoords(event);\n        m_currentMousePos = {\n          x: 0,\n          y: 0\n        };\n\n    // Get secondary cameras\n    rens = m_that.viewer().renderWindow().renderers();\n    for (i = 0; i < rens.length; ++i) {\n      if (m_renderer !== rens[i]) {\n        secCameras.push(rens[i].camera());\n      }\n    }\n\n    if ((m_coords.x < 0) || (m_coords.x > m_width)) {\n      m_currentMousePos.x = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currentMousePos.x = m_coords.x;\n    }\n    if ((m_coords.y < 0) || (m_coords.y > m_height)) {\n      m_currentMousePos.y = 0;\n      m_outsideCanvas = true;\n    } else {\n      m_currentMousePos.y = m_coords.y;\n    }\n    if (m_outsideCanvas === true) {\n      return;\n    }\n    m_focalPoint = m_camera.focalPoint();\n    m_focusWorldPt = vec4.fromValues(m_focalPoint[0], m_focalPoint[1], m_focalPoint[2], 1);\n    m_focusDisplayPt = m_renderer.worldToDisplay(m_focusWorldPt, m_camera.viewMatrix(),\n      m_camera.projectionMatrix(), m_width, m_height);\n    m_displayPt1 = vec4.fromValues(\n      m_currentMousePos.x, m_currentMousePos.y, m_focusDisplayPt[2], 1.0);\n    m_displayPt2 = vec4.fromValues(\n      m_mouseLastPos.x, m_mouseLastPos.y, m_focusDisplayPt[2], 1.0);\n    m_worldPt1 = m_renderer.displayToWorld(\n      m_displayPt1, m_camera.viewMatrix(), m_camera.projectionMatrix(), m_width, m_height);\n    m_worldPt2 = m_renderer.displayToWorld(\n      m_displayPt2, m_camera.viewMatrix(), m_camera.projectionMatrix(), m_width, m_height);\n\n    m_dx = m_worldPt1[0] - m_worldPt2[0];\n    m_dy = m_worldPt1[1] - m_worldPt2[1];\n    m_dz = m_worldPt1[2] - m_worldPt2[2];\n\n    if (m_middleMouseButtonDown) {\n      m_camera.pan(-m_dx, -m_dy, -m_dz);\n      render();\n    }\n    if (m_leftMouseButtonDown) {\n      deltaxy = [(m_mouseLastPos.x - m_currentMousePos.x),\n      (m_mouseLastPos.y - m_currentMousePos.y)];\n      m_camera.rotate(deltaxy[0], deltaxy[1]);\n\n      // Apply rotation to all other cameras\n      for (i = 0; i < secCameras.length; ++i) {\n        secCameras[i].rotate(deltaxy[0], deltaxy[1]);\n      }\n\n      // Apply rotation to all other cameras\n      for (i = 0; i < rens.length; ++i) {\n        rens[i].resetCameraClippingRange();\n      }\n      render();\n    }\n    if (m_rightMouseButtonDown) {\n      /// 2.0 is the speed up factor.\n      m_zTrans = 2.0 * (m_currentMousePos.y - m_mouseLastPos.y) / m_height;\n\n      // Calculate zoom scale here\n      if (m_zTrans > 0) {\n        m_camera.zoom(1 - Math.abs(m_zTrans));\n      } else {\n        m_camera.zoom(1 + Math.abs(m_zTrans));\n      }\n      render();\n    }\n    m_mouseLastPos.x = m_currentMousePos.x;\n    m_mouseLastPos.y = m_currentMousePos.y;\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    if (event.button === 0) {\n      m_leftMouseButtonDown = true;\n    }\n    if (event.button === 1) {\n      m_middleMouseButtonDown = true;\n    }\n    if (event.button === 2) {\n      m_rightMouseButtonDown = true;\n    }\n    m_coords = m_that.viewer().relMouseCoords(event);\n    if (m_coords.x < 0) {\n      m_mouseLastPos.x = 0;\n    } else {\n      m_mouseLastPos.x = m_coords.x;\n    }\n    if (m_coords.y < 0) {\n      m_mouseLastPos.y = 0;\n    } else {\n      m_mouseLastPos.y = m_coords.y;\n    }\n    return false;\n  };\n\n  // @note We never get mouse up from scroll bar: See the bug report here\n  // http://bugs.jquery.com/ticket/8184\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    var canvas = m_that.viewer().canvas();\n    if (event.button === 0) {\n      m_leftMouseButtonDown = false;\n    }\n    if (event.button === 1) {\n      m_middleMouseButtonDown = false;\n    }\n    if (event.button === 2) {\n      m_rightMouseButtonDown = false;\n    }\n    return false;\n  };\n\n  return this;\n};\ninherit(vgl.pvwInteractorStyle, vgl.trackballInteractorStyle);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global window, vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class viewer\n *\n * @param canvas\n * @returns {vgl.viewer}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.viewer = function(canvas) {\n  'use strict';\n\n  if (!(this instanceof vgl.viewer)) {\n    return new vgl.viewer(canvas);\n  }\n\n  vgl.object.call(this);\n\n  var m_that = this,\n      m_canvas = canvas,\n      m_ready = true,\n      m_interactorStyle = null,\n      m_renderer = vgl.renderer(),\n      m_renderWindow = vgl.renderWindow(m_canvas);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get canvas of the viewer\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canvas = function() {\n    return m_canvas;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return render window of the viewer\n   *\n   * @returns {vgl.renderWindow}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderWindow = function() {\n    return m_renderWindow;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize the viewer\n   *\n   * This is a must call or otherwise render context may not initialized\n   * properly.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.init = function() {\n    if (m_renderWindow !== null) {\n      m_renderWindow.createWindow();\n    }\n    else {\n      console.log(\"[ERROR] No render window attached\");\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get interactor style of the viewer\n   *\n   * @returns {vgl.interactorStyle}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.interactorStyle = function() {\n    return m_interactorStyle;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set interactor style to be used by the viewer\n   *\n   * @param {vgl.interactorStyle} style\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setInteractorStyle = function(style) {\n    if (style !== m_interactorStyle) {\n      m_interactorStyle = style;\n      m_interactorStyle.setViewer(this);\n      this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse down event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseDown = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      // Only prevent default action for right mouse button\n      if (event.button === 2) {\n        fixedEvent.preventDefault();\n      }\n      fixedEvent.state = 'down';\n      fixedEvent.type = vgl.event.mousePress;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse up event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseUp = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.state = 'up';\n      fixedEvent.type = vgl.event.mouseRelease;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseMove = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.mouseMove;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel scroll\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseWheel = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.mouseWheel;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleMouseOut = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.mouseOut;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle key press event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleKeyPress = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.keyPress;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle context menu event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleContextMenu = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.contextMenu;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleClick = function(event) {\n   if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.click;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle double click event\n   *\n   * @param event\n   * @returns {boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.handleDoubleClick = function(event) {\n    if (m_ready === true) {\n      var fixedEvent = $.event.fix(event || window.event);\n      fixedEvent.preventDefault();\n      fixedEvent.type = vgl.event.dblClick;\n      $(m_that).trigger(fixedEvent);\n    }\n\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get mouse coodinates related to canvas\n   *\n   * @param event\n   * @returns {{x: number, y: number}}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.relMouseCoords = function(event) {\n    if (event.pageX === undefined || event.pageY === undefined) {\n      throw \"Missing attributes pageX and pageY on the event\";\n    }\n\n    var totalOffsetX = 0,\n        totalOffsetY = 0,\n        canvasX = 0,\n        canvasY = 0,\n        currentElement = m_canvas;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while (currentElement = currentElement.offsetParent);\n\n    canvasX = event.pageX - totalOffsetX;\n    canvasY = event.pageY - totalOffsetY;\n\n    return {\n      x: canvasX,\n      y: canvasY\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.render = function() {\n    m_renderWindow.render();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind canvas mouse events to their default handlers\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bindEventHandlers = function() {\n    $(m_canvas).on('mousedown', this.handleMouseDown);\n    $(m_canvas).on('mouseup', this.handleMouseUp);\n    $(m_canvas).on('mousemove', this.handleMouseMove);\n    $(m_canvas).on('mousewheel', this.handleMouseWheel);\n    $(m_canvas).on('contextmenu', this.handleContextMenu);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo earlier binded  handlers for canvas mouse events\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.unbindEventHandlers = function() {\n    $(m_canvas).off('mousedown', this.handleMouseDown);\n    $(m_canvas).off('mouseup', this.handleMouseUp);\n    $(m_canvas).off('mousemove', this.handleMouseMove);\n    $(m_canvas).off('mousewheel', this.handleMouseWheel);\n    $(m_canvas).off('contextmenu', this.handleContextMenu);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function() {\n    this.bindEventHandlers();\n    m_renderWindow.addRenderer(m_renderer);\n  }\n\n  this._init();\n  return this;\n};\n\ninherit(vgl.viewer, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global gl, vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class shader\n *\n * @param type\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.shader = function(type) {\n  'use strict';\n\n  if (!(this instanceof vgl.shader)) {\n    return new vgl.shader(type);\n  }\n  vgl.object.call(this);\n\n  var m_shaderHandle = null,\n      m_compileTimestamp = vgl.timestamp(),\n      m_shaderType = type,\n      m_shaderSource = \"\";\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get shader handle\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.shaderHandle = function() {\n    return m_shaderHandle;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get type of the shader\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.shaderType = function() {\n    return m_shaderType;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get shader source\n   *\n   * @returns {string}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.shaderSource = function() {\n    return m_shaderSource;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set shader source\n   *\n   * @param {string} source\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setShaderSource = function(source) {\n    m_shaderSource = source;\n    this.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compile the shader\n   *\n   * @returns {null}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.compile = function() {\n    if (this.getMTime() < m_compileTimestamp.getMTime()) {\n      return m_shaderHandle;\n    }\n\n    gl.deleteShader(m_shaderHandle);\n    m_shaderHandle = gl.createShader(m_shaderType);\n    gl.shaderSource(m_shaderHandle, m_shaderSource);\n    gl.compileShader(m_shaderHandle);\n\n    // See if it compiled successfully\n    if (!gl.getShaderParameter(m_shaderHandle, gl.COMPILE_STATUS)) {\n      console.log(\"[ERROR] An error occurred compiling the shaders: \"\n                  + gl.getShaderInfoLog(m_shaderHandle));\n      console.log(m_shaderSource);\n      gl.deleteShader(m_shaderHandle);\n      return null;\n    }\n\n    m_compileTimestamp.modified();\n\n    return m_shaderHandle;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Attach shader to the program\n   *\n   * @param programHandle\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.attachShader = function(programHandle) {\n    gl.attachShader(programHandle, m_shaderHandle);\n  };\n};\n\ninherit(vgl.shader, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instace of class shaderProgram\n *\n * @class\n * @returns {vgl.shaderProgram}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.shaderProgram = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.shaderProgram)) {\n    return new vgl.shaderProgram();\n  }\n  vgl.materialAttribute.call(\n    this, vgl.materialAttributeType.ShaderProgram);\n\n  /** @private */\n  var m_programHandle = 0,\n      m_compileTimestamp = vgl.timestamp(),\n      m_shaders = [],\n      m_uniforms = [],\n      m_vertexAttributes = {},\n      m_uniformNameToLocation = {},\n      m_vertexAttributeNameToLocation = {};\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Query uniform location in the program\n   *\n   * @param name\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.queryUniformLocation = function(name) {\n    return gl.getUniformLocation(m_programHandle, name);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Query attribute location in the program\n   *\n   * @param name\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.queryAttributeLocation = function(name) {\n    return gl.getAttribLocation(m_programHandle, name);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new shader to the program\n   *\n   * @param shader\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.addShader = function(shader) {\n    if (m_shaders.indexOf(shader) > -1) {\n      return false;\n    }\n\n    var i;\n    for (i = 0; i < m_shaders.length; ++i) {\n      if (m_shaders[i].shaderType() === shader.shaderType()) {\n        m_shaders.splice(m_shaders.indexOf(shader), 1);\n      }\n    }\n\n    m_shaders.push(shader);\n\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new uniform to the program\n   *\n   * @param uniform\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.addUniform = function(uniform) {\n    if (m_uniforms.indexOf(uniform) > -1) {\n      return false;\n    }\n\n    m_uniforms.push(uniform);\n    this.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add a new vertex attribute to the program\n   *\n   * @param attr\n   * @param key\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.addVertexAttribute = function(attr, key) {\n    m_vertexAttributes[key] = attr;\n\n    this.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get uniform location\n   *\n   * This method does not perform any query into the program but relies on\n   * the fact that it depends on a call to queryUniformLocation earlier.\n   *\n   * @param name\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.uniformLocation = function(name) {\n    return m_uniformNameToLocation[name];\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get attribute location\n   *\n   * This method does not perform any query into the program but relies on the\n   * fact that it depends on a call to queryUniformLocation earlier.\n   *\n   * @param name\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.attributeLocation = function(name) {\n    return m_vertexAttributeNameToLocation[name];\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get uniform object using name as the key\n   *\n   * @param name\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.uniform = function(name) {\n    var i;\n    for (i = 0; i < m_uniforms.length; ++i) {\n      if (m_uniforms[i].name() === name) {\n        return m_uniforms[i];\n      }\n    }\n\n    return null;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update all uniforms\n   *\n   * This method should be used directly unless required\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.updateUniforms = function() {\n    var i;\n\n    for (i = 0; i < m_uniforms.length; ++i) {\n      m_uniforms[i].callGL(m_uniformNameToLocation[m_uniforms[i].name()]);\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Link shader program\n   *\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.link = function() {\n    gl.linkProgram(m_programHandle);\n\n    // If creating the shader program failed, alert\n    if (!gl.getProgramParameter(m_programHandle, gl.LINK_STATUS)) {\n      console.log(\"[ERROR] Unable to initialize the shader program.\");\n      return false;\n    }\n\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Use the shader program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.use = function() {\n    gl.useProgram(m_programHandle);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Peform any clean up required when the program gets deleted\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.cleanUp = function() {\n    this.deleteVertexAndFragment();\n    this.deleteProgram();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete the shader program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.deleteProgram = function() {\n    gl.deleteProgram(m_programHandle);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete vertex and fragment shaders\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.deleteVertexAndFragment = function() {\n    var i;\n    for (i = 0; i < m_shaders.length; ++i) {\n      gl.deleteShader(m_shaders[i].shaderHandle());\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind the program with its shaders\n   *\n   * @param renderState\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    var i = 0;\n\n    if (m_programHandle === 0\n        || (m_compileTimestamp.getMTime() < this.getMTime())) {\n      m_programHandle = gl.createProgram();\n\n      if (m_programHandle === 0) {\n        console.log(\"[ERROR] Cannot create Program Object\");\n        return false;\n      }\n\n      // Compile shaders\n      for (i = 0; i < m_shaders.length; ++i) {\n        m_shaders[i].compile();\n        m_shaders[i].attachShader(m_programHandle);\n      }\n\n      this.bindAttributes();\n\n      // link program\n      if (!this.link()) {\n        console.log(\"[ERROR] Failed to link Program\");\n        this.cleanUp();\n      }\n\n      this.use();\n      this.bindUniforms();\n      m_compileTimestamp.modified();\n    }\n    else {\n      this.use();\n    }\n\n    // Call update callback.\n    for (i = 0; i < m_uniforms.length; ++i) {\n      m_uniforms[i].update(renderState, this);\n    }\n\n    // Now update values to GL.\n    this.updateUniforms();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo binding of the shader program\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    // Do nothing\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex data\n   *\n   * @param renderState\n   * @param key\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    if (m_vertexAttributes.hasOwnProperty(key)) {\n      m_vertexAttributes[key].bindVertexData(renderState, key);\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind vetex data\n   *\n   * @param renderState\n   * @param key\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    if (m_vertexAttributes.hasOwnProperty(key)) {\n      m_vertexAttributes[key].undoBindVertexData(renderState, key);\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind uniforms\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bindUniforms = function() {\n    var i;\n    for (i = 0; i < m_uniforms.length; ++i) {\n      m_uniformNameToLocation[m_uniforms[i].name()] = this\n          .queryUniformLocation(m_uniforms[i].name());\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex attributes\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bindAttributes = function() {\n    var key, name;\n    for (key in m_vertexAttributes) {\n      name = m_vertexAttributes[key].name();\n      gl.bindAttribLocation(m_programHandle, key, name);\n      m_vertexAttributeNameToLocation[name] = key;\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.shaderProgram, vgl.materialAttribute);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global Uint8Array, vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class texture\n *\n * @class\n * @returns {vgl.texture}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.texture = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.texture)) {\n    return new vgl.texture();\n  }\n  vgl.materialAttribute.call(\n    this, vgl.materialAttributeType.Texture);\n\n  this.m_width = 0;\n  this.m_height = 0;\n  this.m_depth = 0;\n\n  this.m_textureHandle = null;\n  this.m_textureUnit = 0;\n\n  this.m_pixelFormat = null;\n  this.m_pixelDataType = null;\n\n  this.m_internalFormat = null;\n\n  this.m_image = null;\n\n  var m_setupTimestamp = vgl.timestamp(),\n      m_that = this;\n\n  function activateTextureUnit() {\n    switch (m_that.m_textureUnit) {\n      case 0:\n        gl.activeTexture(gl.TEXTURE0);\n        break;\n      case 1:\n        gl.activeTexture(gl.TEXTURE1);\n        break;\n      case 2:\n        gl.activeTexture(gl.TEXTURE2);\n        break;\n      case 3:\n        gl.activeTexture(gl.TEXTURE3);\n        break;\n      case 4:\n        gl.activeTexture(gl.TEXTURE4);\n        break;\n      case 5:\n        gl.activeTexture(gl.TEXTURE5);\n        break;\n      case 6:\n        gl.activeTexture(gl.TEXTURE6);\n        break;\n      case 7:\n        gl.activeTexture(gl.TEXTURE7);\n        break;\n      case 8:\n        gl.activeTexture(gl.TEXTURE8);\n        break;\n      case 9:\n        gl.activeTexture(gl.TEXTURE9);\n        break;\n      case 10:\n        gl.activeTexture(gl.TEXTURE10);\n        break;\n      case 11:\n        gl.activeTexture(gl.TEXTURE11);\n        break;\n      case 12:\n        gl.activeTexture(gl.TEXTURE12);\n        break;\n      case 13:\n        gl.activeTexture(gl.TEXTURE13);\n        break;\n      case 14:\n        gl.activeTexture(gl.TEXTURE14);\n        break;\n      case 15:\n        gl.activeTexture(gl.TEXTURE15);\n        break;\n      default:\n        throw \"[error] Texture unit \"  + this.m_textureUnit +\n              \" is not supported\";\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create texture, update parameters, and bind data\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setup = function(renderState) {\n    activateTextureUnit();\n\n    gl.deleteTexture(this.m_textureHandle);\n    this.m_textureHandle = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.m_textureHandle);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\n    if (this.m_image !== null) {\n      this.updateDimensions();\n      this.computeInternalFormatUsingImage();\n\n      // console.log(\"m_internalFormat \" + this.m_internalFormat);\n      // console.log(\"m_pixelFormat \" + this.m_pixelFormat);\n      // console.log(\"m_pixelDataType \" + this.m_pixelDataType);\n\n      // FOR now support only 2D textures\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.m_internalFormat,\n                    this.m_pixelFormat, this.m_pixelDataType, this.m_image);\n    }\n    else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, this.m_internalFormat,\n                    this.m_pixelFormat, this.m_pixelDataType, null);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    m_setupTimestamp.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create texture and if already created use it\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.bind = function(renderState) {\n    // TODO Call setup via material setup\n    if (this.getMTime() > m_setupTimestamp.getMTime()) {\n      this.setup(renderState);\n    }\n\n    activateTextureUnit();\n    gl.bindTexture(gl.TEXTURE_2D, this.m_textureHandle);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Turn off the use of this texture\n   *\n   * @param renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.undoBind = function(renderState) {\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get image used by the texture\n   *\n   * @returns {vgl.image}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.image = function() {\n    return this.m_image;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set image for the texture\n   *\n   * @param {vgl.image} image\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setImage = function(image) {\n    if (image !== null) {\n      this.m_image = image;\n      this.updateDimensions();\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get texture unit of the texture\n   *\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.textureUnit = function() {\n    return this.m_textureUnit;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set texture unit of the texture. Default is 0.\n   *\n   * @param {number} unit\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setTextureUnit = function(unit) {\n    if (this.m_textureUnit === unit) {\n      return false;\n    }\n\n    this.m_textureUnit = unit;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get width of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.width = function() {\n    return this.m_width;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set width of the texture\n   *\n   * @param {number} width\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setWidth = function(width) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_width = width;\n    this.modified();\n\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get depth of the texture\n   *\n   * @returns {number}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.depth = function() {\n    return this.m_depth;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set depth of the texture\n   *\n   * @param {number} depth\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setDepth = function(depth) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_depth = depth;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the texture handle (id) of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.textureHandle = function() {\n    return this.m_textureHandle;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get internal format of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.internalFormat = function() {\n    return this.m_internalFormat;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set internal format of the texture\n   *\n   * @param internalFormat\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setInternalFormat = function(internalFormat) {\n    if (this.m_internalFormat !== internalFormat) {\n      this.m_internalFormat = internalFormat;\n      this.modified();\n      return true;\n    }\n\n    return false;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get pixel format of the texture\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.pixelFormat = function() {\n    return this.m_pixelFormat;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set pixel format of the texture\n   *\n   * @param pixelFormat\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setPixelFormat = function(pixelFormat) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_pixelFormat = pixelFormat;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get pixel data type\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.pixelDataType = function() {\n    return this.m_pixelDataType;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set pixel data type\n   *\n   * @param pixelDataType\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setPixelDataType = function(pixelDataType) {\n    if (this.m_image === null) {\n      return false;\n    }\n\n    this.m_pixelDataType = pixelDataType;\n\n    this.modified();\n\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute internal format of the texture\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.computeInternalFormatUsingImage = function() {\n    // Currently image does not define internal format\n    // and hence it's pixel format is the only way to query\n    // information on how color has been stored.\n    // switch (this.m_image.pixelFormat()) {\n    // case gl.RGB:\n    // this.m_internalFormat = gl.RGB;\n    // break;\n    // case gl.RGBA:\n    // this.m_internalFormat = gl.RGBA;\n    // break;\n    // case gl.Luminance:\n    // this.m_internalFormat = gl.Luminance;\n    // break;\n    // case gl.LuminanceAlpha:\n    // this.m_internalFormat = gl.LuminanceAlpha;\n    // break;\n    // // Do nothing when image pixel format is none or undefined.\n    // default:\n    // break;\n    // };\n\n    // TODO Fix this\n    this.m_internalFormat = gl.RGBA;\n    this.m_pixelFormat = gl.RGBA;\n    this.m_pixelDataType = gl.UNSIGNED_BYTE;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update texture dimensions\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.updateDimensions = function() {\n    if (this.m_image !== null) {\n      this.m_width = this.m_image.width;\n      this.m_height = this.m_image.height;\n      this.m_depth = 0; // Only 2D images are supported now\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.texture, vgl.materialAttribute);\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lookupTable\n *\n * @class\n * @returns {vgl.lookupTable}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.lookupTable = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.lookupTable)) {\n    return new vgl.lookupTable();\n  }\n  vgl.texture.call(this);\n\n  var m_setupTimestamp = vgl.timestamp(),\n      m_range = [0,0];\n\n  this.m_colorTable = //paraview bwr colortable\n    [0.07514311,0.468049805,1,1,\n     0.247872569,0.498782363,1,1,\n     0.339526309,0.528909511,1,1,\n     0.409505078,0.558608486,1,1,\n     0.468487184,0.588057293,1,1,\n     0.520796675,0.617435078,1,1,\n     0.568724526,0.646924167,1,1,\n     0.613686735,0.676713218,1,1,\n     0.656658579,0.707001303,1,1,\n     0.698372844,0.738002964,1,1,\n     0.739424025,0.769954435,1,1,\n     0.780330104,0.803121429,1,1,\n     0.821573924,0.837809045,1,1,\n     0.863634967,0.874374691,1,1,\n     0.907017747,0.913245283,1,1,\n     0.936129275,0.938743558,0.983038586,1,\n     0.943467973,0.943498599,0.943398095,1,\n     0.990146732,0.928791426,0.917447482,1,\n     1,0.88332677,0.861943246,1,\n     1,0.833985467,0.803839606,1,\n     1,0.788626485,0.750707739,1,\n     1,0.746206642,0.701389973,1,\n     1,0.70590052,0.654994046,1,\n     1,0.667019783,0.610806959,1,\n     1,0.6289553,0.568237474,1,\n     1,0.591130233,0.526775617,1,\n     1,0.552955184,0.485962266,1,\n     1,0.513776083,0.445364274,1,\n     1,0.472800903,0.404551679,1,\n     1,0.428977855,0.363073592,1,\n     1,0.380759558,0.320428137,1,\n     0.961891484,0.313155629,0.265499262,1,\n     0.916482116,0.236630659,0.209939162,1].map(\n             function(x) {return x*255;});\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create lookup table, initialize parameters, and bind data to it\n   *\n   * @param {vgl.renderState} renderState\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setup = function(renderState) {\n    if (this.textureUnit() === 0) {\n      gl.activeTexture(gl.TEXTURE0);\n    } else if (this.textureUnit() === 1) {\n      gl.activeTexture(gl.TEXTURE1);\n    }\n\n    gl.deleteTexture(this.m_textureHandle);\n    this.m_textureHandle = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, this.m_textureHandle);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n\n    this.m_width = this.m_colorTable.length/4;\n    this.m_height = 1;\n    this.m_depth = 0;\n    gl.texImage2D(gl.TEXTURE_2D,\n                  0, gl.RGBA, this.m_width, this.m_height, this.m_depth,\n                  gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array(this.m_colorTable));\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    m_setupTimestamp.modified();\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get color table used by the lookup table\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.colorTable = function() {\n    return this.m_colorTable;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set color table used by the lookup table\n   *\n   * @param colors\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setColorTable = function(colors) {\n    if (this.m_colorTable === colors) {\n      return false;\n    }\n\n    this.m_colorTable = colors;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get scalar range\n   *\n   * @returns {Array}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.range = function() {\n    return m_range;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set scalar range for the lookup table\n   *\n   * @param range\n   * @returns {boolean}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.setRange = function(range) {\n    if (m_range === range) {\n      return false;\n    }\n    m_range = range;\n    this.modified();\n    return true;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Given a [min,max] range update the lookup table range\n   *\n   * @param range\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.updateRange = function(range) {\n    if (!(range instanceof Array)) {\n      console.log('[error] Invalid data type for range. Requires array [min,max]');\n    }\n\n    if (range[0] < m_range[0]) {\n      m_range[0] = range[0];\n      this.modified();\n    }\n\n    if (range[1] > m_range[1]) {\n      m_range[1] = range[1];\n      this.modified();\n    }\n  };\n\n  return this;\n};\n\ninherit(vgl.lookupTable, vgl.texture);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec2, vec3, vec4, mat3, mat4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class uniform\n *\n * @param type\n * @param name\n * @returns {vgl.uniform} OpenGL uniform encapsulation\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.uniform = function(type, name) {\n  'use strict';\n\n  if (!(this instanceof vgl.uniform)) {\n    return new vgl.uniform();\n  }\n\n  this.getTypeNumberOfComponents = function(type) {\n    switch (type) {\n      case gl.FLOAT:\n      case gl.INT:\n      case gl.BOOL:\n        return 1;\n\n      case gl.FLOAT_VEC2:\n      case gl.INT_VEC2:\n      case gl.BOOL_VEC2:\n        return 2;\n\n      case gl.FLOAT_VEC3:\n      case gl.INT_VEC3:\n      case gl.BOOLT_VEC3:\n        return 3;\n\n      case gl.FLOAT_VEC4:\n      case gl.INT_VEC4:\n      case gl.BOOL_VEC4:\n        return 4;\n\n      case gl.FLOAT_MAT3:\n        return 9;\n\n      case gl.FLOAT_MAT4:\n        return 16;\n\n      default:\n        return 0;\n    }\n  };\n\n  var m_type = type,\n      m_name = name,\n      m_dataArray = [],\n      m_numberOfElements = 1;\n\n  m_dataArray.length = this.getTypeNumberOfComponents(m_type);\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get name of the uniform\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get type of the uniform\n   *\n   * @returns {*}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.type = function() {\n    return m_type;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get value of the uniform\n   *\n   * @returns {Array}\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.get = function() {\n    return m_dataArray;\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set value of the uniform\n   *\n   * @param value\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.set = function(value) {\n    var i = 0;\n    if (m_dataArray.length === 16) {\n      for (i = 0; i < 16; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 9) {\n      for (i = 0; i < 9; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 4) {\n      for (i = 0; i < 4; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 3) {\n      for (i = 0; i < 3; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else if (m_dataArray.length === 2) {\n      for (i = 0; i < 2; ++i) {\n        m_dataArray[i] = value[i];\n      }\n    }\n    else {\n      m_dataArray[0] = value;\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Call GL and pass updated values to the current shader\n   *\n   * @param location\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.callGL = function(location) {\n    if (this.m_numberElements < 1) {\n      return;\n    }\n\n    switch (m_type) {\n      case gl.BOOL:\n      case gl.INT:\n        gl.uniform1iv(location, m_dataArray);\n        break;\n      case gl.FLOAT:\n        gl.uniform1fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_VEC2:\n        gl.uniform2fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_VEC3:\n        gl.uniform3fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_VEC4:\n        gl.uniform4fv(location, m_dataArray);\n        break;\n      case gl.FLOAT_MAT3:\n        gl.uniformMatrix3fv(location, gl.FALSE, m_dataArray);\n        break;\n      case gl.FLOAT_MAT4:\n        gl.uniformMatrix4fv(location, gl.FALSE, m_dataArray);\n        break;\n      default:\n        break;\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Virtual method to update the uniform\n   *\n   * Should be implemented by the derived class.\n   *\n   * @param renderState\n   * @param program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    // Should be implemented by the derived class\n  };\n\n  return this;\n};\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of class modelViewUniform\n *\n * @param name\n * @returns {vgl.modelViewUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.modelViewUniform = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.modelViewUniform)) {\n    return new vgl.modelViewUniform(name);\n  }\n\n  if (name.length === 0) {\n    name = \"modelViewMatrix\";\n  }\n\n  vgl.uniform.call(this, gl.FLOAT_MAT4, name);\n\n  this.set(mat4.create());\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the uniform given a render state and shader program\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.shaderProgram} program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    this.set(renderState.m_modelViewMatrix);\n  };\n\n  return this;\n};\n\ninherit(vgl.modelViewUniform, vgl.uniform);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class projectionUniform\n *\n * @param name\n * @returns {vgl.projectionUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.projectionUniform = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.projectionUniform)) {\n    return new vgl.projectionUniform(name);\n  }\n\n  if (name.length === 0) {\n    name = \"projectionMatrix\";\n  }\n\n  vgl.uniform.call(this, gl.FLOAT_MAT4, name);\n\n  this.set(mat4.create());\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the uniform given a render state and shader program\n   *\n   * @param renderState\n   * @param program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    this.set(renderState.m_projectionMatrix);\n  };\n\n  return this;\n};\n\ninherit(vgl.projectionUniform, vgl.uniform);\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class floatUniform\n *\n * @param name\n * @param value\n * @returns {vgl.floatUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.floatUniform = function(name, value) {\n  'use strict';\n\n  if (!(this instanceof vgl.floatUniform)) {\n    return new vgl.floatUniform(name, value);\n  }\n\n  if (name.length === 0) {\n    name = \"floatUniform\";\n  }\n\n  value = value === undefined ? 1.0 : value;\n\n  vgl.uniform.call(this, gl.FLOAT, name);\n\n  this.set(value);\n};\n\ninherit(vgl.floatUniform, vgl.uniform);\n\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of class normalMatrixUniform\n *\n * @param name\n * @returns {vgl.normalMatrixUniform}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.normalMatrixUniform = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.normalMatrixUniform)) {\n    return new vgl.normalMatrixUniform(name);\n  }\n\n  if (name.length === 0) {\n    name = \"normalMatrix\";\n  }\n\n  vgl.uniform.call(this, gl.FLOAT_MAT4, name);\n\n  this.set(mat4.create());\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the uniform given a render state and shader program\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.shaderProgram} program\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.update = function(renderState, program) {\n    this.set(renderState.m_normalMatrix);\n  };\n\n  return this;\n};\n\ninherit(vgl.normalMatrixUniform, vgl.uniform);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Keys to identify vertex attributes\n *\n * @type {{Position: number, Normal: number, TextureCoordinate: number,\n *         Color: number, Scalar: number, Scalar2: number, Scalar3: number,\n *         Scalar4: number, Scalar5: number, Scalar6: number, Scalar7: number,\n *         CountAttributeIndex: number}}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexAttributeKeys = {\n  \"Position\" : 0,\n  \"Normal\" : 1,\n  \"TextureCoordinate\" : 2,\n  \"Color\" : 3,\n  \"CountAttributeIndex\" : 4\n};\n\nvgl.vertexAttributeKeysIndexed = {\n  \"Zero\" : 0,\n  \"One\" : 1,\n  \"Two\" : 2,\n  \"Three\" : 3,\n  \"Four\" : 4,\n  \"Five\" : 5,\n  \"Six\" : 6,\n  \"Seven\" : 7,\n  \"Eight\" : 8,\n  \"Nine\" : 9\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertexAttribute\n *\n * @param {string} name\n * @returns {vgl.vertexAttribute}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.vertexAttribute = function(name) {\n  'use strict';\n\n  if (!(this instanceof vgl.vertexAttribute)) {\n    return new vgl.vertexAttribute(name);\n  }\n\n  var m_name = name;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get name of the vertex attribute\n   *\n   * @returns {string}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.name = function() {\n    return m_name;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Bind vertex data to the given render state\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.vertexAttributeKeys} key\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.bindVertexData = function(renderState, key) {\n    var geometryData = renderState.m_mapper.geometryData(),\n        sourceData = geometryData.sourceData(key),\n        program = renderState.m_material.shaderProgram();\n\n    gl.vertexAttribPointer(program.attributeLocation(m_name), sourceData\n        .attributeNumberOfComponents(key), sourceData.attributeDataType(key),\n                           sourceData.normalized(key), sourceData\n                               .attributeStride(key), sourceData\n                               .attributeOffset(key));\n\n    gl.enableVertexAttribArray(program.attributeLocation(m_name));\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Undo bind vertex data for a given render state\n   *\n   * @param {vgl.renderState} renderState\n   * @param {vgl.vertexAttributeKeys} key\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.undoBindVertexData = function(renderState, key) {\n    var program = renderState.m_material.shaderProgram();\n\n    gl.disableVertexAttribArray(program.attributeLocation(m_name));\n  };\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n///////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class source\n *\n * @returns {vgl.source}\n */\n///////////////////////////////////////////////////////////////////////////////\nvgl.source = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.source)) {\n    return new vgl.source();\n  }\n\n  vgl.object.call(this);\n\n  /////////////////////////////////////////////////////////////////////////////\n  /**\n   * Virtual function to create a source instance\n   */\n  /////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n  };\n\n  return this;\n};\n\ninherit(vgl.source, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class planeSource\n *\n * @class\n * @returns {vgl.planeSource}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.planeSource = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.planeSource)) {\n    return new vgl.planeSource();\n  }\n  vgl.source.call(this);\n\n  var m_origin = [ 0.0, 0.0, 0.0 ],\n      m_point1 = [ 1.0, 0.0, 0.0 ],\n      m_point2 = [ 0.0, 1.0, 0.0 ],\n      m_normal = [ 0.0, 0.0, 1.0 ],\n      m_xresolution = 1,\n      m_yresolution = 1,\n      m_geom = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set origin of the plane\n   *\n   * @param x\n   * @param y\n   * @param z\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setOrigin = function(x, y, z) {\n    m_origin[0] = x;\n    m_origin[1] = y;\n    m_origin[2] = z;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set point that defines the first axis of the plane\n   *\n   * @param x\n   * @param y\n   * @param z\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPoint1 = function(x, y, z) {\n    m_point1[0] = x;\n    m_point1[1] = y;\n    m_point1[2] = z;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set point that defines the first axis of the plane\n   *\n   * @param x\n   * @param y\n   * @param z\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPoint2 = function(x, y, z) {\n    m_point2[0] = x;\n    m_point2[1] = y;\n    m_point2[2] = z;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a plane geometry given input parameters\n   *\n   * @returns {null}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n    m_geom = new vgl.geometryData();\n\n    var x = [], tc = [], v1 = [], v2 = [],\n        pts = [], i, j, k, ii, numPts, numPolys,\n        posIndex = 0, normIndex = 0, colorIndex = 0, texCoordIndex = 0,\n        positions = [], normals = [], colors = [],\n        texCoords = [], indices = [], tristrip = null,\n        sourcePositions = null, sourceColors = null, sourceTexCoords;\n\n    x.length = 3;\n    tc.length = 2;\n    v1.length = 3;\n    v2.length = 3;\n    pts.length = 3;\n\n    // Check input\n    for (i = 0; i < 3; i++) {\n      v1[i] = m_point1[i] - m_origin[i];\n      v2[i] = m_point2[i] - m_origin[i];\n    }\n\n    // TODO Compute center and normal\n    // Set things up; allocate memory\n    numPts = (m_xresolution + 1) * (m_yresolution + 1);\n    numPolys = m_xresolution * m_yresolution * 2;\n    positions.length = 3 * numPts;\n    normals.length = 3 * numPts;\n    texCoords.length = 2 * numPts;\n    indices.length = numPts;\n\n    for (k = 0, i = 0; i < (m_yresolution + 1); i++) {\n      tc[1] = i / m_yresolution;\n\n      for (j = 0; j < (m_xresolution + 1); j++) {\n        tc[0] = j / m_xresolution;\n\n        for (ii = 0; ii < 3; ii++) {\n          x[ii] = m_origin[ii] + tc[0] * v1[ii] + tc[1] * v2[ii];\n        }\n\n        positions[posIndex++] = x[0];\n        positions[posIndex++] = x[1];\n        positions[posIndex++] = x[2];\n\n        colors[colorIndex++] = 1.0;\n        colors[colorIndex++] = 1.0;\n        colors[colorIndex++] = 1.0;\n\n        normals[normIndex++] = m_normal[0];\n        normals[normIndex++] = m_normal[1];\n        normals[normIndex++] = m_normal[2];\n\n        texCoords[texCoordIndex++] = tc[0];\n        texCoords[texCoordIndex++] = tc[1];\n      }\n    }\n\n    /// Generate polygon connectivity\n    for (i = 0; i < m_yresolution; i++) {\n      for (j = 0; j < m_xresolution; j++) {\n        pts[0] = j + i * (m_xresolution + 1);\n        pts[1] = pts[0] + 1;\n        pts[2] = pts[0] + m_xresolution + 2;\n        pts[3] = pts[0] + m_xresolution + 1;\n      }\n    }\n\n    for (i = 0; i < numPts; ++i) {\n      indices[i] = i;\n    }\n\n    tristrip = new vgl.triangleStrip();\n    tristrip.setIndices(indices);\n\n    sourcePositions = vgl.sourceDataP3fv();\n    sourcePositions.pushBack(positions);\n\n    sourceColors = vgl.sourceDataC3fv();\n    sourceColors.pushBack(colors);\n\n    sourceTexCoords = vgl.sourceDataT2fv();\n    sourceTexCoords.pushBack(texCoords);\n\n    m_geom.addSource(sourcePositions);\n    m_geom.addSource(sourceColors);\n    m_geom.addSource(sourceTexCoords);\n    m_geom.addPrimitive(tristrip);\n\n    return m_geom;\n  };\n};\n\ninherit(vgl.planeSource, vgl.source);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pointSource\n *\n * @class\n * @returns {vgl.pointSource}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.pointSource = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.pointSource)) {\n    return new vgl.pointSource();\n  }\n  vgl.source.call(this);\n\n  var m_this = this,\n      m_positions = [],\n      m_colors = [],\n      m_textureCoords = [],\n      m_size = [],\n      m_geom = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get positions for the points\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getPositions = function(positions) {\n    return m_positions;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set positions for the source\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPositions = function(positions) {\n    if (positions instanceof Array) {\n      m_positions = positions;\n    }\n    else {\n      console\n          .log(\"[ERROR] Invalid data type for positions. Array is required.\");\n    }\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get colors for the points\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getColors = function(positions) {\n    return m_colors;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set colors for the points\n   *\n   * @param colors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setColors = function(colors) {\n    if (colors instanceof Array) {\n      m_colors = colors;\n    }\n    else {\n      console.log(\"[ERROR] Invalid data type for colors. Array is required.\");\n    }\n\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get colors for the points\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getSize = function(positions) {\n    return m_size;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set colors for the points\n   *\n   * @param colors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setSize = function(size) {\n    m_size = size;\n    this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set texture coordinates for the points\n   *\n   * @param texcoords\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setTextureCoordinates = function(texcoords) {\n    if (texcoords instanceof Array) {\n      m_textureCoords = texcoords;\n    }\n    else {\n      console.log(\"[ERROR] Invalid data type for \"\n                  + \"texture coordinates. Array is required.\");\n    }\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a point geometry given input parameters\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n    m_geom = new vgl.geometryData();\n\n    if (m_positions.length % 3 !== 0) {\n      console.log(\"[ERROR] Invalid length of the points array\");\n      return;\n    }\n\n    var numPts = m_positions.length / 3,\n        i = 0,\n        indices = [],\n        pointsPrimitive,\n        sourcePositions,\n        sourceColors,\n        sourceTexCoords,\n        sourceSize;\n\n    indices.length = numPts;\n    for (i = 0; i < numPts; ++i) {\n      indices[i] = i;\n    }\n\n    /// Generate array of size if needed\n    sourceSize = vgl.sourceDataDf();\n    if (numPts !== m_size.length) {\n      for (i = 0; i < numPts; ++i) {\n       sourceSize.pushBack(m_size);\n      }\n    } else {\n      sourceSize.setData(m_size);\n    }\n    m_geom.addSource(sourceSize);\n\n    pointsPrimitive = new vgl.points();\n    pointsPrimitive.setIndices(indices);\n\n    sourcePositions = vgl.sourceDataP3fv();\n    sourcePositions.pushBack(m_positions);\n    m_geom.addSource(sourcePositions);\n\n    if ((m_colors.length > 0) && m_colors.length === m_positions.length) {\n      sourceColors = vgl.sourceDataC3fv();\n      sourceColors.pushBack(m_colors);\n      m_geom.addSource(sourceColors);\n    }\n    else if ((m_colors.length > 0) && m_colors.length !== m_positions.length) {\n      console\n          .log(\"[ERROR] Number of colors are different than number of points\");\n    }\n\n    if ((m_textureCoords.length > 0)\n        && m_textureCoords.length === m_positions.length) {\n      sourceTexCoords = vgl.sourceDataT2fv();\n      sourceTexCoords.pushBack(m_textureCoords);\n      m_geom.addSource(sourceTexCoords);\n    }\n    else if ((m_textureCoords.length > 0)\n             && (m_textureCoords.length / 2) !== (m_positions.length / 3)) {\n      console\n          .log(\"[ERROR] Number of texture coordinates are different than number of points\");\n    }\n\n\n    m_geom.addPrimitive(pointsPrimitive);\n\n    return m_geom;\n  };\n};\n\ninherit(vgl.pointSource, vgl.source);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lineSource\n *\n * @class\n * @returns {vgl.lineSource}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.lineSource = function(positions, colors) {\n  'use strict';\n\n  if (!(this instanceof vgl.lineSource)) {\n    return new vgl.lineSource();\n  }\n  vgl.source.call(this);\n\n  var m_positions = positions,\n      m_colors = colors,\n      m_height = null,\n      m_geom = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set start positions for the lines\n   *\n   * @param positions\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setPositions = function(positions) {\n    if (positions instanceof Array) {\n      m_positions = positions;\n      this.modified();\n      return true;\n    }\n\n    console\n      .log(\"[ERROR] Invalid data type for positions. Array is required.\");\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set colors for the lines\n   *\n   * @param colors\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setColors = function(colors) {\n    if (colors instanceof Array) {\n      m_colors = colors;\n      this.modified();\n      return true;\n    }\n\n    console.log(\"[ERROR] Invalid data type for colors. Array is required.\");\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a point geometry given input parameters\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.create = function() {\n    if (!m_positions) {\n      console.log(\"[error] Invalid positions\");\n      return;\n    }\n\n    if (m_positions.length % 3 !== 0) {\n      console.log(\"[error] Line source requires 3d points\");\n      return;\n    }\n\n    if (m_positions.length % 3 !== 0) {\n      console.log(\"[ERROR] Invalid length of the points array\");\n      return;\n    }\n\n    var m_geom = new vgl.geometryData(),\n        numPts = m_positions.length / 3,\n        i,\n        indices = [],\n        linesPrimitive,\n        sourcePositions,\n        sourceColors;\n\n    indices.length = numPts;\n\n    for (i = 0; i < numPts; ++i) {\n      indices[i] = i;\n    }\n\n    linesPrimitive = new vgl.lines();\n    linesPrimitive.setIndices(indices);\n\n    sourcePositions = vgl.sourceDataP3fv();\n    sourcePositions.pushBack(m_positions);\n    m_geom.addSource(sourcePositions);\n\n    if ( m_colors && (m_colors.length > 0) &&\n         m_colors.length === m_positions.length) {\n      sourceColors = vgl.sourceDataC3fv();\n      sourceColors.pushBack(m_colors);\n      m_geom.addSource(sourceColors);\n    }\n    else if (m_colors && (m_colors.length > 0) &&\n             m_colors.length !== m_positions.length) {\n      console\n        .log(\"[error] Number of colors are different than number of points\");\n    }\n\n    m_geom.addPrimitive(linesPrimitive);\n\n    return m_geom;\n  };\n};\n\ninherit(vgl.lineSource, vgl.source);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global document, vgl, gl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class utils\n *\n * Utility class provides helper functions such as functions to create\n * shaders, geometry etc.\n *\n * @returns {vgl.utils}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.utils)) {\n    return new vgl.utils();\n  }\n  vgl.object.call(this);\n\n  return this;\n};\n\ninherit(vgl.utils, vgl.object);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Helper function to compute power of 2 number\n *\n * @param value\n * @param pow\n *\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.computePowerOfTwo = function(value, pow) {\n  'use strict';\n  pow = pow || 1;\n  while (pow < value) {\n    pow *= 2;\n  }\n  return pow;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default vertex shader that uses a texture\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTextureVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 textureCoord;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'varying highp vec3 iTextureCoord;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        ' iTextureCoord = textureCoord;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default fragment shader that uses a texture\n *\n * Helper function to create default fragment shader with sampler\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTextureFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying highp vec3 iTextureCoord;',\n        'uniform sampler2D sampler2d;',\n        'uniform mediump float opacity;',\n        'void main(void) {',\n        'gl_FragColor = vec4(texture2D(sampler2d, vec2(iTextureCoord.s, iTextureCoord.t)).xyz, opacity);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create variation of createTextureFragmentShader which uses texture alpha\n *\n * Helper function to create default fragment shader with sampler\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createRgbaTextureFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying highp vec3 iTextureCoord;',\n        'uniform sampler2D sampler2d;',\n        'void main(void) {',\n        'gl_FragColor = vec4(texture2D(sampler2d, vec2(iTextureCoord.s, iTextureCoord.t)).xyzw);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default vertex shader\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 vertexColor;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'varying mediump vec3 iVertexColor;',\n        'varying highp vec3 iTextureCoord;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        ' iVertexColor = vertexColor;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default vertex shader\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 vertexColor;',\n        'attribute float vertexSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'varying mediump vec3 iVertexColor;',\n        'varying highp vec3 iTextureCoord;',\n        'void main(void)',\n        '{',\n        'gl_PointSize =  vertexSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        ' iVertexColor = vertexColor;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertex shader with a solid color\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createVertexShaderSolidColor = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        '}' ].join('\\n'),\n    shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertex shader that passes values through\n * for color mapping\n *\n * Helper function to create default vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createVertexShaderColorMap = function(context, min, max) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute float vertexScalar;',\n        'uniform mediump float pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform float lutMin;',\n        'uniform float lutMax;',\n        'varying mediump float iVertexScalar;',\n        'void main(void)',\n        '{',\n        'gl_PointSize = pointSize;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition, 1.0);',\n        'iVertexScalar = (vertexScalar-lutMin)/(lutMax-lutMin);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of default fragment shader\n *\n * Helper function to create default fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [ 'varying mediump vec3 iVertexColor;',\n                              'uniform mediump float opacity;',\n                              'void main(void) {',\n                              'gl_FragColor = vec4(iVertexColor, opacity);',\n                              '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a Phong vertex shader\n *\n * Helper function to create Phong vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPhongVertexShader = function(context) {\n  'use strict';\n\n  var vertexShaderSource = [\n      'attribute highp vec3 vertexPosition;',\n      'attribute mediump vec3 vertexNormal;',\n      'attribute mediump vec3 vertexColor;',\n\n      'uniform highp mat4 projectionMatrix;',\n      'uniform mat4 modelViewMatrix;',\n      'uniform mat4 normalMatrix;',\n\n      'varying highp vec4 varPosition;',\n      'varying mediump vec3 varNormal;',\n      'varying mediump vec3 iVertexColor;',\n\n      'void main(void)',\n      '{',\n      'varPosition = modelViewMatrix * vec4(vertexPosition, 1.0);',\n      'gl_Position = projectionMatrix * varPosition;',\n      'varNormal = vec3(normalMatrix * vec4(vertexNormal, 0.0));',\n      'iVertexColor = vertexColor;',\n      '}' ].join('\\n'),\n\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n\n  shader.setShaderSource(vertexShaderSource);\n\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of Phong fragment shader\n *\n * Helper function to create Phong fragment shader\n *\n * NOTE: Shader assumes directional light\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPhongFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n    'precision mediump float;',\n    'varying vec3 varNormal;',\n    'varying vec4 varPosition;',\n    'varying mediump vec3 iVertexColor;',\n    'const vec3 lightPos = vec3(0.0, 0.0,10000.0);',\n    'const vec3 ambientColor = vec3(0.01, 0.01, 0.01);',\n    'const vec3 specColor = vec3(1.0, 1.0, 1.0);',\n\n    'void main() {',\n    'vec3 normal = normalize(varNormal);',\n    'vec3 lightDir = normalize(lightPos);',\n    'vec3 reflectDir = -reflect(lightDir, normal);',\n    'vec3 viewDir = normalize(-varPosition.xyz);',\n\n    'float lambertian = max(dot(lightDir,normal), 0.0);',\n    'float specular = 0.0;',\n\n    'if(lambertian > 0.0) {',\n    'float specAngle = max(dot(reflectDir, viewDir), 0.0);',\n    'specular = pow(specAngle, 64.0);',\n    '}',\n    'gl_FragColor = vec4(ambientColor +',\n    'lambertian*iVertexColor +',\n    'specular*specColor, 1.0);',\n    '}' ].join('\\n'),\n    shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of fragment shader with an assigned constant color.\n *\n * Helper function to create default fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createFragmentShaderSolidColor = function(context, color) {\n  'use strict';\n  var fragmentShaderSource = ['uniform mediump float opacity;',\n                              'void main(void) {',\n                              'gl_FragColor = vec4(' + color[0] + ',' + color[1] + ',' + color[2] + ', opacity);',\n                              '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of fragment shader that maps values into colors bia lookup table\n *\n * Helper function to create default fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createFragmentShaderColorMap = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying mediump float iVertexScalar;',\n        'uniform sampler2D sampler2d;',\n        'uniform mediump float opacity;',\n        'void main(void) {',\n        'gl_FragColor = vec4(texture2D(sampler2d, vec2(iVertexScalar, 0.0)).xyz, opacity);',\n        '}' ].join('\\n'),\n      shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of vertex shader for point sprites\n *\n * Helper function to create default point sprites vertex shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSpritesVertexShader = function(context) {\n  'use strict';\n  var vertexShaderSource = [\n        'attribute vec3 vertexPosition;',\n        'attribute vec3 vertexColor;',\n        'uniform mediump vec2 pointSize;',\n        'uniform mat4 modelViewMatrix;',\n        'uniform mat4 projectionMatrix;',\n        'uniform float height;',\n        'varying mediump vec3 iVertexColor;',\n        'varying highp float iVertexScalar;',\n        'void main(void)',\n        '{',\n        'mediump float realPointSize = pointSize.y;',\n        'if (pointSize.x > pointSize.y) {',\n        '  realPointSize = pointSize.x;}',\n        'gl_PointSize = realPointSize ;',\n        'iVertexScalar = vertexPosition.z;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4(vertexPosition.xy, height, 1.0);',\n        ' iVertexColor = vertexColor;', '}' ].join('\\n'),\n      shader = new vgl.shader(gl.VERTEX_SHADER);\n  shader.setShaderSource(vertexShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of fragment shader for point sprites\n *\n * Helper function to create default point sprites fragment shader\n *\n * @param context\n * @returns {vgl.shader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSpritesFragmentShader = function(context) {\n  'use strict';\n  var fragmentShaderSource = [\n        'varying mediump vec3 iVertexColor;',\n        'varying highp float iVertexScalar;',\n        'uniform sampler2D opacityLookup;',\n        'uniform highp float lutMin;',\n        'uniform highp float lutMax;',\n        'uniform sampler2D scalarsToColors;',\n        'uniform int useScalarsToColors;',\n        'uniform int useVertexColors;',\n        'uniform mediump vec2 pointSize;',\n        'uniform mediump float vertexColorWeight;',\n        'void main(void) {',\n        'mediump vec2 realTexCoord;',\n        'if (pointSize.x > pointSize.y) {',\n        '  realTexCoord = vec2(1.0, pointSize.y/pointSize.x) * gl_PointCoord;',\n        '} else {',\n        '  realTexCoord = vec2(pointSize.x/pointSize.y, 1.0) * gl_PointCoord;',\n        '}',\n        'highp float texOpacity = texture2D(opacityLookup, realTexCoord).w;',\n        'if (useScalarsToColors == 1) {',\n        '  gl_FragColor = vec4(texture2D(scalarsToColors, vec2((iVertexScalar - lutMin)/(lutMax - lutMin), 0.0)).xyz, texOpacity);',\n        '} else if (useVertexColors == 1) {',\n        '  gl_FragColor = vec4(iVertexColor, texOpacity);',\n        '} else {',\n        '  gl_FragColor = vec4(texture2D(opacityLookup, realTexCoord).xyz, texOpacity);',\n        '}}'\n    ].join('\\n'),\n    shader = new vgl.shader(gl.FRAGMENT_SHADER);\n\n  shader.setShaderSource(fragmentShaderSource);\n  return shader;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of texture material\n *\n * Helper function to create a texture material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTextureMaterial = function(isRgba) {\n  'use strict';\n  var mat = new vgl.material(),\n    blend = new vgl.blend(),\n    prog = new vgl.shaderProgram(),\n    vertexShader = vgl.utils.createTextureVertexShader(gl),\n    fragmentShader = null,\n    posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n    texCoordVertAttr = new vgl.vertexAttribute(\"textureCoord\"),\n    pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n    modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n    projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n    samplerUniform = new vgl.uniform(gl.INT, \"sampler2d\"),\n    opacityUniform = null;\n\n  samplerUniform.set(0);\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(texCoordVertAttr,\n                          vgl.vertexAttributeKeys.TextureCoordinate);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n\n  if (isRgba) {\n    fragmentShader = vgl.utils.createRgbaTextureFragmentShader(gl);\n  } else {\n    fragmentShader = vgl.utils.createTextureFragmentShader(gl);\n    opacityUniform = new vgl.floatUniform(\"opacity\", 1.0);\n    prog.addUniform(opacityUniform);\n  }\n\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createGeometryMaterial = function() {\n  'use strict';\n   var mat = new vgl.material(),\n       blend = new vgl.blend(),\n       prog = new vgl.shaderProgram(),\n       pointSize = 5.0,\n       opacity = 0.5,\n       vertexShader = vgl.utils.createVertexShader(gl),\n       fragmentShader = vgl.utils.createFragmentShader(gl),\n       posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n       colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n       pointsizeUniform = new vgl.floatUniform(\"pointSize\", pointSize),\n       opacityUniform = new vgl.floatUniform(\"opacity\", opacity),\n       modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n       projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointGeometryMaterial = function(opacity) {\n  'use strict';\n   var mat = new vgl.material(),\n       blend = new vgl.blend(),\n       prog = new vgl.shaderProgram(),\n       opacity = opacity === undefined ? 1.0 : opacity,\n       vertexShader = vgl.utils.createPointVertexShader(gl),\n       fragmentShader = vgl.utils.createFragmentShader(gl),\n       posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n       colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n       sizeVertAttr = new vgl.vertexAttribute(\"vertexSize\"),\n       opacityUniform = new vgl.floatUniform(\"opacity\", opacity),\n       modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n       projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addVertexAttribute(sizeVertAttr, vgl.vertexAttributeKeys.Scalar);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material with the phong shader\n *\n * Helper function to create color phong shaded geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPhongMaterial = function() {\n  'use strict';\n   var mat = new vgl.material(),\n       blend = new vgl.blend(),\n       prog = new vgl.shaderProgram(),\n       vertexShader = vgl.utils.createPhongVertexShader(gl),\n       fragmentShader = vgl.utils.createPhongFragmentShader(gl),\n       posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n       normalVertAttr = new vgl.vertexAttribute(\"vertexNormal\"),\n       colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n       opacityUniform = new vgl.floatUniform(\"opacity\", 1.0),\n       modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n       normalUniform = new vgl.normalMatrixUniform(\"normalMatrix\"),\n       projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(normalVertAttr, vgl.vertexAttributeKeys.Normal);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addUniform(normalUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of colored geometry material\n *\n * Helper function to create color geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createColorMaterial = function() {\n  'use strict';\n  var mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createVertexShader(gl),\n      fragmentShader = vgl.utils.createFragmentShader(gl),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      texCoordVertAttr = new vgl.vertexAttribute(\"textureCoord\"),\n      colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n      pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n      opacityUniform = new vgl.floatUniform(\"opacity\", 0.5),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addVertexAttribute(texCoordVertAttr,\n                          vgl.vertexAttributeKeys.TextureCoordinate);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geometry material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createColorMappedMaterial = function(lut) {\n  'use strict';\n  if (!lut) {\n    lut = new vgl.lookupTable();\n  }\n\n  var scalarRange = lut.range(),\n      mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createVertexShaderColorMap(\n        gl,scalarRange[0],scalarRange[1]),\n      fragmentShader = vgl.utils.createFragmentShaderColorMap(gl),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      scalarVertAttr = new vgl.vertexAttribute(\"vertexScalar\"),\n      pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n      opacityUniform = new vgl.floatUniform(\"opacity\", 0.5),\n      lutMinUniform = new vgl.floatUniform(\"lutMin\", scalarRange[0]),\n      lutMaxUniform = new vgl.floatUniform(\"lutMax\", scalarRange[1]),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n      samplerUniform = new vgl.uniform(gl.FLOAT, \"sampler2d\"),\n      lookupTable = lut;\n\n  samplerUniform.set(0);\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(scalarVertAttr, vgl.vertexAttributeKeys.Scalar);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(lutMinUniform);\n  prog.addUniform(lutMaxUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n  mat.addAttribute(lookupTable);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Update color mapped material\n *\n * @param mat\n * @param scalarRange\n * @param lut\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.updateColorMappedMaterial = function(mat, lut) {\n  'use strict';\n  if (!mat) {\n    console.log('[warning] Invalid material. Nothing to update.');\n    return;\n  }\n\n  if (!lut) {\n    console.log('[warning] Invalid lookup table. Nothing to update.');\n    return;\n  }\n\n\n  var lutMin = mat.shaderProgram().uniform('lutMin'),\n      lutMax = mat.shaderProgram().uniform('lutMax');\n\n  lutMin.set(lut.range()[0]);\n  lutMax.set(lut.range()[1]);\n\n  // This will replace the existing lookup table\n  mat.setAttribute(lut);\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of solid color material\n *\n * Helper function to create geometry material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createSolidColorMaterial = function(color) {\n  'use strict';\n  if (!color) {\n    color = [1.0,1.0,1.0];\n  }\n\n  var mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createVertexShaderSolidColor(gl),\n      fragmentShader = vgl.utils.createFragmentShaderSolidColor(gl, color),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      pointsizeUniform = new vgl.floatUniform(\"pointSize\", 5.0),\n      opacityUniform = new vgl.floatUniform(\"opacity\", 1.0),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\");\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addUniform(pointsizeUniform);\n  prog.addUniform(opacityUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of point sprites material\n *\n * Helper function to create point sprites material\n *\n * @returns {vgl.material}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSpritesMaterial = function(image, lut) {\n  'use strict';\n  var scalarRange = lut === undefined ? [0, 1] : lut.range(),\n      mat = new vgl.material(),\n      blend = new vgl.blend(),\n      prog = new vgl.shaderProgram(),\n      vertexShader = vgl.utils.createPointSpritesVertexShader(gl),\n      fragmentShader = vgl.utils.createPointSpritesFragmentShader(gl),\n      posVertAttr = new vgl.vertexAttribute(\"vertexPosition\"),\n      colorVertAttr = new vgl.vertexAttribute(\"vertexColor\"),\n      heightUniform = new vgl.floatUniform(\"height\", 0.0),\n      vertexColorWeightUniform =\n        new vgl.floatUniform(\"vertexColorWeight\", 0.0),\n      lutMinUniform = new vgl.floatUniform(\"lutMin\", scalarRange[0]),\n      lutMaxUniform = new vgl.floatUniform(\"lutMax\", scalarRange[1]),\n      modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n      projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n      samplerUniform = new vgl.uniform(gl.INT, \"opacityLookup\"),\n      scalarsToColors = new vgl.uniform(gl.INT, \"scalarsToColors\"),\n      useScalarsToColors = new vgl.uniform(gl.INT, \"useScalarsToColors\"),\n      useVertexColors = new vgl.uniform(gl.INT, \"useVertexColors\"),\n      pointSize = new vgl.uniform(gl.FLOAT_VEC2, \"pointSize\"),\n      texture = new vgl.texture();\n\n  samplerUniform.set(0);\n  scalarsToColors.set(1);\n  useScalarsToColors.set(0);\n  useVertexColors.set(0);\n  pointSize.set([1.0, 1.0]);\n\n  prog.addVertexAttribute(posVertAttr, vgl.vertexAttributeKeys.Position);\n  prog.addVertexAttribute(colorVertAttr, vgl.vertexAttributeKeys.Color);\n  prog.addUniform(heightUniform);\n  prog.addUniform(vertexColorWeightUniform);\n  prog.addUniform(modelViewUniform);\n  prog.addUniform(projectionUniform);\n  prog.addUniform(samplerUniform);\n  prog.addUniform(useVertexColors);\n  prog.addUniform(useScalarsToColors);\n  prog.addUniform(pointSize);\n  prog.addShader(fragmentShader);\n  prog.addShader(vertexShader);\n  mat.addAttribute(prog);\n  mat.addAttribute(blend);\n\n  if (lut) {\n    prog.addUniform(scalarsToColors);\n    useScalarsToColors.set(1);\n    prog.addUniform(lutMinUniform);\n    prog.addUniform(lutMaxUniform);\n    lut.setTextureUnit(1);\n    mat.addAttribute(lut);\n  }\n\n  texture.setImage(image);\n  texture.setTextureUnit(0);\n  mat.addAttribute(texture);\n  return mat;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains a plane geometry\n *\n * Function to create a plane node This method will create a plane actor\n * with texture coordinates, eventually normal, and plane material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPlane = function(originX, originY, originZ,\n                                       point1X, point1Y, point1Z,\n                                       point2X, point2Y, point2Z) {\n  'use strict';\n  var mapper = new vgl.mapper(),\n      planeSource = new vgl.planeSource(),\n      mat = vgl.utils.createGeometryMaterial(),\n      actor = new vgl.actor();\n\n  planeSource.setOrigin(originX, originY, originZ);\n  planeSource.setPoint1(point1X, point1Y, point1Z);\n  planeSource.setPoint2(point2X, point2Y, point2Z);\n\n  mapper.setGeometryData(planeSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains a texture plane geometry\n *\n * Helper function to create a plane textured node This method will create\n * a plane actor with texture coordinates, eventually normal, and plane\n * material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createTexturePlane = function(originX, originY, originZ,\n                                              point1X, point1Y, point1Z,\n                                              point2X, point2Y, point2Z,\n                                              isRgba) {\n  'use strict';\n  var mapper = new vgl.mapper(),\n      planeSource = new vgl.planeSource(),\n      mat = vgl.utils.createTextureMaterial(isRgba),\n      actor = new vgl.actor();\n\n  planeSource.setOrigin(originX, originY, originZ);\n  planeSource.setPoint1(point1X, point1Y, point1Z);\n  planeSource.setPoint2(point2X, point2Y, point2Z);\n  mapper.setGeometryData(planeSource.create());\n\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains points\n *\n * Helper function to create a point node This method will create a point\n * actor with texture coordinates, eventually normal, and plane material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPoints = function(positions, size, colors, texcoords, opacity) {\n  'use strict';\n  if (!positions) {\n    console.log(\"[ERROR] Cannot create points without positions\");\n    return null;\n  }\n\n  var opacity = opacity === undefined ? 1.0 : opacity,\n      mapper = new vgl.mapper(),\n      pointSource = new vgl.pointSource(),\n      mat = vgl.utils.createPointGeometryMaterial(opacity),\n      actor = new vgl.actor();\n\n  pointSource.setPositions(positions);\n  if (colors) {\n    pointSource.setColors(colors);\n  }\n\n  if (texcoords) {\n    pointSource.setTextureCoordinates(texcoords);\n  }\n\n  if (size) {\n    pointSource.setSize(size)\n  } else {\n    pointSource.setSize(1.0);\n  }\n\n  mapper.setGeometryData(pointSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of an actor that contains point sprites\n *\n * Helper function to create a point sprites node This method will create\n * a point sprites actor with texture coordinates, normals, and a point sprites\n * material.\n *\n * @returns {vgl.actor}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createPointSprites = function(image, positions, colors,\n                                              texcoords) {\n  'use strict';\n  if (!image) {\n    console.log(\"[ERROR] Point sprites requires an image\");\n    return null;\n  }\n\n  if (!positions) {\n    console.log(\"[ERROR] Cannot create points without positions\");\n    return null;\n  }\n\n  var mapper = new vgl.mapper(),\n      pointSource = new vgl.pointSource(),\n      mat = vgl.utils.createPointSpritesMaterial(image),\n      actor = new vgl.actor();\n\n  pointSource.setPositions(positions);\n  if (colors) {\n    pointSource.setColors(colors);\n  }\n\n  if (texcoords) {\n    pointSource.setTextureCoordinates(texcoords);\n  }\n\n  mapper.setGeometryData(pointSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create lines given positions, colors, and desired length\n *\n * @param positions\n * @param colors\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createLines = function(positions, colors) {\n  'use strict';\n  if (!positions) {\n    console.log(\"[ERROR] Cannot create points without positions\");\n    return null;\n  }\n\n  var mapper = new vgl.mapper(),\n      lineSource = new vgl.lineSource(),\n      mat = vgl.utils.createGeometryMaterial(),\n      actor = new vgl.actor();\n\n  lineSource.setPositions(positions);\n  if (colors) {\n    lineSource.setColors(colors);\n  }\n\n  mapper.setGeometryData(lineSource.create());\n  actor.setMapper(mapper);\n  actor.setMaterial(mat);\n\n  return actor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create color legend\n *\n * @param lookupTable\n * @param width\n * @param height\n * @param origin\n * @param divs\n * @returns {Array}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.createColorLegend = function(varname, lookupTable, origin,\n                                             width, height, countMajor,\n                                             countMinor) {\n  'use strict';\n\n  if (!lookupTable) {\n    console.log('[error] Invalid lookup table');\n    return [];\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create labels for the legend\n   *\n   * @param ticks\n   * @param range\n   * @param divs\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  function createLabels(varname, positions, range) {\n    if (!positions) {\n      console.log('[error] Create labels requires positions (x,y,z) array');\n      return;\n    }\n\n    if (positions.length % 3 !== 0) {\n      console.log('[error] Create labels require positions array contain 3d points');\n      return;\n    }\n\n    if (!range) {\n      console.log('[error] Create labels requires Valid range');\n      return;\n    }\n\n    var actor = null,\n        size = vgl.utils.computePowerOfTwo(48),\n        index = 0,\n        actors = [],\n        origin = [],\n        pt1 = [],\n        pt2 = [],\n        delta = (positions[6] - positions[0]),\n        axisLabelOffset = 4, i;\n\n    origin.length = 3;\n    pt1.length = 3;\n    pt2.length = 3;\n\n    // For now just create labels for end points\n    for (i = 0; i < 2; ++i) {\n      index = i * (positions.length - 3);\n\n      origin[0] = positions[index] - delta;\n      origin[1] = positions[index + 1] - 2 * delta;\n      origin[2] = positions[index + 2];\n\n      pt1[0] = positions[index] + delta;\n      pt1[1] = origin[1];\n      pt1[2] = origin[2];\n\n      pt2[0] = origin[0];\n      pt2[1] = positions[1];\n      pt2[2] = origin[2];\n\n      actor = vgl.utils.createTexturePlane(\n        origin[0], origin[1], origin[2],\n        pt1[0], pt1[1], pt1[2],\n        pt2[0], pt2[1], pt2[2], true);\n\n      actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n      actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n      actor.material().addAttribute(vgl.utils.create2DTexture(\n        range[i].toFixed(2).toString(), 12, null));\n      actors.push(actor);\n    }\n\n    // Create axis label\n    origin[0] = (positions[0] + positions[positions.length - 3]  - size) * 0.5;\n    origin[1] = positions[1] + axisLabelOffset;\n    origin[2] = positions[2];\n\n    pt1[0] = origin[0] + size;\n    pt1[1] = origin[1];\n    pt1[2] = origin[2];\n\n    pt2[0] = origin[0];\n    pt2[1] = origin[1] + size;\n    pt2[2] = origin[2];\n\n    actor = vgl.utils.createTexturePlane(\n      origin[0], origin[1], origin[2],\n      pt1[0], pt1[1], pt1[2],\n      pt2[0], pt2[1], pt2[2], true);\n    actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n    actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n    actor.material().addAttribute(vgl.utils.create2DTexture(\n      varname, 24, null));\n    actors.push(actor);\n\n    return actors;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  // TODO Currently we assume that the ticks are laid on x-axis\n  // and this is on a 2D plane (ignoring Z axis. For now lets\n  // not draw minor ticks.\n  /**\n   * Create ticks and labels\n   *\n   * @param originX\n   * @param originY\n   * @param originZ\n   * @param pt1X\n   * @param pt1Y\n   * @param pt1Z\n   * @param pt2X\n   * @param pt2Y\n   * @param pt2Z\n   * @param divs\n   * @param heightMajor\n   * @param heightMinor\n   * @returns {Array} Returns array of vgl.actor\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  function createTicksAndLabels(varname, lut,\n                        originX, originY, originZ,\n                        pt1X, pt1Y, pt1Z,\n                        pt2X, pt2Y, pt2Z,\n                        countMajor, countMinor,\n                        heightMajor, heightMinor) {\n    var width = pt2X - pt1X,\n        index = null,\n        delta = width / countMajor,\n        positions = [],\n        actor = null,\n        actors = [];\n\n    for (index = 0; index <= countMajor; ++index) {\n      positions.push(pt1X + delta * index);\n      positions.push(pt1Y);\n      positions.push(pt1Z);\n\n      positions.push(pt1X + delta * index);\n      positions.push(pt1Y + heightMajor);\n      positions.push(pt1Z);\n    }\n\n    actor = vgl.utils.createLines(positions, null);\n    actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n    actor.material().setBinNumber(vgl.material.RenderBin.Overlay);\n    actors.push(actor);\n\n    actors = actors.concat(createLabels(varname, positions, lut.range()));\n    return actors;\n  }\n\n  // TODO Currently we create only one type of legend\n  var pt1X = origin[0] + width,\n      pt1Y = origin[1],\n      pt1Z = 0.0,\n      pt2X = origin[0],\n      pt2Y = origin[1] + height,\n      pt2Z = 0.0,\n      actors = [],\n      actor = null,\n      mapper = null,\n      mat = null,\n      group = vgl.groupNode();\n\n  actor = vgl.utils.createTexturePlane(\n    origin[0], origin[1], origin[2],\n    pt1X, pt1Y, pt1Z,\n    pt2X, pt2Y, pt2Z\n  );\n\n  mat = actor.material();\n  mat.addAttribute(lookupTable);\n  actor.setMaterial(mat);\n  group.addChild(actor);\n  actor.setReferenceFrame(vgl.boundingObject.ReferenceFrame.Absolute);\n  actors.push(actor);\n  actors = actors.concat(createTicksAndLabels(\n                          varname,\n                          lookupTable,\n                          origin[0], origin[1], origin[1],\n                          pt2X, pt1Y, pt1Z,\n                          pt1X, pt1Y, pt1Z,\n                          countMajor, countMinor, 5, 3));\n\n  // TODO This needs to change so that we can return a group node\n  // which should get appended to the scene graph\n  return actors;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create 2D texture by rendering text using canvas2D context\n *\n * @param textToWrite\n * @param textSize\n * @param color\n * @returns {vgl.texture}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.utils.create2DTexture = function(textToWrite, textSize,\n  color, font, alignment, baseline, bold) {\n  'use strict';\n\n  var canvas = document.getElementById('textRendering'),\n      ctx = null,\n      texture = vgl.texture();\n\n  font = font || 'sans-serif';\n  alignment = alignment || 'center';\n  baseline = baseline || 'bottom';\n\n  if (typeof bold === 'undefined') {\n    bold = true;\n  }\n\n  if (!canvas) {\n    canvas = document.createElement('canvas');\n  }\n  ctx = canvas.getContext('2d');\n\n  canvas.setAttribute('id', 'textRendering');\n  canvas.style.display = 'none';\n\n  // Make width and height equal so that we get pretty looking text.\n  canvas.height = vgl.utils.computePowerOfTwo(8 * textSize);\n  canvas.width = canvas.height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  // This determines the text colour, it can take a hex value or rgba value (e.g. rgba(255,0,0,0.5))\n  ctx.fillStyle = 'rgba(200, 85, 10, 1.0)';\n\n  // This determines the alignment of text, e.g. left, center, right\n  ctx.textAlign = alignment;\n\n  // This determines the baseline of the text, e.g. top, middle, bottom\n  ctx.textBaseline = baseline;\n\n  // This determines the size of the text and the font family used\n  ctx.font = 4 * textSize + \"px \" + font;\n  if (bold) {\n    ctx.font = \"bold \" + ctx.font;\n  }\n\n  ctx.fillText(textToWrite, canvas.width/2, canvas.height/2, canvas.width);\n\n  texture.setImage(canvas);\n  texture.updateDimensions();\n\n  return texture;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class picker\n *\n * @class vgl.picker\n * @returns {vgl.picker}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.picker = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.picker)) {\n    return new vgl.picker();\n  }\n  vgl.object.call(this);\n\n  /** @private */\n  var m_that = this,\n      m_tolerance = 0.025,\n      m_actors = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get actors intersected\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getActors = function() {\n    return m_actors;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Perform pick operation\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pick = function(selectionX, selectionY, renderer) {\n    // Check if variables are acceptable\n    if (typeof(selectionX) === \"undefined\"){\n      return 0;\n    }\n    if (typeof(selectionY) === \"undefined\"){\n      return 0;\n    }\n    if (typeof(renderer) === \"undefined\"){\n      return 0;\n    }\n\n    // Clean list of actors intersected previously\n    m_actors = [];\n\n    //\n    var camera = renderer.camera(),\n        width = renderer.width(),\n        height = renderer.height(),\n        fpoint = camera.focalPoint(),\n        focusWorldPt = vec4.fromValues(fpoint[0], fpoint[1], fpoint[2], 1.0),\n        focusDisplayPt = renderer.worldToDisplay(\n          focusWorldPt, camera.viewMatrix(),\n        camera.projectionMatrix(), width, height),\n        displayPt = vec4.fromValues(selectionX,\n                      selectionY, focusDisplayPt[2], 1.0),\n        // Convert selection point into world coordinates\n        worldPt = renderer.displayToWorld(displayPt, camera.viewMatrix(),\n                    camera.projectionMatrix(), width, height),\n        cameraPos = camera.position(), ray = [], actors, count, i, bb,\n        tmin, tmax, tymin, tymax, tzmin, tzmax, actor;\n\n    for (i = 0; i < 3; ++i){\n      ray[i] = worldPt[i] - cameraPos[i];\n    }\n\n    // Go through all actors and check if intersects\n    actors = renderer.sceneRoot().children();\n    count = 0;\n\n    for (i = 0; i < actors.length; ++i) {\n      actor = actors[i];\n      if (actor.visible() === true) {\n        bb = actor.bounds();\n        // Ray-aabb intersection - Smits' method\n        if (ray[0] >= 0){\n          tmin = (bb[0] - cameraPos[0])/ray[0];\n          tmax = (bb[1] - cameraPos[0])/ray[0];\n        } else {\n          tmin = (bb[1] - cameraPos[0])/ray[0];\n          tmax = (bb[0] - cameraPos[0])/ray[0];\n        }\n        if (ray[1] >= 0){\n          tymin = (bb[2] - cameraPos[1])/ray[1];\n          tymax = (bb[3] - cameraPos[1])/ray[1];\n        } else {\n          tymin = (bb[3] - cameraPos[1])/ray[1];\n          tymax = (bb[2] - cameraPos[1])/ray[1];\n        }\n        if ((tmin > tymax) || (tymin > tmax)) {\n          continue;\n        }\n\n\n        if (tymin > tmin) {\n          tmin = tymin;\n        }\n        if (tymax < tmax) {\n          tmax = tymax;\n        }\n        if (ray[2] >= 0) {\n          tzmin = (bb[4] - cameraPos[2])/ray[2];\n          tzmax = (bb[5] - cameraPos[2])/ray[2];\n        } else {\n          tzmin = (bb[5] - cameraPos[2])/ray[2];\n          tzmax = (bb[4] - cameraPos[2])/ray[2];\n        }\n        if ((tmin > tzmax) || (tzmin > tmax)) {\n          continue;\n        }\n        if (tzmin > tmin) {\n          tmin = tzmin;\n        }\n        if (tzmax < tmax) {\n          tmax = tzmax;\n        }\n\n        m_actors[count++] = actor;\n      }\n    }\n    return count;\n  };\n\n  return this;\n};\n\ninherit(vgl.picker, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2*/\n\n/*global vgl, ogs, vec4, inherit, $, Uint16Array*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of shapefile reader\n *\n * This contains code that reads a shapefile and produces vgl geometries\n *\n * @class\n * @returns {vgl.shapefileReader}\n */\n//////////////////////////////////////////////////////////////////////////////\nvgl.shapefileReader = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.shapefileReader)) {\n    return new vgl.shapefileReader();\n  }\n\n  var m_that = this;\n  var SHP_HEADER_LEN = 8;\n  var SHP_NULL = 0;\n  var SHP_POINT = 1;\n  var SHP_POLYGON = 5;\n  var SHP_POLYLINE = 3;\n\n  this.int8 = function (data, offset) {\n      return data.charCodeAt (offset);\n  };\n\n  this.bint32 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset) & 0xff) << 24) +\n        ((data.charCodeAt (offset + 1) & 0xff) << 16) +\n        ((data.charCodeAt (offset + 2) & 0xff) << 8) +\n        (data.charCodeAt (offset + 3) & 0xff)\n    );\n  };\n\n  this.lint32 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset + 3) & 0xff) << 24) +\n        ((data.charCodeAt (offset + 2) & 0xff) << 16) +\n        ((data.charCodeAt (offset + 1) & 0xff) << 8) +\n        (data.charCodeAt (offset) & 0xff)\n    );\n  };\n\n  this.bint16 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset) & 0xff) << 8) +\n        (data.charCodeAt (offset + 1) & 0xff)\n    );\n  };\n\n  this.lint16 = function (data, offset) {\n    return (\n      ((data.charCodeAt (offset + 1) & 0xff) << 8) +\n        (data.charCodeAt (offset) & 0xff)\n    );\n  };\n\n  this.ldbl64 = function (data, offset) {\n    var b0 = data.charCodeAt (offset) & 0xff;\n    var b1 = data.charCodeAt (offset + 1) & 0xff;\n    var b2 = data.charCodeAt (offset + 2) & 0xff;\n    var b3 = data.charCodeAt (offset + 3) & 0xff;\n    var b4 = data.charCodeAt (offset + 4) & 0xff;\n    var b5 = data.charCodeAt (offset + 5) & 0xff;\n    var b6 = data.charCodeAt (offset + 6) & 0xff;\n    var b7 = data.charCodeAt (offset + 7) & 0xff;\n\n    var sign = 1 - 2 * (b7 >> 7);\n    var exp = (((b7 & 0x7f) << 4) + ((b6 & 0xf0) >> 4)) - 1023;\n    //var frac = (b6 & 0x0f) * Math.pow (2, -4) + b5 * Math.pow (2, -12) + b4 *\n    // Math.pow (2, -20) + b3 * Math.pow (2, -28) + b2 * Math.pow (2, -36) + b1 *\n    // Math.pow (2, -44) + b0 * Math.pow (2, -52);\n\n    //return sign * (1 + frac) * Math.pow (2, exp);\n    var frac = (b6 & 0x0f) * Math.pow (2, 48) + b5 * Math.pow (2, 40) + b4 *\n                 Math.pow (2, 32) + b3 * Math.pow (2, 24) + b2 *\n                 Math.pow (2, 16) + b1 * Math.pow (2, 8) + b0;\n\n    return sign * (1 + frac * Math.pow (2, -52)) * Math.pow (2, exp);\n  };\n\n  this.lfloat32 = function (data, offset) {\n    var b0 = data.charCodeAt (offset) & 0xff;\n    var b1 = data.charCodeAt (offset + 1) & 0xff;\n    var b2 = data.charCodeAt (offset + 2) & 0xff;\n    var b3 = data.charCodeAt (offset + 3) & 0xff;\n\n    var sign = 1 - 2 * (b3 >> 7);\n    var exp = (((b3 & 0x7f) << 1) + ((b2 & 0xfe) >> 7)) - 127;\n    var frac = (b2 & 0x7f) * Math.pow (2, 16) + b1 * Math.pow (2, 8) + b0;\n\n    return sign * (1 + frac * Math.pow (2, -23)) * Math.pow (2, exp);\n  };\n\n  this.str = function (data, offset, length) {\n    var chars = [];\n    var index = offset;\n    while (index < offset + length) {\n      var c = data[index];\n      if (c.charCodeAt (0) !== 0)\n        chars.push (c);\n      else {\n        break;\n      }\n      index ++;\n    }\n    return chars.join ('');\n  };\n\n  this.readHeader = function (data) {\n    var code = this.bint32(data, 0);\n    var length = this.bint32(data, 24);\n    var version = this.lint32(data, 28);\n    var shapetype = this.lint32(data, 32);\n\n    var xmin = this.ldbl64(data, 36);\n    var ymin = this.ldbl64(data, 44);\n    var xmax = this.ldbl64(data, 52);\n    var ymax = this.ldbl64(data, 60);\n    return {\n      code: code,\n      length: length,\n      version: version,\n      shapetype: shapetype,\n      bounds: new Box (vect (xmin, ymin), vect (xmax, ymax))\n    };\n  };\n\n  this.loadShx = function (data) {\n    var indices = [];\n    var appendIndex = function (offset) {\n      indices.push (2 * m_that.bint32(data, offset));\n      return offset + 8;\n    };\n    var offset = 100;\n    while (offset < data.length) {\n      offset = appendIndex (offset);\n    }\n    return indices;\n  };\n\n  this.Shapefile = function (options) {\n    var path = options.path;\n    $.ajax ({\n      url: path + '.shx',\n      mimeType: 'text/plain; charset=x-user-defined',\n      success: function (data) {\n        var indices = this.loadShx(data);\n        $.ajax ({\n          url: path + '.shp',\n          mimeType: 'text/plain; charset=x-user-defined',\n          success: function (data) {\n            $.ajax ({\n              url: path + '.dbf',\n              mimeType: 'text/plain; charset=x-user-defined',\n              success: function (dbf_data) {\n                var layer = this.loadShp (data, dbf_data, indices, options);\n                options.success (layer);\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  this.localShapefile = function(options) {\n    var shxFile = options.shx;\n    var shpFile = options.shp;\n    var dbfFile = options.dbf;\n    var shxReader = new FileReader();\n    shxReader.onloadend = function() {\n      var indices = m_that.loadShx(shxReader.result);\n      var shpReader = new FileReader();\n\n      shpReader.onloadend = function() {\n        var shpData = shpReader.result;\n\n        var dbfReader = new FileReader();\n        dbfReader.onloadend = function() {\n          var dbfData = dbfReader.result;\n          var layer = m_that.loadShp(shpData, dbfData, indices, options);\n          options.success(layer);\n        };\n        dbfReader.readAsBinaryString(dbfFile);\n      };\n      shpReader.readAsBinaryString(shpFile);\n    };\n    shxReader.readAsBinaryString(shxFile);\n  };\n\n  this.loadDBF = function (data) {\n    var readHeader = function (offset) {\n      var name = m_that.str(data, offset, 10);\n      var type = m_that.str(data, offset + 11, 1);\n      var length = m_that.int8(data, offset + 16);\n      return {\n        name: name,\n        type: type,\n        length: length\n      };\n    };\n\n    // Level of the dBASE file\n    var level = m_that.int8(data, 0);\n    if (level == 4) {\n      throw \"Level 7 dBASE not supported\";\n    }\n\n    // Date of last update\n    var year = m_that.int8(data, 1);\n    var month = m_that.int8(data, 2);\n    var day = m_that.int8(data, 3);\n\n    var num_entries = m_that.lint32(data, 4);\n    var header_size = m_that.lint16(data, 8);\n    var record_size = m_that.lint16(data, 10);\n\n    var FIELDS_START = 32;\n    var HEADER_LENGTH = 32;\n\n    var header_offset = FIELDS_START;\n    var headers = [];\n    while (header_offset < header_size - 1) {\n      headers.push (readHeader(header_offset));\n      header_offset += HEADER_LENGTH;\n    }\n\n    var records = [];\n    var record_offset = header_size;\n    while (record_offset < header_size + num_entries * record_size) {\n      var declare = m_that.str(data, record_offset, 1);\n      if (declare == '*') {\n        // Record size in the header include the size of the delete indicator\n        record_offset += record_size;\n      }\n      else {\n        // Move offset to the start of the actual data\n        record_offset ++;\n        var record = {};\n        for (var i = 0; i < headers.length; i ++) {\n          var header = headers[i];\n          var value;\n          if (header.type == 'C') {\n              value = m_that.str(data, record_offset, header.length).trim ();\n          }\n          else if (header.type == 'N') {\n              value = parseFloat (m_that.str (data, record_offset, header.length));\n          }\n          record_offset += header.length;\n          record[header.name] = value;\n        }\n        records.push(record);\n      }\n    }\n    return records;\n  };\n\n  this.loadShp = function (data, dbf_data, indices, options) {\n    var features = [];\n    var readRing = function (offset, start, end) {\n      var ring = [];\n      for (var i = end - 1; i >= start; i --) {\n        var x = m_that.ldbl64(data, offset + 16 * i);\n        var y = m_that.ldbl64(data, offset + 16 * i + 8);\n        ring.push ([x, y]);\n      }\n      //if (ring.length <= 3)\n      // return [];\n      return ring;\n    };\n\n    var readRecord = function (offset) {\n      var index = m_that.bint32(data, offset);\n      var record_length = m_that.bint32(data, offset + 4);\n      var record_offset = offset + 8;\n      var geom_type = m_that.lint32(data, record_offset);\n\n      if (geom_type == SHP_NULL) {\n        console.log (\"NULL Shape\");\n        //return offset + 12;\n      }\n      else if (geom_type == SHP_POINT) {\n        var x = m_that.ldbl64(data, record_offset + 4);\n        var y = m_that.ldbl64(data, record_offset + 12);\n\n        features.push ({\n          type: 'Point',\n          attr: {},\n          geom: [[x, y]]\n        });\n      }\n      else if (geom_type == SHP_POLYGON) {\n        var num_parts = m_that.lint32(data, record_offset + 36);\n        var num_points = m_that.lint32(data, record_offset + 40);\n\n        var parts_start = offset + 52;\n        var points_start = offset + 52 + 4 * num_parts;\n\n        var rings = [];\n        for (var i = 0; i < num_parts; i ++) {\n          var start = m_that.lint32(data, parts_start + i * 4);\n          var end;\n          if (i + 1 < num_parts) {\n            end = m_that.lint32(data, parts_start + (i + 1) * 4);\n          }\n          else {\n            end = num_points;\n          }\n          var ring = readRing (points_start, start, end);\n          rings.push (ring);\n        }\n        features.push ({\n          type: 'Polygon',\n          attr: {},\n          geom: [rings]\n        });\n      }\n      else if (geom_type == SHP_POLYLINE) {\n        var num_parts = m_that.lint32(data, record_offset + 36);\n        var num_points = m_that.lint32(data, record_offset + 40);\n\n        var parts_start = offset + 52;\n        var points_start = offset + 52 + 4 * num_parts;\n\n        var rings = [];\n        for (var i = 0; i < num_parts; i ++) {\n          var start = m_that.lint32(data, parts_start + i * 4);\n          var end;\n          if (i + 1 < num_parts) {\n              end = m_that.lint32(data, parts_start + (i + 1) * 4);\n          }\n          else {\n              end = num_points;\n          }\n          var ring = readRing (points_start, start, end);\n          rings.push (ring);\n        }\n        features.push ({\n          type: 'Polyline',\n          attr: {},\n          geom: [rings]\n        });\n      }\n      else {\n        throw \"Not Implemented: \" + geom_type;\n      }\n      //return offset + 2 * record_length + SHP_HEADER_LEN;\n    };\n\n    var attr = this.loadDBF(dbf_data);\n\n    //var offset = 100;\n    //while (offset < length * 2) {\n    // offset = readRecord (offset);\n    //}\n    for (var i = 0; i < indices.length; i ++) {\n      var offset = indices[i];\n      readRecord (offset);\n    }\n\n    var layer = []; //new Layer ();\n\n    for (var i = 0; i < features.length; i ++) {\n      var feature = features[i];\n      feature.attr = attr[i];\n      layer.push (feature);\n    }\n    return layer;\n  };\n\n  return this;\n};","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module vgl\n */\n\n/*jslint devel: true, forin: true, newcap: true, plusplus: true*/\n/*jslint white: true, continue:true, indent: 2, bitwise: true*/\n\n\n/*global vgl, vec4, mat4, inherit, unescape*/\n/*global Float32Array, Int8Array, gl, Uint16Array, $*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n//\n// vbgModule.vtkReader class\n// This contains code that unpack a json base64 encoded vtkdataset,\n// such as those produced by ParaView's webGL exporter (where much\n// of the code originated from) and convert it to VGL representation.\n//\n//////////////////////////////////////////////////////////////////////////////\n\nvgl.vtkReader = function() {\n  'use strict';\n\n  if (!(this instanceof vgl.vtkReader)) {\n    return new vgl.vtkReader();\n  }\n\n  var m_base64Chars =\n    ['A','B','C','D','E','F','G','H','I','J','K','L','M',\n     'N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n     'a','b','c','d','e','f','g','h','i','j','k','l','m',\n     'n','o','p','q','r','s','t','u','v','w','x','y','z',\n     '0','1','2','3','4','5','6','7','8','9','+','/'],\n  m_reverseBase64Chars = [],\n  m_vtkObjectList = {},\n  m_vglObjects = {},\n  m_vtkRenderedList = {},\n  m_vtkObjHashList = {},\n  m_vtkObjectCount = 0,\n  m_vtkScene = null,\n  m_node = null,\n  END_OF_INPUT = -1,\n  m_base64Str = \"\",\n  m_base64Count = 0,\n  m_pos = 0,\n  m_viewer = null,\n  i = 0;\n\n  //initialize the array here if not already done.\n  if (m_reverseBase64Chars.length === 0) {\n    for ( i = 0; i < m_base64Chars.length; i++) {\n      m_reverseBase64Chars[m_base64Chars[i]] = i;\n    }\n  }\n\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * ntos\n   *\n   * @param n\n   * @returns unescaped n\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.ntos = function (n) {\n    var unN;\n\n    unN = n.toString(16);\n    if (unN.length === 1) {\n      unN = '0' + unN;\n    }\n    unN = '%' + unN;\n\n    return unescape(unN);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readReverseBase64\n   *\n   * @returns\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readReverseBase64 = function () {\n    var nextCharacter;\n\n    if (!m_base64Str) {\n      return END_OF_INPUT;\n    }\n\n    while (true) {\n      if (m_base64Count >= m_base64Str.length) {\n        return END_OF_INPUT;\n      }\n      nextCharacter = m_base64Str.charAt(m_base64Count);\n      m_base64Count++;\n\n      if (m_reverseBase64Chars[nextCharacter]) {\n        return m_reverseBase64Chars[nextCharacter];\n      }\n      if (nextCharacter === 'A') {\n        return 0;\n      }\n    }\n\n    return END_OF_INPUT;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * decode64\n   *\n   * @param str\n   * @returns result\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.decode64 = function(str) {\n    var result = '',\n        inBuffer = new Array(4),\n        done = false;\n\n    m_base64Str = str;\n    m_base64Count = 0;\n\n    while (!done &&\n           (inBuffer[0] = this.readReverseBase64()) !== END_OF_INPUT &&\n           (inBuffer[1] = this.readReverseBase64()) !== END_OF_INPUT) {\n      inBuffer[2] = this.readReverseBase64();\n      inBuffer[3] = this.readReverseBase64();\n      result += this.ntos((((inBuffer[0] << 2) & 0xff) | inBuffer[1] >> 4));\n      if (inBuffer[2] !== END_OF_INPUT) {\n        result +=  this.ntos((((inBuffer[1] << 4) & 0xff) | inBuffer[2] >> 2));\n        if (inBuffer[3] !== END_OF_INPUT) {\n          result +=  this.ntos((((inBuffer[2] << 6) & 0xff) | inBuffer[3]));\n        } else {\n          done = true;\n        }\n      } else {\n        done = true;\n      }\n    }\n\n    return result;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readNumber\n   *\n   * @param ss\n   * @returns v\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readNumber = function(ss) {\n    var v = ((ss[m_pos++]) +\n             (ss[m_pos++] << 8) +\n             (ss[m_pos++] << 16) +\n             (ss[m_pos++] << 24));\n    return v;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readF3Array\n   *\n   * @param numberOfPoints\n   * @param ss\n   * @returns points\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readF3Array = function(numberOfPoints, ss) {\n    var size = numberOfPoints*4*3, test = new Int8Array(size),\n        points = null, i;\n\n    for(i = 0; i < size; i++) {\n      test[i] = ss[m_pos++];\n    }\n\n    points = new Float32Array(test.buffer);\n\n    return points;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * readColorArray\n   *\n   * @param numberOfPoints\n   * @param ss\n   * @param vglcolors\n   * @returns points\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.readColorArray = function (numberOfPoints, ss, vglcolors) {\n    var i,r,g,b,idx = 0, tmp = new Array(numberOfPoints*3);\n    for(i = 0; i < numberOfPoints; i++) {\n      tmp[idx++] = ss[m_pos++]/255.0;\n      tmp[idx++] = ss[m_pos++]/255.0;\n      tmp[idx++] = ss[m_pos++]/255.0;\n      m_pos++;\n    }\n    vglcolors.insert(tmp);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseObject\n   *\n   * @param buffer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseObject = function(vtkObject) {\n    var geom = new vgl.geometryData(),\n        mapper = vgl.mapper(),\n        ss = [], type = null, data = null, size,\n        matrix = null, material = null,\n        actor = null, shaderProg, opacityUniform;\n\n    //dehexlify\n//    data = this.decode64(vtkObject.data);\n    data = atob(vtkObject.data);\n    for(i = 0; i < data.length; i++) {\n      ss[i] = data.charCodeAt(i) & 0xff;\n    }\n\n    //Determine the Object type\n    m_pos = 0;\n    size = this.readNumber(ss);\n    type = String.fromCharCode(ss[m_pos++]);\n    geom.setName(type);\n\n    // Lines\n    if (type === 'L') {\n      matrix = this.parseLineData(geom, ss);\n      material = vgl.utils.createGeometryMaterial();\n    }\n    // Mesh\n    else if (type === 'M') {\n      matrix = this.parseMeshData(geom, ss);\n      material = vgl.utils.createPhongMaterial();\n    }\n    // Points\n    else if (type === 'P'){\n      matrix = this.parsePointData(geom, ss);\n      material = vgl.utils.createGeometryMaterial();\n    }\n    // ColorMap\n    else if (type === 'C') {\n      matrix = this.parseColorMapData(geom, ss, size);\n      material = vgl.utils.createGeometryMaterial();\n    }\n    // Unknown\n    else {\n      console.log(\"Ignoring unrecognized encoded data type \" + type);\n    }\n\n    mapper.setGeometryData(geom);\n\n    //default opacity === solid. If were transparent, set it lower.\n    if (vtkObject.hasTransparency) {\n      shaderProg = material.shaderProgram();\n      opacityUniform = shaderProg.uniform(\"opacity\");\n      shaderProg.addUniform(new vgl.floatUniform(\"opacity\", 0.5));\n      material.setBinNumber(1000);\n    }\n\n    actor = vgl.actor();\n    actor.setMapper(mapper);\n    actor.setMaterial(material);\n    actor.setMatrix(mat4.transpose(mat4.create(), matrix));\n\n    return actor;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseLineData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseLineData = function(geom, ss) {\n    var vglpoints = null, vglcolors = null, vgllines = null,\n        matrix = mat4.create(),\n        numberOfIndex, numberOfPoints, points,\n        temp, index, size, m, i,\n        p = null, idx = 0;\n\n    numberOfPoints = this.readNumber(ss);\n    p = new Array(numberOfPoints*3);\n\n    //Getting Points\n    vglpoints = new vgl.sourceDataP3fv();\n    points = this.readF3Array(numberOfPoints, ss);\n\n    for(i = 0; i < numberOfPoints; i++) {\n      p[idx++] = points[i*3/*+0*/];\n      p[idx++] = points[i*3+1];\n      p[idx++] =  points[i*3+2];\n    }\n    vglpoints.insert(p);\n    geom.addSource(vglpoints);\n\n    //Getting Colors\n    vglcolors = new vgl.sourceDataC3fv();\n    this.readColorArray(numberOfPoints, ss, vglcolors);\n    geom.addSource(vglcolors);\n\n    //Getting connectivity\n    vgllines = new vgl.lines();\n    geom.addPrimitive(vgllines);\n    numberOfIndex = this.readNumber(ss);\n\n    temp = new Int8Array(numberOfIndex*2);\n    for(i = 0; i < numberOfIndex*2; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    index = new Uint16Array(temp.buffer);\n    vgllines.setIndices(index);\n    vgllines.setPrimitiveType(gl.LINES);\n\n    //Getting Matrix\n    size = 16*4;\n    temp = new Int8Array(size);\n    for(i=0; i<size; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    m = new Float32Array(temp.buffer);\n    mat4.copy(matrix, m);\n\n    return matrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseMeshData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseMeshData = function(geom, ss) {\n    var vglpoints = null, vglcolors = null, vgllines = null,\n        normals = null, matrix = mat4.create(), v1 = null,\n        vgltriangles = null, numberOfIndex, numberOfPoints,\n        points, temp, index, size, m, i, tcoord,\n        pn = null, idx = 0;\n\n    numberOfPoints = this.readNumber(ss);\n    pn = new Array(numberOfPoints*6);\n    //Getting Points\n    vglpoints = new vgl.sourceDataP3N3f();\n    points = this.readF3Array(numberOfPoints, ss);\n\n    //Getting Normals\n    normals = this.readF3Array(numberOfPoints, ss);\n    for(i = 0; i < numberOfPoints; i++) {\n      pn[idx++] = points[i*3/*+0*/];\n      pn[idx++] = points[i*3+1];\n      pn[idx++] = points[i*3+2];\n      pn[idx++] = normals[i*3/*+0*/];\n      pn[idx++] = normals[i*3+1];\n      pn[idx++] = normals[i*3+2];\n    }\n    vglpoints.insert(pn);\n    geom.addSource(vglpoints);\n\n    //Getting Colors\n    vglcolors = new vgl.sourceDataC3fv();\n    this.readColorArray(numberOfPoints, ss, vglcolors);\n    geom.addSource(vglcolors);\n\n    //Getting connectivity\n    temp = [];\n    vgltriangles = new vgl.triangles();\n    numberOfIndex = this.readNumber(ss);\n\n    temp = new Int8Array(numberOfIndex*2);\n    for(i = 0; i < numberOfIndex*2; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    index = new Uint16Array(temp.buffer);\n    vgltriangles.setIndices(index);\n    geom.addPrimitive(vgltriangles);\n\n    //Getting Matrix\n    size = 16*4;\n    temp = new Int8Array(size);\n    for(i = 0; i < size; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    m = new Float32Array(temp.buffer);\n    mat4.copy(matrix, m);\n\n    //Getting TCoord\n    //TODO: renderer is not doing anything with this yet\n    tcoord = null;\n\n    return matrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parsePointData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parsePointData = function(geom, ss) {\n    var numberOfPoints, points, indices, temp, size,\n        matrix = mat4.create(), vglpoints = null,\n        vglcolors = null, vglVertexes = null, m,\n        p = null, idx = 0;\n\n    numberOfPoints = this.readNumber(ss);\n    p = new Array(numberOfPoints*3);\n\n    //Getting Points and creating 1:1 connectivity\n    vglpoints = new vgl.sourceDataP3fv();\n    points = this.readF3Array(numberOfPoints, ss);\n\n    indices = new Uint16Array(numberOfPoints);\n\n    for (i = 0; i < numberOfPoints; i++) {\n      indices[i] = i;\n      p[idx++] = points[i*3/*+0*/];\n      p[idx++] = points[i*3+1];\n      p[idx++] = points[i*3+2];\n    }\n    vglpoints.insert(p);\n    geom.addSource(vglpoints);\n\n    //Getting Colors\n    vglcolors = new vgl.sourceDataC3fv();\n    this.readColorArray(numberOfPoints, ss, vglcolors);\n    geom.addSource(vglcolors);\n\n    //Getting connectivity\n    vglVertexes = new vgl.points();\n    vglVertexes.setIndices(indices);\n    geom.addPrimitive(vglVertexes);\n\n    //Getting matrix\n    size = 16*4;\n    temp = new Int8Array(size);\n    for(i = 0; i < size; i++) {\n      temp[i] = ss[m_pos++];\n    }\n\n    m = new Float32Array(temp.buffer);\n    mat4.copy(matrix, m);\n\n    return matrix;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseColorMapData\n   *\n   * @param geom, ss\n   * @returns matrix\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseColorMapData = function(geom, ss, numColors) {\n\n/******* NOTE:,\n         This code is a copy of the webgl version, not yet implemented here.\n    var tmpArray, size, xrgb, i, c;\n\n\n    // Getting Position\n    size = 2 * 4;\n    tmpArray = new Int8Array(size);\n    for(i=0; i < size; i++) {\n      tmpArray[i] = ss[m_pos++];\n    }\n    obj.position = new Float32Array(tmpArray.buffer);\n\n    // Getting Size\n    size = 2 * 4;\n    tmpArray = new Int8Array(2*4);\n    for(i=0; i < size; i++) {\n      tmpArray[i] = binaryArray[cursor++];\n    }\n    obj.size = new Float32Array(tmpArray.buffer);\n\n    //Getting Colors\n    obj.colors = [];\n    for(c=0; c < obj.numOfColors; c++){\n      tmpArray = new Int8Array(4);\n      for(i=0; i < 4; i++) {\n        tmpArray[i] = binaryArray[cursor++];\n      }\n      xrgb = [\n        new Float32Array(tmpArray.buffer)[0],\n        binaryArray[cursor++],\n        binaryArray[cursor++],\n        binaryArray[cursor++]\n      ];\n      obj.colors[c] = xrgb;\n    }\n\n    obj.orientation = binaryArray[cursor++];\n    obj.numOfLabels = binaryArray[cursor++];\n    obj.title = \"\";\n    while(cursor < binaryArray.length) {\n      obj.title += String.fromCharCode(binaryArray[cursor++]);\n    }\n\n*/\n    return null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * parseSceneMetadata\n   *\n   * @param data\n   * @returns renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.parseSceneMetadata = function(renderer, layer) {\n\n    var sceneRenderer = m_vtkScene.Renderers[layer],\n        camera = renderer.camera(), bgc, localWidth, localHeight;\n\n    localWidth = (sceneRenderer.size[0] - sceneRenderer.origin[0])*m_node.width;\n    localHeight = (sceneRenderer.size[1] - sceneRenderer.origin[1])*m_node.height;\n    renderer.resize(localWidth, localHeight);\n\n    /// We are setting the center to the focal point because of\n    /// a possible paraview web bug. The center of rotation isn't\n    /// getting updated correctly on resetCamera.\n    camera.setCenterOfRotation(\n      [sceneRenderer.LookAt[1], sceneRenderer.LookAt[2],\n       sceneRenderer.LookAt[3]]);\n    camera.setViewAngleDegrees(sceneRenderer.LookAt[0]);\n    camera.setPosition(\n      sceneRenderer.LookAt[7], sceneRenderer.LookAt[8],\n      sceneRenderer.LookAt[9]);\n    camera.setFocalPoint(\n      sceneRenderer.LookAt[1], sceneRenderer.LookAt[2],\n      sceneRenderer.LookAt[3]);\n    camera.setViewUpDirection(\n      sceneRenderer.LookAt[4], sceneRenderer.LookAt[5],\n      sceneRenderer.LookAt[6]);\n\n    if (layer === 0)\n    {\n      bgc = sceneRenderer.Background1;\n      renderer.setBackgroundColor(bgc[0], bgc[1], bgc[2], 1);\n    } else {\n        renderer.setResizable(false);\n    }\n    renderer.setLayer(layer);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * initScene\n   *\n   * @returns viewer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.initScene = function() {\n    var renderer, layer;\n\n    if ( m_vtkScene === null ) {\n      return m_viewer;\n    }\n    for(layer = m_vtkScene.Renderers.length - 1; layer >= 0; layer--) {\n\n      renderer = this.getRenderer(layer);\n      this.parseSceneMetadata(renderer, layer);\n    }\n\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * createViewer - Creates a viewer object.\n   *\n   * @param\n   *\n   * @returns viewer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createViewer = function(node) {\n    var interactorStyle;\n\n    if(m_viewer === null) {\n      m_node = node;\n      m_viewer = vgl.viewer(node);\n      m_viewer.init();\n      m_vtkRenderedList[0] = m_viewer.renderWindow().activeRenderer();\n      m_viewer.renderWindow().resize(node.width, node.height);\n      interactorStyle = vgl.pvwInteractorStyle();\n      m_viewer.setInteractorStyle(interactorStyle);\n    }\n\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * deleteViewer - Deletes the viewer object associated with the reader.\n   *\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteViewer = function() {\n      m_vtkRenderedList = {};\n      m_viewer = null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * updateCanvas -\n   *\n   * @param\n   *\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateCanvas = function(node) {\n    m_node = node;\n    m_viewer.renderWindow().resize(node.width, node.height);\n\n    return m_viewer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * clearVtkObjectData - Clear out the list of VTK geometry data.\n   *\n   * @param void\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.numObjects = function() {\n    return m_vtkObjectCount;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * getRenderer - Gets (or creates) the renderer for a layer.\n   *\n   * @param layer\n   * @returns renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.getRenderer = function(layer) {\n    var renderer;\n\n    renderer = m_vtkRenderedList[layer];\n    if (renderer === null || typeof renderer === 'undefined') {\n      renderer = new vgl.renderer();\n      renderer.setResetScene(false);\n      renderer.setResetClippingRange(false);\n      m_viewer.renderWindow().addRenderer(renderer);\n\n      if (layer !== 0) {\n          renderer.camera().setClearMask(vgl.GL.DepthBufferBit);\n      }\n\n      m_vtkRenderedList[layer] = renderer;\n    }\n\n    return renderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * setVtkScene - Set the VTK scene data for camera initialization.\n   *\n   * @param scene\n   * @returns void\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.setVtkScene = function(scene) {\n    m_vtkScene = scene;\n  };\n\n  return this;\n};\n","vgl.DataBuffers = function (initialSize) {\n    if (!(this instanceof vgl.DataBuffers)) {\n      return new vgl.DataBuffers(initialSize);\n    }\n\n    var data = {};\n\n    var size;\n    if (!initialSize)\n        size = 256;\n    else\n        size = initialSize;\n\n    var current = 0;\n\n    var copyArray = function (dst, src, start, count) {\n        if (!dst)\n            console.log ('ack');\n        if (!start)\n            start = 0;\n        if (!count)\n            count = src.length;\n        for (var i = 0; i < count; i ++) {\n            dst[start + i] = src[i];\n        }\n    };\n\n    var resize = function (min_expand) {\n        var new_size = size;\n        while (new_size < min_expand)\n            new_size *= 2;\n        size = new_size;\n        for (var name in data) {\n            var newArray = new Float32Array (new_size * data[name].len);\n            var oldArray = data[name].array;\n            copyArray (newArray, oldArray);\n            data[name].array = newArray;\n            data[name].dirty = true;\n        }\n    };\n\n    this.create = function (name, len) {\n        if (!len)\n            throw \"Length of buffer must be a positive integer\";\n        var array = new Float32Array (size * len);\n        data[name] = {\n            array: array,\n            len: len,\n            dirty: false\n        };\n    };\n\n    this.alloc = function (num) {\n        if ((current + num) >= size)\n            resize (current + num);\n        var start = current;\n        current += num;\n        return start;\n    };\n\n    this.get = function (name) {\n        return data[name].array;\n    };\n\n    this.write = function (name, array, start, count) {\n        copyArray (data[name].array, array, start * data[name].len, count * data[name].len);\n        data[name].dirty = true;\n    };\n\n    this.repeat = function (name, elem, start, count) {\n        for (var i = 0; i < count; i ++) {\n            copyArray (data[name].array, elem,\n                       (start + i) * data[name].len, data[name].len);\n        }\n        data[name].dirty = true;\n    };\n\n    this.count = function () {\n        return current;\n    };\n\n    this.data = function (name) {\n        return data[name].array;\n    };\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geojs\n */\n//////////////////////////////////////////////////////////////////////////////\n\n/* jshint ignore: start */\nvar ogs;\nif (!window || window.ogs === undefined) {\n  ogs = {};\n} else {\n  ogs = window.ogs;\n}\n/* jshint ignore: end */\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create namespace for the given name\n *\n * @param ns_string\n * @returns {*|{}}\n */\n//////////////////////////////////////////////////////////////////////////////\nogs.namespace = function (ns_string) {\n  \"use strict\";\n\n  var parts = ns_string.split(\".\"), parent = ogs, i;\n\n  // strip redundant leading global\n  if (parts[0] === \"ogs\") {\n    parts = parts.slice(1);\n  }\n  for (i = 0; i < parts.length; i += 1) {\n    // create a property if it doesn't exist\n    if (parent[parts[i]] === undefined) {\n      parent[parts[i]] = {};\n    }\n    parent = parent[parts[i]];\n  }\n  return parent;\n};\n\n/** geo namespace */\nvar geo = ogs.namespace(\"geo\"); // jshint ignore: line\nwindow.geo = geo; // jshint ignore: line\n\ngeo.renderers = {};\ngeo.features = {};\ngeo.fileReaders = {};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to define JS inheritance\n *\n * @param C\n * @param P\n */\n//////////////////////////////////////////////////////////////////////////////\ninherit = function (C, P) { // jshint ignore: line\n  \"use strict\";\n\n  var F = function () {\n  };\n  F.prototype = P.prototype;\n  C.prototype = new F();\n  C.uber = P.prototype;\n  C.prototype.constructor = C;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convenient function to get size of an object\n *\n * @param obj\n * @returns {number} *\n */\n//////////////////////////////////////////////////////////////////////////////\nObject.size = function (obj) { // jshint ignore: line\n  \"use strict\";\n\n  var size = 0, key = null;\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      size += 1;\n    }\n  }\n  return size;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new file reader type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerFileReader = function (name, func) {\n  \"use strict\";\n\n  if (geo.fileReaders === undefined) {\n    geo.fileReaders = {};\n  }\n\n  geo.fileReaders[name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new file reader\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createFileReader = function (name, opts) {\n  \"use strict\";\n\n  if (geo.fileReaders.hasOwnProperty(name)) {\n    return geo.fileReaders[name](opts);\n  }\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new renderer type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerRenderer = function (name, func) {\n  \"use strict\";\n\n  if (geo.renderers === undefined) {\n    geo.renderers = {};\n  }\n\n  geo.renderers[name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the renderer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createRenderer  = function (name, layer, canvas) {\n  \"use strict\";\n\n  if (geo.renderers.hasOwnProperty(name)) {\n    var ren = geo.renderers[name](\n      {\"layer\": layer, \"canvas\": canvas}\n    );\n    ren._init();\n    return ren;\n  }\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new feature type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerFeature = function (category, name, func) {\n  \"use strict\";\n\n  if (geo.features === undefined) {\n    geo.features = {};\n  }\n\n  if (!(category in geo.features)) {\n    geo.features[category] = {};\n  }\n\n  // TODO Add warning if the name already exists\n  geo.features[category][name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the renderer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createFeature  = function (name, layer, renderer, arg) {\n  \"use strict\";\n\n  var category = renderer.api(),\n      options = {\"layer\": layer, \"renderer\": renderer};\n  if (category in geo.features && name in geo.features[category]) {\n    if (arg !== undefined) {\n      $.extend(true, options, arg);\n    }\n    return geo.features[category][name](options);\n  }\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new layer type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerLayer = function (name, func) {\n  \"use strict\";\n\n  if (geo.layers === undefined) {\n    geo.layers = {};\n  }\n\n  geo.layers[name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the layer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createLayer = function (name, map, arg) {\n  \"use strict\";\n\n  /// Default renderer is vgl\n  var options = {\"map\": map, \"renderer\": \"vglRenderer\"},\n      layer = null;\n\n  if (name in geo.layers) {\n    if (arg !== undefined) {\n      $.extend(true, options, arg);\n    }\n    layer = geo.layers[name](options);\n    layer._init();\n    return layer;\n  } else {\n    return null;\n  }\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Register a new widget type\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.registerWidget = function (category, name, func) {\n  \"use strict\";\n\n  if (geo.widgets === undefined) {\n    geo.widgets = {};\n  }\n\n  if (!(category in geo.widgets)) {\n    geo.widgets[category] = {};\n  }\n\n  // TODO Add warning if the name already exists\n  geo.widgets[category][name] = func;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create new instance of the widget\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.createWidget  = function (name, layer, renderer, arg) {\n  \"use strict\";\n\n  var category = renderer.api(),\n      options = {\"layer\": layer, \"renderer\": renderer};\n  if (category in geo.widgets && name in geo.widgets[category]) {\n    if (arg !== undefined) {\n      $.extend(true, options, arg);\n    }\n    return geo.widgets[category][name](options);\n  }\n  return null;\n};\n\n// Add a polyfill for window.requestAnimationFrame.\nif (!window.requestAnimationFrame) {\n  window.requestAnimationFrame = function (func) {\n    \"use strict\";\n\n    window.setTimeout(func, 15);\n  };\n}\n","/*global geo*/\n\ngeo.version = \"0.1.0\";\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.util\n *\n * Contains utility classes and methods used by geojs.\n */\n//////////////////////////////////////////////////////////////////////////////\n\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var cssColors;\n\n  geo.util = {\n    isFunction: function (f) {\n      return typeof f === \"function\";\n    },\n\n    /**\n     * Returns the argument if it is function, otherwise returns a function\n     * that returns the argument.\n     */\n    ensureFunction: function (f) {\n      if (geo.util.isFunction(f)) {\n        return f;\n      } else {\n        return function () { return f; };\n      }\n    },\n\n    /**\n     * Return a random string of length n || 8.\n     */\n    randomString: function (n) {\n      var s, i, r;\n      n = n || 8;\n      s = \"\";\n      for (i = 0; i < n; i += 1) {\n        r = Math.floor(Math.random() * chars.length);\n        s += chars.substring(r, r + 1);\n      }\n      return s;\n    },\n\n    /**\n     * Convert a color from hex value or css name to rgb objects\n     */\n    convertColor: function (color) {\n      if (typeof color === \"string\") {\n        if (cssColors.hasOwnProperty(color)) {\n          color = cssColors[color];\n        } else if (color.charAt(0) === \"#\") {\n          color = parseInt(color.slice(1), 16);\n        }\n      }\n      // jshint -W016\n      if (isFinite(color)) {\n        color = {\n          r: ((color & 0xff0000) >> 16) / 255,\n          g: ((color & 0xff00) >> 8) / 255,\n          b: ((color & 0xff)) / 255\n        };\n      }\n      // jshint +W016\n      return color;\n    }\n  };\n\n  cssColors = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n}());\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.util\n *\n * Includes several support classes adapted from wigglemaps.\n *\n * https://github.com/dotskapes/wigglemaps\n *\n * Copyright 2013 Preston and Krejci (dotSkapes Virtual Lab)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//////////////////////////////////////////////////////////////////////////////\n\n/* jshint ignore: start */\n(function () {\n    'use strict';\n\n    var RangeNode = function (elem, start, end, current) {\n        this.data = elem[current];\n        this.left = null;\n        this.right = null;\n        if (start != current)\n            this.left = new RangeNode (elem, start, current - 1, parseInt ((start + (current - 1)) / 2, 10));\n        if (end != current)\n            this.right = new RangeNode (elem, current + 1, end, parseInt ((end + (current + 1)) / 2, 10));\n        this.subtree = [];\n        for (var i = start; i <= end; i ++) {\n            this.subtree.push (elem[i]);\n        }\n        this.subtree.sort (function (a, b) {\n            return a.y - b.y;\n        });\n\n        var xrange = function (b) {\n            return (b.x_in (elem[start]) && b.x_in (elem[end]));\n        };\n\n        this.yrange = function (b, start, end) {\n            return (b.y_in (this.subtree[start]) && b.y_in (this.subtree[end]));\n        };\n\n        this.subquery = function (result, box, start, end, current) {\n            if (this.yrange (box, start, end)) {\n                for (var i = start; i <= end; i ++) {\n                    result.push (this.subtree[i]);\n                }\n                return;\n            }\n            if (box.y_in (this.subtree[current]))\n                result.push (this.subtree[current]);\n            if (box.y_left (this.subtree[current])){\n                if (current != end)\n                    this.subquery (result, box, current + 1, end, parseInt ((end + (current + 1)) / 2, 10));\n            }\n            else if (box.x_right (this.subtree[current])) {\n                if (current != start)\n                    this.subquery (result, box, start, current - 1, parseInt ((start + (current - 1)) / 2, 10));\n            }\n            else {\n                if (current != end)\n                    this.subquery (result, box, current + 1, end, parseInt ((end + (current + 1)) / 2, 10));\n                if (current != start)\n                    this.subquery (result, box, start, current - 1, parseInt ((start + (current - 1)) / 2, 10));\n            }\n        };\n        \n        this.search = function (result, box) {\n            if (xrange (box)) {\n                this.subquery (result, box, 0, this.subtree.length - 1, parseInt ((this.subtree.length - 1) / 2, 10));\n                return;\n            }\n            else {\n                if (box.contains (this.data))\n                    result.push (this.data);\n                if (box.x_left (this.data)) {\n                    if (this.right)\n                        this.right.search (result, box);\n                }\n                else if (box.x_right (this.data)) {\n                    if (this.left)\n                        this.left.search (result, box);\n                }\n                else {\n                    if (this.left)\n                        this.left.search (result, box);\n                    if (this.right)\n                        this.right.search (result, box);\n                }\n            }\n        };\n    };\n\n    var RangeTree = function (elem) {\n        elem.sort (function (a, b) {\n            return a.x - b.x;\n        });\n        if (elem.length > 0)\n            this.root = new RangeNode (elem, 0, elem.length - 1, parseInt ((elem.length - 1) / 2, 10));\n        else\n            this.root = null;\n\n        this.search = function (_box) {\n            if (!this.root)\n                return [];\n            //var box = new Box (min, max);\n            var box = _box.clone ();\n            var result = [];\n            this.root.search (result, box);\n            return result;\n        };\n    };\n\n    var Box = function (v1, v2) {\n        this.min = v1.clone ();\n        this.max = v2.clone ();\n        this.contains = function (p) {\n            return (v1.x <= p.x) && (v2.x >= p.x) && (v1.y <= p.y) && (v2.y >= p.y);\n        };\n\n        this.x_in = function (p) {\n            return (v1.x <= p.x) && (v2.x >= p.x);\n        };\n\n        this.x_left = function (p) {\n            return (v1.x >= p.x);\n        };\n\n        this.x_right = function (p) {\n            return (v2.x <= p.x);\n        };\n\n        this.y_in = function (p) {\n            return (v1.y <= p.y) && (v2.y >= p.y);\n        };\n\n        this.y_left = function (p) {\n            return (v1.y >= p.y);\n        };\n\n        this.y_right = function (p) {\n            return (v2.y <= p.y);\n        };\n\n        this.area = function () {\n            return (this.max.x - this.min.x) * (this.max.y - this.min.y);\n        };\n\n        this.height = function () {\n            return this.max.y - this.min.y;\n        };\n\n        this.width = function () {\n            return this.max.x - this.min.x;\n        };\n        \n        this.vertex = function (index) {\n            switch (index) {\n            case 0:\n                return this.min.clone ();\n            case 1:\n                return new vect (this.max.x, this.min.y);\n            case 2:\n                return this.max.clone ();\n            case 3:\n                return new vect (this.min.x, this.max.y);\n            default:\n                throw \"Index out of bounds: \" + index ;\n            }\n        };\n\n        this.intersects = function (box) {\n            for (var i = 0; i < 4; i ++) {\n                for (var j = 0; j < 4; j ++) {\n                    if (vect.intersects (this.vertex (i), this.vertex ((i + 1) % 4),\n                                         box.vertex (j), box.vertex ((j + 1) % 4)))\n                        return true;\n                }\n            }\n            if (this.contains (box.min) &&\n                this.contains (box.max) &&\n                this.contains (new vect (box.min.x, box.max.y)) &&\n                this.contains (new vect (box.max.x, box.min.y)))\n                return true;\n            if (box.contains (this.min) &&\n                box.contains (this.max) &&\n                box.contains (new vect (this.min.x, this.max.y)) &&\n                box.contains (new vect (this.max.x, this.min.y)))\n                return true;\n            return false;\n        };\n\n        this.union = function (b) {\n            this.min.x = Math.min (this.min.x, b.min.x);\n            this.min.y = Math.min (this.min.y, b.min.y);\n\n            this.max.x = Math.max (this.max.x, b.max.x);\n            this.max.y = Math.max (this.max.y, b.max.y);\n        };\n\n        this.centroid = function () {\n            return new vect ((this.max.x + this.min.x) / 2, (this.max.y + this.min.y) / 2);\n        };\n\n        this.clone = function () {\n            return new Box (v1, v2);\n        };\n    };\n\n    // A basic vector type. Supports standard 2D vector operations\n    var Vector2D = function (x, y) {\n        this.x = x;\n        this.y = y;\n\n        this.add = function (v) {\n            this.x += v.x;\n            this.y += v.y;\n            return this;\n        };\n        this.sub = function (v) {\n            this.x -= v.x;\n            this.y -= v.y;\n            return this;\n        };\n        this.scale = function (s) {\n            this.x *= s;\n            this.y *= s;\n            return this;\n        };\n        this.length = function () {\n            return Math.sqrt (this.x * this.x + this.y * this.y);\n        };\n        this.normalize = function () {\n            var scale = this.length ();\n            if (scale === 0)\n                return this;\n            this.x /= scale;\n            this.y /= scale;\n            return this;\n        };\n        this.div = function (v) {\n            this.x /= v.x;\n            this.y /= v.y;\n            return this;\n        };\n        this.floor = function () {\n            this.x = Math.floor (this.x);\n            this.y = Math.floor (this.y);\n            return this;\n        };\n        this.zero = function (tol) {\n            tol = tol || 0;\n            return (this.length() <= tol);\n        };\n        this.dot = function (v) {\n            return (this.x * v.x) + (this.y * v.y);\n        };\n        this.cross = function (v) {\n            return (this.x * v.y) - (this.y * v.x);\n        };\n        this.rotate = function (omega) {\n            var cos = Math.cos (omega);\n            var sin = Math.sin (omega);\n            xp = cos * this.x - sin * this.y;\n            yp = sin * this.x + cos * this.y;\n            this.x = xp;\n            this.y = yp;\n            return this;\n        };\n        this.clone = function () {\n            return new Vector2D (this.x, this.y); \n        };\n\n        this.array = function () {\n            return [this.x, this.y];\n        };\n    };\n\n    // A shortcut for the vector constructor\n    function vect (x, y) {\n        return new Vector2D (x, y);\n    }\n\n    // Shorthand operations for vectors for operations that make new vectors\n\n    vect.scale = function (v, s) {\n        return v.clone ().scale (s);\n    };\n\n    vect.add = function (v1, v2) {\n        return v1.clone ().add (v2);\n    };\n\n    vect.sub = function (v1, v2) {\n        return v1.clone ().sub (v2);\n    };\n\n    vect.dist = function (v1, v2) {\n        return v1.clone ().sub (v2).length ();\n    };\n\n    vect.dir = function (v1, v2) {\n        return v1.clone ().sub (v2).normalize ();\n    };\n\n    vect.dot = function (v1, v2) {\n        return (v1.x * v2.x) + (v1.y * v2.y);\n    };\n\n    vect.cross = function (v1, v2) {\n        return (v1.x * v2.y) - (v1.y * v2.x);\n    };\n\n    vect.left = function (a, b, c, tol) {\n        if (!tol)\n            tol = 0;\n        var v1 = vect.sub (b, a);\n        var v2 = vect.sub (c, a);\n        return (vect.cross (v1, v2) >= -tol);\n    };\n\n    vect.intersects = function (a, b, c, d, tol) {\n        if (!tol)\n            tol = 0;\n        return (vect.left (a, b, c, tol) != vect.left (a, b, d, tol) &&\n                vect.left (c, d, b, tol) != vect.left (c, d, a, tol));\n    };\n\n    vect.intersect2dt = function (a, b, c, d) {\n        var denom = a.x * (d.y - c.y) +\n            b.x * (c.y - d.y) +\n            d.x * (b.y - a.y) +\n            c.x * (a.y - b.y);\n\n        if (denom === 0)\n            return Infinity;\n        \n        var num_s = a.x * (d.y - c.y) +\n            c.x * (a.y - d.y) +\n            d.x * (c.y - a.y);\n        var s = num_s / denom;\n\n        var num_t = -(a.x * (c.y - b.y) +\n                      b.x * (a.y - c.y) +\n                      c.x * (b.y - a.y));\n        var t = num_t / denom;\n        \n        return t;\n    };\n\n    vect.intersect2dpos = function (a, b, c, d) {\n        var denom = a.x * (d.y - c.y) +\n            b.x * (c.y - d.y) +\n            d.x * (b.y - a.y) +\n            c.x * (a.y - b.y);\n\n        if (denom === 0)\n            return Infinity;\n        \n        var num_s = a.x * (d.y - c.y) +\n            c.x * (a.y - d.y) +\n            d.x * (c.y - a.y);\n        var s = num_s / denom;\n\n        /*var num_t = -(a.x * (c.y - b.y) +\n                      b.x * (a.y - c.y) +\n                      c.x * (b.y - a.y));\n        var t = num_t / denom;*/\n        \n        var dir = vect.sub (b, a);\n        dir.scale (s);\n        return vect.add (a, dir);\n    };\n\n    vect.rotate = function (v, omega) {\n        var cos = Math.cos (omega);\n        var sin = Math.sin (omega);\n        xp = cos * v.x - sin * v.y;\n        yp = sin * v.x + cos * v.y;\n        var c = new vect (xp, yp);\n        return c;\n    };\n\n    vect.normalize = function (v) {\n        return v.clone ().normalize ();\n    };\n\n    // Export to geo.util module\n    geo.util.RangeTree = RangeTree;\n    geo.util.Box = Box;\n    geo.util.vect = vect;\n}());\n/* jshint ignore: end */\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class object\n *\n * @class\n * @returns {geo.object}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.object = function () {\n  \"use strict\";\n  if (!(this instanceof geo.object)) {\n    return new geo.object();\n  }\n\n  var m_this = this,\n      m_eventHandlers = {},\n      m_idleHandlers = [],\n      m_deferredCount = 0;\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Bind a handler that will be called once when all deferreds are resolved.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.onIdle = function (handler) {\n    if (m_deferredCount) {\n      m_idleHandlers.push(handler);\n    } else {\n      handler();\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Add a new deferred object preventing idle event handlers from being called.\n   *  Takes a $.Deferred object as an argument.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.addDeferred = function (defer) {\n    m_deferredCount += 1;\n    defer.done(function () {\n      m_deferredCount -= 1;\n      if (!m_deferredCount) {\n        m_idleHandlers.splice(0, m_idleHandlers.length)\n          .forEach(function (handler) {\n            handler();\n          });\n      }\n    });\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Bind an event handler to this object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoOn = function (event, handler) {\n    if (Array.isArray(event)) {\n      event.forEach(function (e) {\n        m_this.geoOn(e, handler);\n      });\n      return m_this;\n    }\n    if (!m_eventHandlers.hasOwnProperty(event)) {\n      m_eventHandlers[event] = [];\n    }\n    m_eventHandlers[event].push(handler);\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Trigger an event (or events) on this object and call all handlers\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoTrigger = function (event, args) {\n\n    // if we have an array of events, recall with single events\n    if (Array.isArray(event)) {\n      event.forEach(function (e) {\n        m_this.geoTrigger(e, args);\n      });\n      return m_this;\n    }\n\n    if (m_eventHandlers.hasOwnProperty(event)) {\n      m_eventHandlers[event].forEach(function (handler) {\n        handler.call(m_this, args);\n      });\n    }\n\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Remove handlers from an event (or an array of events).\n   *\n   *  @param arg a function or array of functions to remove from the events\n   *             or if falsey remove all handlers from the events\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoOff = function (event, arg) {\n    if (Array.isArray(event)) {\n      event.forEach(function (e) {\n        m_this.geoOff(e, arg);\n      });\n      return m_this;\n    }\n    if (!arg) {\n      m_eventHandlers[event] = [];\n    } else if (Array.isArray(arg)) {\n      arg.forEach(function (handler) {\n        m_this.geoOff(event, handler);\n      });\n      return m_this;\n    }\n    // What do we do if the handler is not already bound?\n    //   ignoring for now...\n    if (m_eventHandlers.hasOwnProperty(event)) {\n      m_eventHandlers[event] = m_eventHandlers[event].filter(function (f) {\n          return f !== arg;\n        }\n      );\n    }\n    return m_this;\n  };\n\n  vgl.object.call(this);\n\n  return this;\n};\n\ninherit(geo.object, vgl.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n\n/*jslint devel: true, unparam: true*/\n\n/*global geo, inherit*/\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sceneObject, which extends the object's\n * event handling with a tree-based event propagation.\n *\n * @class\n * @returns {geo.sceneObject}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.sceneObject = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.sceneObject)) {\n    return new geo.sceneObject();\n  }\n  geo.object.call(this, arg);\n\n  var m_this = this,\n      m_parent = null,\n      m_children = [],\n      s_trigger = this.geoTrigger,\n      s_addDeferred = this.addDeferred,\n      s_onIdle = this.onIdle;\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Override object.addDeferred to propagate up the scene tree.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.addDeferred = function (defer) {\n    if (m_parent) {\n      m_parent.addDeferred(defer);\n    } else {\n      s_addDeferred(defer);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Override object.onIdle to propagate up the scene tree.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.onIdle = function (handler) {\n    if (m_parent) {\n      m_parent.onIdle(handler);\n    } else {\n      s_onIdle(handler);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Get/set parent of the object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.parent = function (arg) {\n    if (arg === undefined) {\n      return m_parent;\n    }\n    m_parent = arg;\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Add a child (or an array of children) to the object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.addChild = function (child) {\n    if (Array.isArray(child)) {\n      child.forEach(m_this.addChild);\n      return m_this;\n    }\n    child.parent(m_this);\n    m_children.push(child);\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Remove a child (or array of children) from the object\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.removeChild = function (child) {\n    if (Array.isArray(child)) {\n      child.forEach(m_this.removeChild);\n      return m_this;\n    }\n    m_children = m_children.filter(function (c) { return c !== child; });\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Get an array of child objects\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.children = function () {\n    return m_children.slice();\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Force redraw of a scene object, to be implemented by subclasses.\n   *  Base class just calls draw of child objects.\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.draw = function (arg) {\n    m_this.children().forEach(function (child) {\n      child.draw(arg);\n    });\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   *  Trigger an event (or events) on this object and call all handlers.\n   *  @param {String} event the event to trigger\n   *  @param {Object} args arbitrary argument to pass to the handler\n   *  @param {Boolean} childrenOnly if true, only propagate down the tree\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.geoTrigger = function (event, args, childrenOnly) {\n\n    var geoArgs;\n\n    args = args || {};\n    geoArgs = args.geo || {};\n    args.geo = geoArgs;\n\n    // stop propagation if requested by the handler\n    if (geoArgs.stopPropagation) {\n      return m_this;\n    }\n\n    // If the event was not triggered by the parent, just propagate up the tree\n    if (!childrenOnly && m_parent && geoArgs._triggeredBy !== m_parent) {\n      geoArgs._triggeredBy = m_this;\n      m_parent.geoTrigger(event, args);\n      return m_this;\n    }\n\n    // call the object's own handlers\n    s_trigger.call(m_this, event, args);\n\n    // stop propagation if requested by the handler\n    if (geoArgs.stopPropagation) {\n      return m_this;\n    }\n\n    // trigger the event on the children\n    m_children.forEach(function (child) {\n      geoArgs._triggeredBy = m_this;\n      child.geoTrigger(event, args);\n    });\n\n    return m_this;\n  };\n\n  return this;\n};\n\ninherit(geo.sceneObject, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class timestamp\n *\n * @class\n * @returns {geo.timestamp}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.timestamp = function () {\n  'use strict';\n  if (!(this instanceof geo.timestamp)) {\n    return new geo.timestamp();\n  }\n  vgl.timestamp.call(this);\n};\n\ninherit(geo.timestamp, vgl.timestamp);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create an instance of quadratic surface generator\n * in Cartesian coordinates by the equation\n * <code>(x / a)^2 + (y / b)^2 + (z / c)^2 = 1</code>. Used\n * primarily to create planetary bodies\n *\n * @constructor\n * @param {Number} [x=0]  Radius in X direction\n * @param {Number} [y=0]  Radius in Y direction\n * @param {Number} [z=0]  Radius in Z direction\n *\n * @returns {geo.ellipsoid}\n */\n //////////////////////////////////////////////////////////////////////////////\ngeo.ellipsoid = function (x, y, z) {\n  'use strict';\n  if (!(this instanceof geo.ellipsoid)) {\n    return new geo.ellipsoid(x, y, z);\n  }\n\n  x = vgl.defaultValue(x, 0.0);\n  y = vgl.defaultValue(y, 0.0);\n  z = vgl.defaultValue(z, 0.0);\n\n  if (x < 0.0 || y < 0.0 || z < 0.0) {\n    return console.log('[error] Al radii components must be greater than zero');\n  }\n\n  var m_this = this,\n      m_radii = new vec3.fromValues(x, y, z),\n      m_radiiSquared = new vec3.fromValues(\n        x * x, y * y, z * z),\n      m_minimumRadius = Math.min(x, y, z),\n      m_maximumRadius = Math.max(x, y, z);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return radii of ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.radii = function () {\n    return m_radii;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return squared radii of the ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.radiiSquared = function () {\n    return m_radiiSquared;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return maximum radius of the ellipsoid\n   *\n   * @return {Number} The maximum radius of the ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.maximumRadius = function () {\n    return m_maximumRadius;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return minimum radius of the ellipsoid\n   *\n   * @return {Number} The maximum radius of the ellipsoid\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.minimumRadius = function () {\n    return m_minimumRadius;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Computes the normal of the plane tangent to the surface of\n   * the ellipsoid at the provided position\n   *\n   * @param {Number} lat The cartographic latitude for which\n   *  to to determine the geodetic normal\n   * @param {Number} lon The cartographic longitude for which\n   *  to to determine the geodetic normal\n   *\n   * @return {vec3}\n   *\n   * @exception {DeveloperError} cartographic is required.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.computeGeodeticSurfaceNormal = function (lat, lon) {\n    if (typeof lat === 'undefined' || typeof lon === 'undefined') {\n      throw '[error] Valid latitude and longitude is required';\n    }\n\n    var cosLatitude = Math.cos(lat),\n        result = vec3.create();\n\n    result[0] = cosLatitude * Math.cos(lon);\n    result[1] = cosLatitude * Math.sin(lon);\n    result[2] = Math.sin(lat);\n\n    vec3.normalize(result, result);\n    return result;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Converts the provided geographic latitude, longitude,\n   * and height to WGS84 coordinate system\n   *\n   * @param {Number} lat Latitude in radians\n   * @param {Number} lon Longitude in radians\n   * @param {Number} elev Elevation\n   * @return {vec3} Position in the WGS84 coordinate system\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transformPoint = function (lat, lon, elev) {\n    lat = lat *  (Math.PI / 180.0);\n    lon = lon * (Math.PI / 180.0);\n\n    var n = m_this.computeGeodeticSurfaceNormal(lat, lon),\n        k = vec3.create(),\n        gamma  = Math.sqrt(vec3.dot(n, k)),\n        result = vec3.create();\n\n    vec3.multiply(k, m_radiiSquared, n);\n    vec3.scale(k, k, 1 / gamma);\n    vec3.scale(n, n, elev);\n    vec3.add(result, n,  k);\n    return result;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Converts the provided geographic latitude, longitude,\n   * and height to WGS84 coordinate system\n   *\n   * @param {vgl.geometryData} geom\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transformGeometry = function (geom) {\n    if (!geom) {\n      throw '[error] Failed to transform to cartesian. Invalid geometry.';\n    }\n\n    var sourceData = geom.sourceData(vgl.vertexAttributeKeys.Position),\n        sourceDataArray = sourceData.data(),\n        noOfComponents =  sourceData.attributeNumberOfComponents(\n          vgl.vertexAttributeKeys.Position),\n        stride = sourceData.attributeStride(\n          vgl.vertexAttributeKeys.Position),\n        offset = sourceData.attributeOffset(\n          vgl.vertexAttributeKeys.Position),\n        sizeOfDataType = sourceData.sizeOfAttributeDataType(\n          vgl.vertexAttributeKeys.Position),\n        index = null,\n        count = sourceDataArray.length * (1.0 / noOfComponents),\n        gamma = null,\n        n = null,\n        j = 0,\n        k = vec3.create(),\n        result = vec3.create();\n\n    stride /= sizeOfDataType;\n    offset /= sizeOfDataType;\n\n    if (noOfComponents !== 3) {\n      throw ('[error] Requires positions with three components');\n    }\n\n    for (j = 0; j < count; j += 1) {\n      index = j * stride + offset;\n\n      sourceDataArray[index] = sourceDataArray[index] * (Math.PI / 180.0);\n      sourceDataArray[index + 1] = sourceDataArray[index + 1] * (Math.PI / 180.0);\n\n      n = m_this.computeGeodeticSurfaceNormal(sourceDataArray[index + 1],\n                                            sourceDataArray[index]);\n      vec3.multiply(k, m_radiiSquared, n);\n      gamma = Math.sqrt(vec3.dot(n, k));\n      vec3.scale(k, k, 1 / gamma);\n      vec3.scale(n, n, sourceDataArray[index + 2]);\n      vec3.add(result, n,  k);\n\n      sourceDataArray[index] = result[0];\n      sourceDataArray[index + 1] = result[1];\n      sourceDataArray[index + 2] = result[2];\n    }\n  };\n\n  return m_this;\n};\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * An Ellipsoid instance initialized to the WGS84 standard.\n * @memberof ellipsoid\n *\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.ellipsoid.WGS84 = vgl.freezeObject(\n  geo.ellipsoid(6378137.0, 6378137.0, 6356752.3142451793));\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * An Ellipsoid instance initialized to radii of (1.0, 1.0, 1.0).\n * @memberof ellipsoid\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.ellipsoid.UNIT_SPHERE = vgl.freezeObject(\n  geo.ellipsoid(1.0, 1.0, 1.0));\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\ngeo.mercator = {\n  r_major: 6378137.0,  //Equatorial Radius, WGS84\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Returns the polar radius based on the projection.\n *\n * @method r_minor\n * @param {Boolean}\n * @returns {Number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.r_minor = function (spherical) {\n  'use strict';\n\n  var r_minor;\n\n  spherical = spherical !== undefined ? spherical : false;\n\n  if (spherical) {\n    r_minor = 6378137.0;\n  }\n  else {\n    r_minor = 6356752.314245179;\n  }\n\n  return r_minor;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * 1/f=(a-b)/a , a=r_major, b=r_minor\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.f = function (spherical) {\n  'use strict';\n\n  return (geo.mercator.r_major - geo.mercator.r_minor(spherical)) / geo.mercator.r_major;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert longitude (Degree) to Tile X\n *\n *  @method long2tilex\n *  @param {float, integer}\n *  @returns {integer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.long2tilex = function (lon, z) {\n  'use strict';\n  var rad = (lon + 180.0) / 360.0,\n      f = Math.floor(rad * Math.pow(2.0, z));\n  return f;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert latitude (Degree) to Tile Y\n *\n *  @method lat2tiley\n *  @param {float, integer}\n *  @returns {integer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.lat2tiley = function (lat, z) {\n  'use strict';\n  var rad = lat * Math.PI / 180.0;\n  return Math.floor((1.0 - rad / Math.PI) / 2.0 * Math.pow(2.0, z));\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Longitute (Degree) to Tile X and fraction.\n *\n *  @method long2tilex\n *  @param {float, integer}\n *  @returns {integer, float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.long2tilex2 = function (lon, z) {\n  'use strict';\n  var rad = (lon + 180.0) / 360.0,\n      f = rad * Math.pow(2.0, z),\n      ret = Math.floor(f),\n      frac = f - ret;\n  return [ret, frac];\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Latitude (Degree) to Tile Y and fraction\n *\n *  @method lat2tiley\n *  @param {float, integer}\n *  @returns {integer, float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.lat2tiley2 = function (lat, z) {\n  'use strict';\n  var rad = lat * Math.PI / 180.0,\n      f = (1.0 - Math.log(Math.tan(rad) + 1.0 / Math.cos(rad)) /\n           Math.PI) / 2.0 * Math.pow(2.0, z),\n      ret = Math.floor(f),\n      frac = f - ret;\n  return [ret, frac];\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Tile X to Longitute (Degree)\n *\n *  @method tilex2long\n *  @param {integer, integer}\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.tilex2long = function (x, z) {\n  'use strict';\n  return x / Math.pow(2.0, z) * 360.0 - 180.0;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert Tile Y to Latitute (Degree)\n *\n *  @method tiley2lat\n *  @param {integer, integer}\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.tiley2lat = function (y, z) {\n  'use strict';\n  var n = Math.PI - 2.0 * Math.PI * y / Math.pow(2.0, z);\n  return 180.0 / Math.PI * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert spherical mercator Y to latitude\n *\n *  @method y2lat\n *  @param {float}\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.y2lat = function (a) {\n  'use strict';\n  return 180 / Math.PI * (2 * Math.atan(Math.exp(a * Math.PI / 180)) - Math.PI / 2);\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert latitude into Y position in spherical mercator\n *\n *  @method lat2y\n *  @param {float}\n *  @returns {float}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.lat2y = function (a) {\n  'use strict';\n  return 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + a * (Math.PI / 180) / 2));\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n *\n * @param d\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.deg2rad = function (d) {\n  'use strict';\n  var r = d * (Math.PI / 180.0);\n  return r;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert radian to degree\n *\n * @param r\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.rad2deg = function (r) {\n  'use strict';\n  var d = r / (Math.PI / 180.0);\n  return d;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert latlon to mercator\n *\n * @param lon\n * @param lat\n * @returns {{x: number, y: number}}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.ll2m = function (lon, lat, spherical) {\n  'use strict';\n\n  if (lat > 89.5) {\n    lat = 89.5;\n  }\n\n  if (lat < -89.5) {\n    lat = -89.5;\n  }\n\n  var x = this.r_major * this.deg2rad(lon),\n      temp = this.r_minor(spherical) / this.r_major,\n      es = 1.0 - (temp * temp),\n      eccent = Math.sqrt(es),\n      phi = this.deg2rad(lat),\n      sinphi = Math.sin(phi),\n      con = eccent * sinphi,\n      com = 0.5 * eccent,\n      con2 = Math.pow((1.0 - con) / (1.0 + con), com),\n      ts = Math.tan(0.5 * (Math.PI * 0.5 - phi)) / con2,\n      y = -this.r_major * Math.log(ts),\n      ret = {'x': x, 'y': y};\n\n  return ret;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Convert mercator to lat lon\n *\n * @param x\n * @param y\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.m2ll = function (x, y, spherical) {\n  'use strict';\n  var lon = this.rad2deg((x / this.r_major)),\n      temp = this.r_minor(spherical) / this.r_major,\n      e = Math.sqrt(1.0 - (temp * temp)),\n      lat = this.rad2deg(this.pjPhi2(Math.exp(-(y / this.r_major)), e)),\n      ret = {'lon': lon, 'lat': lat};\n\n  return ret;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * pjPhi2\n *\n * @param ts\n * @param e\n * @returns {number}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mercator.pjPhi2 = function (ts, e) {\n  'use strict';\n  var N_ITER = 15,\n      HALFPI = Math.PI / 2,\n      TOL = 0.0000000001,\n      con, dphi,\n      i = N_ITER,\n      eccnth = 0.5 * e,\n      Phi = HALFPI - 2.0 * Math.atan(ts);\n\n  do\n  {\n    con = e * Math.sin(Phi);\n    dphi = HALFPI - 2.0 * Math.atan(ts * Math.pow(\n            (1.0 - con) / (1.0 + con), eccnth)) - Phi;\n    Phi += dphi;\n    i -= 1;\n  } while (Math.abs(dphi) > TOL && i);\n  return Phi;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of latlng\n *\n * A latlng encapsulates geodesy coordinates defined by latitude and\n * longitude\n * @returns {geo.latlng}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.latlng = function (arg1, arg2, arg3) {\n  \"use strict\";\n  if (!(this instanceof geo.latlng)) {\n    return new geo.latlng(arg1, arg2, arg3);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_lat = arg2 === undefined && arg3 === undefined ? arg1.lat() : arg1,\n      m_lng = arg2 === undefined && arg3 === undefined ? arg1.lng() : arg2,\n      m_elv = arg2 === undefined && arg3 === undefined ? arg1.elv() : arg3;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return latitude\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.lat = function (val) {\n    if (val === undefined) {\n      return m_lat;\n    } else {\n      m_lat = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return longitude\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.lng = function (val) {\n    if (val === undefined) {\n      return m_lng;\n    } else {\n      m_lng = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return elevation\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.elv = function (val) {\n    if (val === undefined) {\n      return m_elv;\n    } else {\n      m_elv = val;\n    }\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return x coordinate\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.x = function (val) {\n    if (val === undefined) {\n      return m_this.lng();\n    } else {\n      m_lng = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return y coordinate\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.y = function (val) {\n    if (val === undefined) {\n      return m_this.lat();\n    } else {\n      m_lat = val;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return z coordinate\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this.z = function (val) {\n    if (val === undefined) {\n      return m_this.elv();\n    } else {\n      m_elv = val;\n    }\n  };\n\n\n  return this;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Layer options object specification\n *\n * @class geo.layerOptions\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.layerOptions = function () {\n  \"use strict\";\n\n  if (!(this instanceof geo.layerOptions)) {\n    return new geo.layerOptions();\n  }\n\n  this.opacity = 0.5;\n  this.showAttribution = true;\n  this.visible = true;\n  this.binNumber = vgl.material.RenderBin.Default;\n\n  return this;\n};\n\ngeo.newLayerId = (function () {\n    \"use strict\";\n    var currentId = 1;\n    return function () {\n      var id = currentId;\n      currentId += 1;\n      return id;\n    };\n  }()\n);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Base class for all layer types geo.layer represents any object that be\n * rendered on top of the map base. This could include image, points, line, and\n * polygons.\n *\n * @class geo.layer\n * @returns {geo.layer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.layer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.layer)) {\n    return new geo.layer(arg);\n  }\n  arg = arg || {};\n  geo.sceneObject.call(this, arg);\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_style = arg.style === undefined ? {\"opacity\" : 0.5,\n                                           \"color\" : [0.8, 0.8, 0.8],\n                                           \"visible\" : true,\n                                           \"bin\" : 100} : arg.style,\n      m_id = arg.id === undefined ? geo.newLayerId() : arg.id,\n      m_name = \"\",\n      m_gcs = \"EPSG:4326\",\n      m_timeRange = null,\n      m_source = arg.source || null,\n      m_map = arg.map === undefined ? null : arg.map,\n      m_isReference = false,\n      m_x = 0,\n      m_y = 0,\n      m_width = 0,\n      m_height = 0,\n      m_node = null,\n      m_canvas = null,\n      m_renderer = null,\n      m_initialized = false,\n      m_rendererName = arg.renderer  === undefined ? \"vglRenderer\" : arg.renderer,\n      m_dataTime = geo.timestamp(),\n      m_updateTime = geo.timestamp(),\n      m_drawTime = geo.timestamp(),\n      m_sticky = arg.sticky === undefined ? true : arg.sticky;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get whether or not the layer is sticky (navigates with the map).\n   *\n   * @returns {Boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.sticky = function () {\n    return m_sticky;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set root node of the layer\n   *\n   * @returns {div}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.node = function () {\n    return m_node;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set id of the layer\n   *\n   * @returns {String}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.id = function (val) {\n    if (val === undefined) {\n      return m_id;\n    }\n    m_id = geo.newLayerId();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set name of the layer\n   *\n   * @returns {String}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.name = function (val) {\n    if (val === undefined) {\n      return m_name;\n    }\n    m_name = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set opacity of the layer\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.opacity = function (val) {\n    if (val === undefined) {\n      return m_style.opacity;\n    }\n    m_style.opacity = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set visibility of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.visible = function (val) {\n    if (val === undefined) {\n      return m_style.visible;\n    }\n    m_style.visible = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set bin of the layer\n   *\n   * @returns {Number}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bin = function (val) {\n    if (val === undefined) {\n      return m_style.bin;\n    }\n    m_style.bin = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set projection of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcs = function (val) {\n    if (val === undefined) {\n      return m_gcs;\n    }\n    m_gcs = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform layer to the reference layer gcs\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transform = function (val) {\n    geo.transform.transformLayer(val, m_this, m_map.baseLayer());\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set time range of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.timeRange = function (val) {\n    if (val === undefined) {\n      return m_timeRange;\n    }\n    m_timeRange = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set source of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.source = function (val) {\n    if (val === undefined) {\n      return m_source;\n    }\n    m_source = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set map of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.map = function (val) {\n    if (val === undefined) {\n      return m_map;\n    }\n    m_map = val;\n    m_map.node().append(m_node);\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get renderer for the layer if any\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderer = function () {\n    return m_renderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get canvas of the layer\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canvas = function () {\n    return m_canvas;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get viewport of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.viewport = function () {\n    return [m_x, m_y, m_width, m_height];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return last time data got changed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.dataTime = function () {\n    return m_dataTime;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the modified time for the last update that did something\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateTime = function () {\n    return m_updateTime;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the modified time for the last draw call that did something\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.drawTime = function () {\n    return m_drawTime;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Run query and return results for it\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.query = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set layer as the reference layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.referenceLayer = function (val) {\n    if (val !== undefined) {\n      m_isReference = val;\n      m_this.modified();\n      return m_this;\n    }\n    return m_isReference;\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set if the layer has been initialized\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.initialized = function (val) {\n    if (val !== undefined) {\n      m_initialized = val;\n      return m_this;\n    }\n    return m_initialized;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in GCS space to\n   * local space of the layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.toLocal = function (input) {\n    return input;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in local space to\n   * latitude-longitude space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.fromLocal = function (input) {\n    return input;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Init layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (m_initialized) {\n      return m_this;\n    }\n\n    // Create top level div for the layer\n    m_node = $(document.createElement(\"div\"));\n    m_node.attr(\"id\", m_name);\n    // TODO: need to position according to offsets from the map element\n    //       and maybe respond to events in case the map element moves\n    //       around the page.\n    m_node.css(\"position\", \"absolute\");\n\n    if (m_map) {\n      m_map.node().append(m_node);\n\n    }\n\n    // Share context if have valid one\n    if (m_canvas) {\n      m_renderer = geo.createRenderer(m_rendererName, m_this, m_canvas);\n    } else {\n      m_renderer = geo.createRenderer(m_rendererName, m_this);\n      m_canvas = m_renderer.canvas();\n    }\n\n    m_initialized = true;\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clean up resouces\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_node.remove();\n    m_node = null;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Respond to resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function (x, y, w, h) {\n    m_x = x;\n    m_y = y;\n    m_width = w;\n    m_height = h;\n    m_node.width(w);\n    m_node.height(h);\n\n    m_this.modified();\n    m_this.geoTrigger(geo.event.resize,\n      {x: x, y: y, width: m_width, height: m_height});\n\n    return m_this;\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the width of the layer in pixels\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.width = function () {\n    return m_width;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the height of the layer in pixels\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.height = function () {\n    return m_height;\n  };\n\n  return this;\n};\n\ninherit(geo.layer, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class featureLayer\n *\n * @class\n * @dec Layer to draw points, lines, and polygons on the map The polydata layer\n *      provide mechanisms to create and draw geometrical shapes such as points,\n *      lines, and polygons.\n * @returns {geo.featureLayer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.featureLayer = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.featureLayer)) {\n    return new geo.featureLayer(arg);\n  }\n  geo.layer.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_features = [],\n      s_init = this._init,\n      s_update = this._update,\n      s_draw = this.draw;\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create feature give a name\n   *\n   * @returns {geo.Feature} Will return a new feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createFeature = function (featureName, arg) {\n\n    var newFeature = geo.createFeature(\n      featureName, m_this, m_this.renderer(), arg);\n\n    m_this.addChild(newFeature);\n    m_features.push(newFeature);\n    m_this.features(m_features);\n    m_this.modified();\n    return newFeature;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete feature\n   *\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteFeature = function (feature) {\n    var i;\n\n    for (i = 0; i < m_features.length; i += 1) {\n      if (m_features[i] === feature) {\n        m_features[i]._exit();\n        m_this.dataTime().modified();\n        m_this.modified();\n        m_features.splice(i, 1);\n        return m_this;\n      }\n    }\n    m_this.removeChild(feature);\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set drawables\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.features = function (val) {\n    if (val === undefined) {\n      return m_features;\n    } else {\n      m_features = val.slice(0);\n      m_this.dataTime().modified();\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   *\n   * Do not call parent _init method as its already been executed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (m_this.initialized()) {\n      return m_this;\n    }\n\n    /// Call super class init\n    s_init.call(m_this);\n\n    /// Bind events to handlers\n    m_this.geoOn(geo.event.resize, function (event) {\n      m_this.renderer()._resize(event.x, event.y, event.width, event.height);\n      m_this._update({});\n      m_this.renderer()._render();\n    });\n\n    m_this.geoOn(geo.event.pan, function (event) {\n      m_this._update({event: event});\n      m_this.renderer()._render();\n    });\n\n    m_this.geoOn(geo.event.zoom, function (event) {\n      m_this._update({event: event});\n      m_this.renderer()._render();\n    });\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function (request) {\n    var i;\n\n    if (!m_features.length) {\n      return m_this;\n    }\n\n    /// Call base class update\n    s_update.call(m_this, request);\n\n    if (!m_this.source() && m_features && m_features.length === 0) {\n      console.log(\"[info] No valid data source found.\");\n      return;\n    }\n\n    if (m_this.dataTime().getMTime() > m_this.updateTime().getMTime()) {\n      for (i = 0; i < m_features.length; i += 1) {\n        m_features[i].renderer(m_this.renderer());\n      }\n    }\n\n    for (i = 0; i < m_features.length; i += 1) {\n      m_features[i]._update();\n    }\n\n    m_this.updateTime().modified();\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Draw\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n    // Call sceneObject.draw, which calls draw on all child objects.\n    s_draw();\n\n    // Now call render on the renderer. In certain cases it may not do\n    // anything if the if the child objects are drawn on the screen already.\n    m_this.renderer()._render();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clear all features in layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.clear = function () {\n    var i;\n\n    if (!m_features.length)\n      return m_this;\n\n    for (i = 0; i < m_features.length; i += 1) {\n      m_features[i]._exit();\n    }\n\n    m_this.dataTime().modified();\n    m_this.modified();\n    m_features = [];\n\n    return m_this;\n  };\n\n  return m_this;\n};\n\ninherit(geo.featureLayer, geo.layer);\n\n// Now register it\ngeo.registerLayer(\"feature\", geo.featureLayer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class event\n *\n * @class\n * @returns {geo.event}\n */\n //////////////////////////////////////////////////////////////////////////////\ngeo.event = function () {\n  \"use strict\";\n  if (!(this instanceof geo.event)) {\n    return new geo.event();\n  }\n  vgl.event.call(this);\n\n  return this;\n};\n\ninherit(geo.event, vgl.event);\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Event types\n */\n//////////////////////////////////////////////////////////////////////////////\n\n// TODO Add documentation\ngeo.event.update = \"geo_update\";\ngeo.event.opacityUpdate = \"geo_opacityUpdate\";\ngeo.event.layerAdd = \"geo_layerAdd\";\ngeo.event.layerRemove = \"geo_layerRemove\";\ngeo.event.layerToggle = \"geo_layerToggle\";\ngeo.event.layerSelect = \"geo_layerSelect\";\ngeo.event.layerUnselect = \"geo_layerUnselect\";\ngeo.event.zoom = \"geo_zoom\";\ngeo.event.pan = \"geo_pan\";\ngeo.event.rotate = \"geo_rotate\";\ngeo.event.resize = \"geo_resize\";\ngeo.event.animate = \"geo_animate\";\ngeo.event.query = \"geo_query\";\ngeo.event.draw = \"geo_draw\";\ngeo.event.drawEnd = \"geo_drawEnd\";\ngeo.event.animationPause = \"geo_animationPause\";\ngeo.event.animationStop = \"geo_animationStop\";\ngeo.event.animationComplete = \"geo_animationComplete\";\ngeo.event.mousemove = \"geo_mousemove\";\ngeo.event.mouseclick = \"geo_mouseclick\";\ngeo.event.brush = \"geo_brush\"; // mousemove during a selection\ngeo.event.brushend = \"geo_brushend\"; // mouseup after a selection has been made\ngeo.event.brushstart = \"geo_brushstart\"; // mousedown starting a selection\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of mapInteractor\n *\n * @class geo.mapInteractor\n * @returns {geo.mapInteractor}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.mapInteractor = function (args) {\n  'use strict';\n  if (!(this instanceof geo.mapInteractor)) {\n    return new geo.mapInteractor(args);\n  }\n  geo.object.call(this);\n\n  var m_options = args || {},\n      m_this = this,\n      m_mouse,\n      m_keyboard,\n      m_state,\n      $node,\n      m_wheelQueue = { x: 0, y: 0 },\n      m_throttleTime = 10,\n      m_wait = false,\n      m_disableThrottle = true,\n      m_selectionLayer = null,\n      m_selectionPlane = null;\n\n  // Helper method to decide if the current button/modifiers match a set of\n  // conditions.\n  // button: 'left' | 'right' | 'middle'\n  // modifiers: [ 'alt' | 'meta' | 'ctrl' | 'shift' ]\n  function eventMatch(button, modifiers) {\n    /* jshint -W018 */\n    return (button === 'wheel' || m_mouse.buttons[button]) &&\n      (!!m_mouse.modifiers.alt)   === (!!modifiers.alt)   &&\n      (!!m_mouse.modifiers.meta)  === (!!modifiers.meta)  &&\n      (!!m_mouse.modifiers.shift) === (!!modifiers.shift) &&\n      (!!m_mouse.modifiers.ctrl)  === (!!modifiers.ctrl);\n    /* jshint +W018 */\n  }\n\n  // Helper method to calculate the speed from a velocity\n  function calcSpeed(v) {\n    var x = v.x, y = v.y;\n    return Math.sqrt(x * x + y * y);\n  }\n\n  // For throttling mouse events this is a function that\n  // returns true if no actions are in progress and starts\n  // a timer to block events for the next `m_throttleTime` ms.\n  // If it returns false, the caller should ignore the\n  // event.\n  function doRespond() {\n    if (m_disableThrottle) {\n      return true;\n    }\n    if (m_wait) {\n      return false;\n    }\n    m_wait = true;\n    window.setTimeout(function () {\n      m_wait = false;\n      m_wheelQueue = {\n        x: 0,\n        y: 0\n      };\n    }, m_throttleTime);\n    return true;\n  }\n\n  // copy the options object with defaults\n  m_options = $.extend(\n    true,\n    {\n      panMoveButton: 'left',\n      panMoveModifiers: {},\n      zoomMoveButton: 'right',\n      zoomMoveModifiers: {},\n      panWheelEnabled: false,\n      panWheelModifiers: {},\n      zoomWheelEnabled: true,\n      zoomWheelModifiers: {},\n      wheelScaleX: 1,\n      wheelScaleY: 1,\n      zoomScale: 1,\n      selectionButton: 'left',\n      selectionModifiers: {'shift': true},\n      momentum: {\n        enabled: true,\n        maxSpeed: 10,\n        minSpeed: 0.01,\n        drag: 0.005\n      }\n    },\n    m_options\n  );\n\n  // options supported:\n  // {\n  //   // button that must be pressed to initiate a pan on mousedown\n  //   panMoveButton: 'right' | 'left' | 'middle'\n  //\n  //   // modifier keys that must be pressed to initiate a pan on mousemove\n  //   panMoveModifiers: { 'ctrl' | 'alt' | 'meta' | 'shift' }\n  //\n  //   // button that must be pressed to initiate a zoom on mousedown\n  //   zoomMoveButton: 'right' | 'left' | 'middle'\n  //\n  //   // modifier keys that must be pressed to initiate a zoom on mousemove\n  //   zoomMoveModifiers: { 'ctrl' | 'alt' | 'meta' | 'shift' }\n  //\n  //   // enable or disable panning with the mouse wheel\n  //   panWheelEnabled: true | false\n  //\n  //   // modifier keys that must be pressed to trigger a pan on wheel\n  //   panWheelModifiers: {...}\n  //\n  //   // enable or disable zooming with the mouse wheel\n  //   zoomWheelEnabled: true | false\n  //\n  //   // modifier keys that must be pressed to trigger a zoom on wheel\n  //   zoomWheelModifiers: {...}\n  //\n  //   // wheel scale factor to change the magnitude of wheel interactions\n  //   wheelScaleX: 1\n  //   wheelScaleY: 1\n  //\n  //   // zoom scale factor to change the magnitude of zoom move interactions\n  //   zoomScale: 1\n  //\n  //   // button that must be pressed to enable drag selection\n  //    selectionButton: 'right' | 'left' | 'middle'\n  //\n  //   // keyboard modifiers that must be pressed to initiate a selection\n  //   selectionModifiers: {...}\n  //\n  //   // enable momentum when panning\n  //   momentum: {\n  //     enabled: true | false,\n  //     drag: number, // drag coefficient\n  //     maxSpeed: number, // don't allow animation to pan faster than this\n  //     minSpeed: number  // stop animations if the speed is less than this\n  //   }\n  // }\n\n  // default mouse object\n  m_mouse = {\n    page: { // mouse position relative to the page\n      x: 0,\n      y: 0\n    },\n    map: { // mouse position relative to the map\n      x: 0,\n      y: 0\n    },\n    // mouse button status\n    buttons: {\n      left: false,\n      right: false,\n      middle: false\n    },\n    // keyboard modifier status\n    modifiers: {\n      alt: false,\n      ctrl: false,\n      shift: false,\n      meta: false\n    },\n    // time the event was captured\n    time: new Date(),\n    // time elapsed since the last mouse event\n    deltaTime: 1,\n    // pixels/ms\n    velocity: 0\n  };\n\n  // default keyboard object\n  // (keyboard events not implemented yet)\n  m_keyboard = {\n  };\n\n  // The interactor state determines what actions are taken in response to\n  // core browser events.\n  //\n  // i.e.\n  // {\n  //    'action': 'pan',      // an ongoing pan event\n  //    'origin': {...},      // mouse object at the start of the action\n  //    'delta': {x: *, y: *} // mouse movement since action start\n  //                          // not including the current event\n  //  }\n  //\n  //  {\n  //    'action': 'zoom',  // an ongoing zoom event\n  //    ...\n  //  }\n  //\n  //  {\n  //    'acton': 'select',\n  //    'origin': {...},\n  //    'delta': {x: *, y: *}\n  //  }\n  //\n  //  {\n  //    'action': 'momentum',\n  //    'origin': {...},\n  //    'handler': function () { }, // called in animation loop\n  //    'timer': animate loop timer\n  //  }\n  m_state = {};\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connects events to a map.  If the map is not set, then this does nothing.\n   * @returns {geo.mapInteractor}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._connectEvents = function () {\n    if (!m_options.map) {\n      return m_this;\n    }\n\n    // prevent double binding to dom elements\n    m_this._disconnectEvents();\n\n    // store the connected element\n    $node = $(m_options.map.node());\n\n\n    // add event handlers\n    $node.on('mousemove.geojs', m_this._handleMouseMove);\n    $node.on('mousedown.geojs', m_this._handleMouseDown);\n    $node.on('mouseup.geojs', m_this._handleMouseUp);\n    $node.on('mousewheel.geojs', m_this._handleMouseWheel);\n    if (m_options.panMoveButton === 'right' ||\n        m_options.zoomMoveButton === 'right') {\n      $node.on('contextmenu.geojs', function () { return false; });\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Disonnects events to a map.  If the map is not set, then this does nothing.\n   * @returns {geo.mapInteractor}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._disconnectEvents = function () {\n    if ($node) {\n      $node.off('.geojs');\n      $node = null;\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Sets or gets map for this interactor, adds draw region layer if needed\n   *\n   * @param {geo.map} newMap optional\n   * @returns {geo.interactorStyle|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.map = function (val) {\n    if (val !== undefined) {\n      m_options.map = val;\n      m_this._connectEvents();\n      return m_this;\n    }\n    return m_options.map;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Gets/sets the options object for the interactor.\n   *\n   * @param {Object} opts optional\n   * @returns {geo.interactorStyle|Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.options = function (opts) {\n    if (opts === undefined) {\n      return $.extend({}, m_options);\n    }\n    $.extend(m_options, opts);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Stores the current mouse position from an event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getMousePosition = function (evt) {\n    var offset = $node.offset(), dt, t;\n\n    t = (new Date()).valueOf();\n    dt = t - m_mouse.time;\n    m_mouse.time = t;\n    m_mouse.deltaTime = dt;\n    m_mouse.velocity = {\n      x: (evt.pageX - m_mouse.page.x) / dt,\n      y: (evt.pageY - m_mouse.page.y) / dt\n    };\n    m_mouse.page = {\n      x: evt.pageX,\n      y: evt.pageY\n    };\n    m_mouse.map = {\n      x: evt.pageX - offset.left,\n      y: evt.pageY - offset.top\n    };\n    m_mouse.geo = m_this.map().displayToGcs(m_mouse.map);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Stores the current mouse button\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getMouseButton = function (evt) {\n    if (evt.which === 1)\n      m_mouse.buttons.left = evt.type !== 'mouseup';\n    else if (evt.which === 3) {\n      m_mouse.buttons.right = evt.type !== 'mouseup';\n    } else if (evt.which === 2) {\n      m_mouse.buttons.middle = evt.type !== 'mouseup';\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Stores the current keyboard modifiers\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getMouseModifiers = function (evt) {\n    m_mouse.modifiers.alt = evt.altKey;\n    m_mouse.modifiers.ctrl = evt.ctrlKey;\n    m_mouse.modifiers.meta = evt.metaKey;\n    m_mouse.modifiers.shift = evt.shiftKey;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Compute a selection information object.\n   * @private\n   * @returns {Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getSelection = function () {\n    var origin = m_state.origin,\n        mouse = m_this.mouse(),\n        map = m_this.map(),\n        display = {}, gcs = {};\n\n    // TODO: clamp to map bounds\n    // Get the display coordinates\n    display.upperLeft = {\n      x: Math.min(origin.map.x, mouse.map.x),\n      y: Math.min(origin.map.y, mouse.map.y)\n    };\n\n    display.lowerRight = {\n      x: Math.max(origin.map.x, mouse.map.x),\n      y: Math.max(origin.map.y, mouse.map.y)\n    };\n\n    display.upperRight = {\n      x: display.lowerRight.x,\n      y: display.upperLeft.y\n    };\n\n    display.lowerLeft = {\n      x: display.upperLeft.x,\n      y: display.lowerRight.y\n    };\n\n    // Get the gcs coordinates\n    gcs.upperLeft = map.displayToGcs(display.upperLeft);\n    gcs.lowerRight = map.displayToGcs(display.lowerRight);\n    gcs.upperRight = map.displayToGcs(display.upperRight);\n    gcs.lowerLeft = map.displayToGcs(display.lowerLeft);\n\n    m_selectionPlane.origin([\n      display.lowerLeft.x,\n      display.lowerLeft.y,\n      0\n    ]);\n    m_selectionPlane.upperLeft([\n      display.upperLeft.x,\n      display.upperLeft.y,\n      0\n    ]);\n    m_selectionPlane.lowerRight([\n      display.lowerRight.x,\n      display.lowerRight.y,\n      0\n    ]);\n    m_selectionPlane.draw();\n\n    return {\n      display: display,\n      gcs: gcs,\n      mouse: mouse,\n      origin: $.extend({}, m_state.origin)\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle event when a mouse button is pressed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseDown = function (evt) {\n    var action = null;\n\n    if (m_state.action === 'momentum') {\n      // cancel momentum on click\n      m_state = {};\n    }\n\n    m_this._getMousePosition(evt);\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    if (eventMatch(m_options.panMoveButton, m_options.panMoveModifiers)) {\n      action = 'pan';\n    } else if (eventMatch(m_options.zoomMoveButton, m_options.zoomMoveModifiers)) {\n      action = 'zoom';\n    } else if (eventMatch(m_options.selectionButton, m_options.selectionModifiers)) {\n      action = 'select';\n    }\n\n    if (action) {\n      // store the state object\n      m_state = {\n        action: action,\n        origin: $.extend(true, {}, m_mouse),\n        delta: {x: 0, y: 0}\n      };\n\n      if (action === 'select') {\n        // Make sure the old selection layer is gone.\n        if (m_selectionLayer) {\n          m_selectionLayer.clear();\n          m_this.map().deleteLayer(m_selectionLayer);\n          m_selectionLayer = null;\n        }\n        // Create a feature layer and plane feature to show the selection bounds\n        m_selectionLayer = m_this.map().createLayer('feature', {renderer: 'd3Renderer'});\n        m_selectionPlane = m_selectionLayer.createFeature('plane');\n        m_selectionPlane.style({\n          screenCoordinates: true,\n          fillOpacity: function () { return 0.25; }\n        });\n        m_this.map().geoTrigger(geo.event.brushstart, m_this._getSelection());\n      }\n\n      // bind temporary handlers to document\n      $(document).on('mousemove.geojs', m_this._handleMouseMoveDocument);\n      $(document).on('mouseup.geojs', m_this._handleMouseUpDocument);\n    }\n\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseMove = function (evt) {\n    if (m_state.action) {\n      // If currently performing a navigation action, the mouse\n      // coordinates will be captured by the document handler.\n      return;\n    }\n    m_this._getMousePosition(evt);\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n    m_this.map().geoTrigger(geo.event.mousemove, m_this.mouse());\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse move event on the document (temporary bindings)\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseMoveDocument = function (evt) {\n    var dx, dy, selectionObj;\n    m_this._getMousePosition(evt);\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    if (!m_state.action) {\n      // This shouldn't happen\n      console.log('WARNING: Invalid state in mapInteractor.');\n      return;\n    }\n\n    // when throttled, do nothing\n    if (!doRespond()) {\n      return;\n    }\n\n    // calculate the delta from the origin point to avoid\n    // accumulation of floating point errors\n    dx = m_mouse.map.x - m_state.origin.map.x - m_state.delta.x;\n    dy = m_mouse.map.y - m_state.origin.map.y - m_state.delta.y;\n    m_state.delta.x += dx;\n    m_state.delta.y += dy;\n\n    if (m_state.action === 'pan') {\n      m_this.map().pan({x: dx, y: dy});\n    } else if (m_state.action === 'zoom') {\n      m_this.map().zoom(\n        m_this.map().zoom() - dy * m_options.zoomScale / 120\n      );\n    } else if (m_state.action === 'select') {\n      // Get the bounds of the current selection\n      selectionObj = m_this._getSelection();\n      m_this.map().geoTrigger(geo.event.brush, selectionObj);\n    }\n\n    // Prevent default to stop text selection in particular\n    evt.preventDefault();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle event when a mouse button is unpressed on the document.\n   * Removes temporary bindings.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseUpDocument = function (evt) {\n    var selectionObj, oldAction;\n\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    // unbind temporary handlers on document\n    $(document).off('.geojs');\n\n    if (m_mouse.buttons.right) {\n      evt.preventDefault();\n    }\n\n    if (m_state.action === 'select') {\n      selectionObj = m_this._getSelection();\n\n      m_selectionLayer.clear();\n      m_this.map().deleteLayer(m_selectionLayer);\n      m_selectionLayer = null;\n      m_selectionPlane = null;\n\n      m_this.map().geoTrigger(geo.event.brushend, selectionObj);\n    }\n\n    // reset the interactor state\n    oldAction = m_state.action;\n    m_state = {};\n\n    // if momentum is enabled, start the action here\n    if (m_options.momentum.enabled && oldAction === 'pan') {\n      m_state.action = 'momentum';\n      m_state.origin = m_this.mouse();\n      m_state.handler = function () {\n        var vx, vy, speed, s;\n\n        if (m_state.action !== 'momentum' || !m_this.map()) {\n          // cancel if a new action was performed\n          return;\n        }\n\n        vx = m_mouse.velocity.x;\n        vy = m_mouse.velocity.y;\n\n        // get the current speed\n        speed = calcSpeed(m_mouse.velocity);\n        s = speed;\n\n        // normalize the velocity components\n        vx = vx / speed;\n        vy = vy / speed;\n\n        // modify current speed by constraints\n        speed = Math.min(speed, m_options.momentum.maxSpeed);\n\n        // calculate the new speed\n        speed = speed * Math.exp(-m_options.momentum.drag * m_mouse.deltaTime);\n\n        // stop panning when the speed is below the threshold\n        if (speed < m_options.momentum.minSpeed) {\n          m_state = {};\n          return;\n        }\n\n        m_mouse.velocity.x = speed * vx;\n        m_mouse.velocity.y = speed * vy;\n\n        m_this.map().pan({\n          x: m_mouse.velocity.x * m_mouse.deltaTime,\n          y: m_mouse.velocity.y * m_mouse.deltaTime\n        });\n\n        window.requestAnimationFrame(m_state.handler);\n      };\n      window.requestAnimationFrame(m_state.handler);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle event when a mouse button is unpressed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseUp = function (evt) {\n    m_this._getMouseButton(evt);\n    m_this._getMouseModifiers(evt);\n\n    // fire a click event here\n    m_this.map().geoTrigger(geo.event.mouseclick, m_this.mouse());\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle mouse wheel event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseWheel = function (evt) {\n    var zoomFactor, direction;\n\n    // In case jquery-mousewheel isn't loaded for some reason\n    evt.deltaFactor = evt.deltaFactor || 1;\n\n    m_this._getMouseModifiers(evt);\n    evt.deltaX = evt.deltaX * m_options.wheelScaleX * evt.deltaFactor / 120;\n    evt.deltaY = evt.deltaY * m_options.wheelScaleY * evt.deltaFactor / 120;\n\n    evt.preventDefault();\n    if (!doRespond()) {\n      m_wheelQueue.x += evt.deltaX;\n      m_wheelQueue.y += evt.deltaY;\n      return;\n    }\n\n    evt.deltaX += m_wheelQueue.x;\n    evt.deltaY += m_wheelQueue.y;\n\n    m_wheelQueue = {\n      x: 0,\n      y: 0\n    };\n\n    if (m_options.panWheelEnabled &&\n        eventMatch('wheel', m_options.panWheelModifiers)) {\n\n      m_this.map().pan({\n        x: evt.deltaX,\n        y: evt.deltaY\n      });\n\n    } else if (m_options.zoomWheelEnabled &&\n               eventMatch('wheel', m_options.zoomWheelModifiers)) {\n\n      zoomFactor = evt.deltaY;\n      direction = m_mouse.map;\n\n      m_this.map().zoom(\n        m_this.map().zoom() + zoomFactor,\n        direction\n      );\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle double click event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleDoubleClick = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Public method that unbinds all events\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.destroy = function () {\n    m_this._disconnectEvents();\n    m_this.map(null);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get current mouse information\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.mouse = function () {\n    return $.extend(true, {}, m_mouse);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get current keyboard information\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.keyboard = function () {\n    return $.extend(true, {}, m_keyboard);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the current interactor state\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.state = function () {\n    return $.extend(true, {}, m_state);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Simulate a DOM mouse event on connected map.\n   *\n   * The options for creating the events are as follows, not all\n   * options are required for every event type.\n   *\n   * options = {\n   *   page: {x, y} // position on the page\n   *   map: {x, y}  // position on the map (overrides page)\n   *   button: 'left' | 'right' | 'middle'\n   *   modifiers: [ 'alt' | 'ctrl' | 'meta' | 'shift' ]\n   *   wheelDelta: {x, y}\n   * }\n   *\n   * @param {string} type Event type 'mousemove', 'mousedown', 'mouseup', ...\n   * @param {object} options\n   * @returns {mapInteractor}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.simulateEvent = function (type, options) {\n    var evt, page, offset, which;\n\n    if (!m_this.map()) {\n      return m_this;\n    }\n\n    page = options.page || {};\n\n    if (options.map) {\n      offset = $node.offset();\n      page.x = options.map.x + offset.left;\n      page.y = options.map.y + offset.top;\n    }\n\n    if (options.button === 'left') {\n      which = 1;\n    } else if (options.button === 'right') {\n      which = 3;\n    } else if (options.button === 'middle') {\n      which = 2;\n    }\n\n    options.modifiers = options.modifiers || [];\n    options.wheelDelta = options.wheelDelta || {};\n\n    evt = $.Event(\n      type,\n      {\n        pageX: page.x,\n        pageY: page.y,\n        which: which,\n        altKey: options.modifiers.indexOf('alt') >= 0,\n        ctrlKey: options.modifiers.indexOf('ctrl') >= 0,\n        metaKey: options.modifiers.indexOf('meta') >= 0,\n        shiftKey: options.modifiers.indexOf('shift') >= 0,\n        deltaX: options.wheelDelta.x,\n        deltaY: options.wheelDelta.y,\n        deltaFactor: 1\n      }\n    );\n    $node.trigger(evt);\n  };\n  this._connectEvents();\n  return this;\n};\n\ninherit(geo.mapInteractor, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\ngeo.time = {};\n\ngeo.time.incrementTime = function (time, unit, delta) {\n  'use strict';\n\n  if (unit === 'days') {\n    time.setDate(time.getDate() + delta);\n  }\n  else if (unit === 'months') {\n    time.setMonth(time.getMonth() + delta);\n  }\n  else if (unit === 'years') {\n    time.setYear(time.getYear() + delta);\n  }\n  else if (unit === 'index') {\n    time = time + delta;\n  }\n\n  return time;\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class fileReader\n *\n * @class\n * @returns {geo.fileReader}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.fileReader = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.fileReader)) {\n    return new geo.fileReader(arg);\n  }\n  geo.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  arg = arg || {};\n\n  if (!(arg.layer instanceof geo.featureLayer)) {\n    throw \"fileReader must be given a feature layer\";\n  }\n\n  var m_layer = arg.layer;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the feature layer attached to the reader\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Tells the caller if it can handle the given file by returning a boolean.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canRead = function () {\n    return false;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reads the file object and calls the done function when finished.  As an\n   * argument to done, provides a boolean that reports if the read was a\n   * success.  Possibly, it can call done with an object containing details\n   * of the read operation.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.read = function (file, done) {\n    done(false);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return a FileReader with handlers attached.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function newFileReader(done, progress) {\n    var reader = new FileReader();\n    if (progress) {\n      reader.onprogress = progress;\n    }\n    reader.onloadend = function () {\n      if (!reader.result) {\n        done(reader.error);\n      }\n      done(reader.result);\n    };\n    return reader;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private method for reading a file object as a string.  Calls done with\n   * the string content when finished or an error object if unsuccessful.\n   * Optionally, the caller can provide a progress method that is called\n   * after reading each slice.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getString = function (file, done, progress) {\n    var reader = newFileReader(done, progress);\n    reader.readAsText(file);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Like _getString, but returns an ArrayBuffer object.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._getArrayBuffer = function (file, done, progress) {\n    var reader = newFileReader(done, progress);\n    reader.readAsText(file);\n  };\n\n  return this;\n};\n\ninherit(geo.fileReader, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n/*global File*/\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class jsonReader\n *\n * @class\n * @returns {geo.fileReader}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.jsonReader = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.jsonReader)) {\n    return new geo.jsonReader(arg);\n  }\n\n  var m_this = this, m_style = arg.style || {};\n\n  geo.fileReader.call(this, arg);\n\n  this.canRead = function (file) {\n    if (file instanceof File) {\n      return (file.type === 'application/json' || file.name.match(/\\.json$/));\n    } else if (typeof file === 'string') {\n      try {\n        JSON.parse(file);\n      } catch (e) {\n        return false;\n      }\n      return true;\n    }\n    try {\n      if (Array.isArray(m_this._featureArray(file))) {\n        return true;\n      }\n    } catch (e) {}\n    return false;\n  };\n\n  this._readObject = function (file, done, progress) {\n    var object;\n    function onDone(fileString) {\n      if (typeof fileString !== 'string') {\n        done(false);\n      }\n\n      // We have two possibilities here:\n      // 1) fileString is a JSON string or is\n      // a URL.\n      try {\n        object = JSON.parse(fileString);\n        done(object);\n      } catch (e) {\n        if (!object) {\n          $.ajax({\n            type : 'GET',\n            url : fileString,\n            dataType : 'text'\n          }).done(function (data) {\n            object = JSON.parse(data);\n            done(object);\n          }).fail(function () {\n            done(false);\n          });\n        }\n      }\n    }\n\n    if (file instanceof File) {\n      m_this._getString(file, onDone, progress);\n    } else if (typeof file === 'string') {\n      onDone(file);\n    } else {\n      done(file);\n    }\n  };\n\n  this._featureArray = function (spec) {\n    if (spec.type === 'FeatureCollection') {\n      return spec.features || [];\n    }\n    if (spec.type === 'GeometryCollection') {\n      throw 'GeometryCollection not yet implemented.';\n    }\n    if (Array.isArray(spec.coordinates)) {\n      return spec;\n    }\n    throw 'Unsupported collection type: ' + spec.type;\n  };\n\n  this._featureType = function (spec) {\n    var geometry = spec.geometry || {};\n    if (geometry.type === 'Point' || geometry.type === 'MultiPoint') {\n      return 'point';\n    }\n    if (geometry.type === 'LineString') {\n      return 'line';\n    }\n    if (geometry.type === 'Polygon') {\n      return 'polygon';\n    }\n    return null;\n  };\n\n  this._getCoordinates = function (spec) {\n    var geometry = spec.geometry || {},\n        coordinates = geometry.coordinates || [], elv;\n\n    if ((coordinates.length === 2 || coordinates.length === 3) &&\n        (isFinite(coordinates[0]) && isFinite(coordinates[1]))) {\n\n      // Do we have a elevation component\n      if (isFinite(coordinates[2])) {\n        elv = coordinates[2];\n      }\n\n      // special handling for single point coordinates\n      return [geo.latlng(coordinates[1], coordinates[0], elv)];\n    }\n\n    // need better handling here, but we can plot simple polygons\n    // by taking just the outer linearring\n    if (Array.isArray(coordinates[0][0])) {\n      coordinates = coordinates[0];\n    }\n\n    // return an array of latlng's for LineString, MultiPoint, etc...\n    return coordinates.map(function (c) {\n      return geo.latlng(c[1], c[0], c[2]);\n    });\n  };\n\n  this._getStyle = function (spec) {\n    return $.extend({\n      'strokeWidth': 2,\n      'strokeColor': {r: 0, g: 0, b: 0},\n      'strokeOpacity': 1,\n      'fillColor': {r: 1, g: 0, b: 0},\n      'fillOpacity': 1\n    }, spec.properties);\n  };\n\n  this.read = function (file, done, progress) {\n\n    function _done(object) {\n      var features, allFeatures = [];\n\n      features = m_this._featureArray(object);\n\n      features.forEach(function (feature) {\n        var type = m_this._featureType(feature),\n            coordinates = m_this._getCoordinates(feature),\n            style = m_this._getStyle(feature);\n        if (type) {\n          if (type === 'line') {\n            style.fill = style.fill || false;\n            allFeatures.push(m_this._addFeature(type, [coordinates], style));\n          } else if (type === 'point') {\n            style.stroke = style.stroke || false;\n            allFeatures.push(m_this._addFeature(type, coordinates, style));\n          } else if (type === 'polygon') {\n            style.fill = style.fill === undefined ? true : style.fill;\n            style.fillOpacity = (\n              style.fillOpacity === undefined ? 0.25 : style.fillOpacity\n            );\n            // polygons not yet supported\n            allFeatures.push(m_this._addFeature('line', [coordinates], style));\n          }\n        } else {\n          console.log('unsupported feature type: ' + feature.geometry.type);\n        }\n      });\n\n      if (done) {\n        done(allFeatures);\n      }\n    }\n\n    m_this._readObject(file, _done, progress);\n  };\n\n  this._addFeature = function (type, coordinates, style) {\n    var _style = $.extend({}, m_style, style);\n    return m_this.layer().createFeature(type)\n      .data(coordinates)\n      .position(function (d) {\n        return {\n          x: d.x(),\n          y: d.y(),\n          z: d.z() || 0\n        };\n      })\n      .style(_style);\n  };\n\n};\n\ninherit(geo.jsonReader, geo.fileReader);\n\ngeo.registerFileReader('jsonReader', geo.jsonReader);\n","/////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class map\n *\n * @class Creates a new map inside of the given HTML layer (Typically DIV)\n * @returns {geo.map}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.map = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.map)) {\n    return new geo.map(arg);\n  }\n  arg = arg || {};\n  geo.sceneObject.call(this, arg);\n  arg.layers = arg.layers === undefined ? [] : arg.layers;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private member variables\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_x = 0,\n      m_y = 0,\n      m_node = $(arg.node),\n      m_width = arg.width || m_node.width(),\n      m_height = arg.height || m_node.height(),\n      m_gcs = arg.gcs === undefined ? \"EPSG:4326\" : arg.gcs,\n      m_uigcs = arg.uigcs === undefined ? \"EPSG:4326\" : arg.uigcs,\n      m_center = { x: 0, y: 0 },\n      m_zoom = arg.zoom === undefined ? 1 : arg.zoom,\n      m_baseLayer = null,\n      toMillis, calculateGlobalAnimationRange, cloneTimestep,\n      m_animationState = {range: null, timestep: null, layers: null},\n      m_intervalMap = {},\n      m_pause,\n      m_stop,\n      m_fileReader = null,\n      m_interactor = null,\n      m_validZoomRange = { min: 0, max: 16 },\n      m_transition = null;\n\n  m_intervalMap.milliseconds = 1;\n  m_intervalMap.seconds = m_intervalMap.milliseconds * 1000;\n  m_intervalMap.minutes = m_intervalMap.seconds * 60;\n  m_intervalMap.hours = m_intervalMap.minutes * 60;\n  m_intervalMap.days = m_intervalMap.hours * 24;\n  m_intervalMap.weeks = m_intervalMap.days * 7;\n  m_intervalMap.months = m_intervalMap.weeks * 4;\n  m_intervalMap.years = m_intervalMap.months * 12;\n\n  this.geoOn(geo.event.animationPause, function () { m_pause = true; });\n  this.geoOn(geo.event.animationStop, function () { m_stop = true; });\n\n  if (arg.center) {\n    if (Array.isArray(arg.center)) {\n      arg.center = {\n        x: arg.center[1],\n        y: arg.center[0]\n      };\n    }\n  }\n\n  toMillis = function (delta) {\n    var deltaLowercase = delta.toLowerCase();\n    return m_intervalMap[deltaLowercase];\n  };\n\n  calculateGlobalAnimationRange = function (layers) {\n    var delta, deltaUnits, start = null, end = null, layerTimeRange, layerDelta,\n        indexTimestep = false, smallestDeltaInMillis = Number.MAX_VALUE, i;\n\n    for (i = 0; i < layers.length; i += 1) {\n      layerTimeRange = layers[i].timeRange();\n\n      if (!layerTimeRange) {\n        continue;\n      }\n\n      if (layerTimeRange.deltaUnits === \"index\") {\n        indexTimestep = true;\n        layerDelta = layerTimeRange.delta;\n      }\n      else {\n        if (indexTimestep) {\n          throw \"Can't mix index timesteps with time based timesteps\";\n        }\n\n        layerDelta = toMillis(layerTimeRange.deltaUnits) * layerTimeRange.delta;\n      }\n\n      if (layerDelta < smallestDeltaInMillis) {\n        delta = layerTimeRange.delta;\n        deltaUnits = layerTimeRange.deltaUnits;\n        smallestDeltaInMillis = layerDelta;\n      }\n\n      if (start === null || layerTimeRange.start < start) {\n        start = layerTimeRange.start;\n      }\n\n      if (end === null || layerTimeRange.end < end) {\n        end = layerTimeRange.end;\n      }\n    }\n\n    return {\n      \"start\": start,\n      \"end\": end,\n      \"delta\": delta,\n      \"deltaUnits\": deltaUnits\n    };\n  };\n\n  cloneTimestep = function (timestep) {\n\n    if (timestep instanceof Date) {\n      timestep = new Date(timestep.getTime());\n    }\n\n    return timestep;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get map gcs\n   *\n   * @returns {String EPSG format}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcs = function (arg) {\n    if (arg === undefined) {\n      return m_gcs;\n    }\n    m_gcs = arg;\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get map user interface GCS\n   *\n   * @returns {String EPSG format}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.uigcs = function () {\n    return m_uigcs;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get root node of the map\n   *\n   * @returns {jquery object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.node = function () {\n    return m_node;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set zoom level of the map\n   *\n   * @returns {Number|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.zoom = function (val, direction) {\n    var base, evt, previousCenter;\n    if (val === undefined) {\n      return m_zoom;\n    }\n\n    val = Math.min(m_validZoomRange.max, Math.max(val, m_validZoomRange.min));\n    if (val === m_zoom) {\n      return m_this;\n    }\n\n    base = m_this.baseLayer();\n\n    evt = {\n      geo: {},\n      zoomLevel: val,\n      screenPosition: direction,\n      eventType: geo.event.zoom\n    };\n    if (base) {\n      base.renderer().geoTrigger(geo.event.zoom, evt, true);\n    }\n\n    if (evt.geo.preventDefault) {\n      return;\n    }\n\n    m_zoom = val;\n    previousCenter = m_center;\n    m_center = m_this.displayToGcs({\n      x: m_width / 2,\n      y: m_height / 2\n    });\n\n    evt.gcsDelta = {\n      x: m_center.x - previousCenter.x,\n      y: m_center.y - previousCenter.y\n    };\n\n    m_this.children().forEach(function (child) {\n      child.geoTrigger(geo.event.zoom, evt, true);\n    });\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Pan the map by (x: dx, y: dy) pixels.\n   *\n   * @param {Object} delta\n   * @returns {geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pan = function (delta) {\n    var base = m_this.baseLayer(),\n        evt;\n\n    evt = {\n      geo: {},\n      screenDelta: delta,\n      eventType: geo.event.pan\n    };\n    // first pan the base layer\n    if (base) {\n      base.renderer().geoTrigger(geo.event.pan, evt, true);\n    }\n\n    // If the base renderer says the pan is invalid, then cancel the action.\n    if (evt.geo.preventDefault) {\n      return;\n    }\n\n    m_center = m_this.displayToGcs({\n      x: m_width / 2,\n      y: m_height / 2\n    });\n    m_this.children().forEach(function (child) {\n      child.geoTrigger(geo.event.pan, evt, true);\n    });\n\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set center of the map to the given geographic coordinates, or get the\n   * current center.  Uses bare objects {x: 0, y: 0}.\n   *\n   * @param {Object} coordinates\n   * @returns {Object|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.center = function (coordinates) {\n    var newCenter, currentCenter;\n\n    if (coordinates === undefined) {\n      return m_center;\n    }\n\n    // get the screen coordinates of the new center\n    newCenter = m_this.gcsToDisplay(coordinates);\n    currentCenter = m_this.gcsToDisplay(m_center);\n\n    // call the pan method\n    m_this.pan({\n      x: currentCenter.x - newCenter.x,\n      y: currentCenter.y - newCenter.y\n    });\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Add layer to the map\n   *\n   * @method addLayer\n   * @param {geo.layer} layer to be added to the map\n   * @return {geom.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createLayer = function (layerName, arg) {\n    var newLayer = geo.createLayer(\n      layerName, m_this, arg);\n\n    if (newLayer !== null || newLayer !== undefined) {\n      newLayer._resize(m_x, m_y, m_width, m_height);\n    } else {\n      return null;\n    }\n\n    if (newLayer.referenceLayer() || m_this.children().length === 0) {\n      m_this.baseLayer(newLayer);\n    }\n    m_this.addChild(newLayer);\n    m_this.modified();\n\n    // TODO: need a better way to set the initial coordinates of a layer\n    if (!newLayer.referenceLayer()) {\n      m_this.center(m_this.center());\n    }\n\n    m_this.geoTrigger(geo.event.layerAdd, {\n      type: geo.event.layerAdd,\n      target: m_this,\n      layer: newLayer\n    });\n\n    return newLayer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Remove layer from the map\n   *\n   * @method removeLayer\n   * @param {geo.layer} layer that should be removed from the map\n   * @return {geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteLayer = function (layer) {\n\n    if (layer !== null && layer !== undefined) {\n      layer._exit();\n\n      m_this.removeChild(layer);\n\n      m_this.modified();\n\n      m_this.geoTrigger(geo.event.layerRemove, {\n        type: geo.event.layerRemove,\n        target: m_this,\n        layer: layer\n      });\n    }\n\n    /// Return deleted layer (similar to createLayer) as in the future\n    /// we may provide extension of this method to support deletion of\n    /// layer using id or some sort.\n    return layer;\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Toggle visibility of a layer\n   *\n   *  @method toggleLayer\n   *  @param {geo.layer} layer\n   *  @returns {Boolean}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.toggle = function (layer) {\n    if (layer !== null && layer !== undefined) {\n      layer.visible(!layer.visible());\n      m_this.modified();\n\n      m_this.geoTrigger(geo.event.layerToggle, {\n        type: geo.event.layerToggle,\n        target: m_this,\n        layer: layer\n      });\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Resize map\n   *\n   * @param {Number} x x-offset in display space\n   * @param {Number} y y-offset in display space\n   * @param {Number} w width in display space\n   * @param {Number} h height in display space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.resize = function (x, y, w, h) {\n    var i, layers = m_this.children();\n\n    m_x = x;\n    m_y  = y;\n    m_width = w;\n    m_height = h;\n\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i]._resize(x, y, w, h);\n    }\n\n    m_this.geoTrigger(geo.event.resize, {\n      type: geo.event.resize,\n      target: m_this,\n      x: m_x,\n      y: m_y,\n      width: w,\n      height: h\n    });\n\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from gcs coordinates to display coordinates\n   *\n   * @param input {[geo.latlng], [{x:_x, y: _y}], [x1,y1, x2, y2]}\n   * @return [x:x1, y:y1, ...], [x1, y1, x2, y2]\n   *\n   * @note Currently only lat-lon inputs are supported\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcsToDisplay = function (input) {\n    var world, output;\n\n    /// Now handle different data types\n    if ((input instanceof Array &&\n         input.length > 0) || input instanceof Object) {\n      world = m_baseLayer.toLocal(input);\n      output = m_baseLayer.renderer().worldToDisplay(world);\n    } else {\n      /// Everything else\n      throw \"Conversion method latLonToDisplay does not handle \" + input;\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from display to latitude longitude coordinates\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToGcs = function (input) {\n    var output;\n\n    /// Now handle different data types\n    if ((input instanceof Array && input.length > 0) ||\n         input instanceof Object) {\n      output = m_baseLayer.renderer().displayToWorld(input);\n      output = m_baseLayer.fromLocal(output);\n    } else {\n      throw \"Conversion method displayToGcs does not handle \" + input;\n    }\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Queries each layer for information at this location.\n   *\n   * @param location\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.query = function () {\n    // TODO Implement this\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Sets or gets base layer for this map\n   *\n   * @param {geo.layer} baseLayer optional\n   * @returns {geo.map|geo.layer}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.baseLayer = function (baseLayer) {\n    if (baseLayer !== undefined) {\n\n      // The GCS of the layer must match the map\n      if (m_gcs !== baseLayer.gcs()) {\n        m_this.gcs(baseLayer.gcs());\n      }\n\n      m_baseLayer = baseLayer;\n\n      // Set the layer as the reference layer\n      m_baseLayer.referenceLayer(true);\n\n      if (arg.center) {\n        // This assumes that the base layer is initially centered at\n        // (0, 0).  May want to add an explicit call to the base layer\n        // to set a given center.\n        m_this.center(arg.center);\n      }\n      if (arg.zoom !== undefined) {\n        m_zoom = null;\n        m_this.zoom(arg.zoom);\n      }\n\n      return m_this;\n    }\n    return m_baseLayer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Manually force to render map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n    var i, layers = m_this.children();\n\n    m_this.geoTrigger(geo.event.draw, {\n        type: geo.event.draw,\n        target: m_this\n      }\n    );\n\n    m_this._update();\n\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i].draw();\n    }\n\n    m_this.geoTrigger(geo.event.drawEnd, {\n        type: geo.event.drawEnd,\n        target: m_this\n      }\n    );\n\n    return m_this;\n  };\n\n  // TODO: Add documentation headers:\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.animate = function (layers) {\n    var animationRange;\n    layers = layers === undefined ? m_this.children() : layers;\n\n    if (m_animationState.timestep === null) {\n      animationRange = calculateGlobalAnimationRange(layers);\n\n      if (!animationRange.start || !animationRange.end) {\n        throw \"Animation range could not be calculated. \" +\n              \"Check that layers have ranges associated with them\";\n      }\n\n      m_animationState = {\n        range: animationRange,\n        timestep: cloneTimestep(animationRange.start),\n        \"layers\": layers\n      };\n    }\n\n    m_this._animate();\n    return m_this;\n  };\n\n  this.pauseAnimation = function () {\n    m_this.geoTrigger(geo.event.animationPause);\n    return m_this;\n  };\n\n  this.stopAnimation = function () {\n    m_this.geoTrigger(geo.event.animationStop);\n    m_animationState.timestep = null;\n    return m_this;\n  };\n\n  this.stepAnimationForward = function (layers) {\n    var animationRange;\n    layers = layers === undefined ? m_animationState.layers: layers;\n\n    if (layers === null) {\n      layers = m_this.children();\n    }\n\n    if (m_animationState.timestep === null) {\n      animationRange = calculateGlobalAnimationRange(layers);\n\n      m_animationState = {\n        range: animationRange,\n        timestep: cloneTimestep(animationRange.start),\n        \"layers\": layers\n      };\n    }\n\n    m_this._stepAnimationForward();\n    return m_this;\n  };\n\n  this.stepAnimationBackward = function (layers) {\n    var animationRange;\n    layers = layers === undefined ? m_animationState.layers: layers;\n\n    if (layers === null) {\n      layers = m_this.children();\n    }\n\n    if (m_animationState.timestep === null) {\n      animationRange = calculateGlobalAnimationRange(layers);\n\n      m_animationState = {\n        range: animationRange,\n        timestep: cloneTimestep(animationRange.end),\n        \"layers\": layers\n      };\n    }\n\n    m_this._stepAnimationBackward();\n    return m_this;\n  };\n\n  this._animate = function () {\n    var animationRange, nextTimestep, id;\n\n    animationRange = m_animationState.range;\n    nextTimestep = cloneTimestep(animationRange.start);\n    m_stop = false;\n    m_pause = false;\n\n    nextTimestep = geo.time.incrementTime(nextTimestep, animationRange.deltaUnits,\n      animationRange.delta);\n\n    if (nextTimestep > animationRange.end) {\n      throw \"Invalid time range\";\n    }\n\n    function renderTimestep() {\n      if (m_animationState.timestep > animationRange.end || m_stop) {\n        clearInterval(id);\n        m_animationState.timestep = null;\n        m_this.geoTrigger(geo.event.animationComplete);\n      }\n      else if (m_pause) {\n        clearInterval(id);\n      }\n      else {\n        m_this._animateTimestep();\n        m_animationState.timestep = geo.time.incrementTime(m_animationState.timestep,\n            m_animationState.range.deltaUnits, m_animationState.range.delta);\n      }\n\n    }\n\n    id = setInterval(renderTimestep, 10);\n    return m_this;\n  };\n\n  this._animateTimestep = function () {\n\n    if (m_animationState) {\n\n      $.each(m_animationState.layers, function (i, layer) {\n        var timestep = m_animationState.timestep;\n\n        if (timestep instanceof Date) {\n          timestep = timestep.getTime();\n        }\n\n        layer._update({timestep: timestep});\n      });\n\n      m_this.geoTrigger(\n        geo.event.animate, {\n        timestep: m_animationState.timestep\n      });\n      m_this.draw();\n    }\n\n    return m_this;\n  };\n\n  this._stepAnimationForward = function () {\n    var nextTimestep;\n\n    if (m_animationState.timestep === null) {\n      m_animationState.timestep = cloneTimestep(m_animationState.range.start);\n    }\n\n    nextTimestep = cloneTimestep(m_animationState.timestep);\n    nextTimestep = geo.time.incrementTime(nextTimestep, m_animationState.range.deltaUnits,\n        m_animationState.range.delta);\n\n    if (nextTimestep <= m_animationState.range.end) {\n      m_animationState.timestep = nextTimestep;\n      m_this._animateTimestep();\n    }\n\n    return m_this;\n  };\n\n  this._stepAnimationBackward = function () {\n    var previousTimestep;\n\n    if (m_animationState.timestep === null) {\n      m_animationState.timestep = cloneTimestep(m_animationState.range.end);\n    }\n\n    previousTimestep = cloneTimestep(m_animationState.timestep);\n    previousTimestep = geo.time.incrementTime(\n      previousTimestep,\n      m_animationState.range.deltaUnits,\n      -m_animationState.range.delta\n    );\n\n    if (previousTimestep < m_animationState.range.start) {\n      return;\n    }\n\n    m_animationState.timestep = previousTimestep;\n    m_this._animateTimestep();\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Attach a file reader to a layer in the map to be used as a drop target.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.fileReader = function (readerType, opts) {\n    var layer, renderer;\n    opts = opts || {};\n    if (!readerType) {\n      return m_fileReader;\n    }\n    layer = opts.layer;\n    if (!layer) {\n      renderer = opts.renderer;\n      if (!renderer) {\n        renderer = \"d3Renderer\";\n      }\n      layer = m_this.createLayer(\"feature\", {renderer: renderer});\n    }\n    opts.layer = layer;\n    opts.renderer = renderer;\n    m_fileReader = geo.createFileReader(readerType, opts);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize the map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    var i;\n\n    if (m_node === undefined || m_node === null) {\n      throw \"Map require DIV node\";\n    }\n\n    if (arg !== undefined && arg.layers !== undefined) {\n      for (i = 0; i < arg.layers.length; i += 1) {\n        if (i === 0) {\n          m_this.baseLayer(arg.layers[i]);\n        }\n\n        m_this.addLayer(arg.layers[i]);\n      }\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function (request) {\n    var i, layers = m_this.children();\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i]._update(request);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit this map\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    var i, layers = m_this.children();\n    for (i = 0; i < layers.length; i += 1) {\n      layers[i]._exit();\n    }\n    if (m_this.interactor()) {\n      m_this.interactor().destroy();\n      m_this.interactor(null);\n    }\n  };\n\n  this._init(arg);\n\n  // set up drag/drop handling\n  this.node().on(\"dragover\", function (e) {\n    var evt = e.originalEvent;\n\n    if (m_this.fileReader()) {\n      evt.stopPropagation();\n      evt.preventDefault();\n      evt.dataTransfer.dropEffect = \"copy\";\n    }\n  })\n  .on(\"drop\", function (e) {\n    var evt = e.originalEvent, reader = m_this.fileReader(),\n        i, file;\n\n    function done() {\n      m_this.draw();\n    }\n\n    if (reader) {\n      evt.stopPropagation();\n      evt.preventDefault();\n\n      for (i = 0; i < evt.dataTransfer.files.length; i += 1) {\n        file = evt.dataTransfer.files[i];\n        if (reader.canRead(file)) {\n          reader.read(file, done); // to do: trigger event on done\n        }\n      }\n    }\n  });\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the map interactor\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.interactor = function (arg) {\n    if (arg === undefined) {\n      return m_interactor;\n    }\n    m_interactor = arg;\n\n    // this makes it possible to set a null interactor\n    // i.e. map.interactor(null);\n    if (m_interactor) {\n      m_interactor.map(m_this);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get or set the min/max zoom range.\n   *\n   * @param {Object} arg {min: minimumzoom, max: maximumzom}\n   * @returns {Object|geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.zoomRange = function (arg) {\n    if (arg === undefined) {\n      return $.extend({}, m_validZoomRange);\n    }\n    m_validZoomRange.min = arg.min;\n    m_validZoomRange.max = arg.max;\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Start an animated zoom/pan.\n   *\n   * opts = {\n   *   center: { x: ... , y: ... } // the new center\n   *   zoom: ... // the new zoom level\n   *   duration: ... // the duration (in ms) of the transition\n   *   ease: ... // an easing function [0, 1] -> [0, 1]\n   * }\n   *\n   * @param {Object} opts\n   * @returns {geo.map}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.transition = function (opts) {\n    if (m_transition) {\n      console.log(\"Cannot start a transition until the\" +\n                  \" current transition is finished\");\n      return m_this;\n    }\n\n    function interp1(p0, p1, t) {\n      return p0 + (p1 - p0) * t;\n    }\n    function defaultInterp(p0, p1) {\n      return function (t) {\n        return [\n          interp1(p0[0], p1[0], t),\n          interp1(p0[1], p1[1], t),\n          interp1(p0[2], p1[2], t)\n        ];\n      };\n    }\n\n    // Transform zoom level into z-coordinate and inverse\n    function zoom2z(z) {\n      return 360 * Math.pow(2, -1 - z);\n    }\n    function z2zoom(z) {\n      return -1 - Math.log2(z / 360);\n    }\n\n    var defaultOpts = {\n      center: m_this.center(),\n      zoom: m_this.zoom(),\n      duration: 1000,\n      ease: function (t) {\n        return t;\n      },\n      interp: defaultInterp,\n      done: null,\n      zCoord: true\n    };\n\n    $.extend(defaultOpts, opts);\n\n    m_transition = {\n      start: {\n        center: m_this.center(),\n        zoom: m_this.zoom()\n      },\n      end: {\n        center: defaultOpts.center,\n        zoom: defaultOpts.zoom\n      },\n      ease: defaultOpts.ease,\n      zCoord: defaultOpts.zCoord,\n      done: defaultOpts.done\n    };\n\n    if (defaultOpts.zCoord) {\n      m_transition.interp = defaultOpts.interp(\n        [\n          m_transition.start.center.x,\n          m_transition.start.center.y,\n          zoom2z(m_transition.start.zoom)\n        ],\n        [\n          m_transition.end.center.x,\n          m_transition.end.center.y,\n          zoom2z(m_transition.end.zoom)\n        ]\n      );\n    } else {\n      m_transition.interp = defaultOpts.interp(\n        [\n          m_transition.start.center.x,\n          m_transition.start.center.y,\n          m_transition.start.zoom\n        ],\n        [\n          m_transition.end.center.x,\n          m_transition.end.center.y,\n          m_transition.end.zoom\n        ]\n      );\n    }\n\n    function anim(time) {\n      var done = m_transition.done;\n      if (!m_transition.start.time) {\n        m_transition.start.time = time;\n        m_transition.end.time = time + defaultOpts.duration;\n      }\n      if (time >= m_transition.end.time) {\n        m_this.center(m_transition.end.center);\n        m_this.zoom(m_transition.end.zoom);\n        m_transition = null;\n        if (done) {\n          done();\n        }\n        return;\n      }\n\n      var z = m_transition.ease(\n        (time - m_transition.start.time) / defaultOpts.duration\n      );\n\n      var p = m_transition.interp(z);\n      if (m_transition.zCoord) {\n        p[2] = z2zoom(p[2]);\n      }\n      m_this.center({\n        x: p[0],\n        y: p[1]\n      });\n      m_this.zoom(p[2]);\n\n      window.requestAnimationFrame(anim);\n    }\n\n    window.requestAnimationFrame(anim);\n    return m_this;\n  };\n\n  this.interactor(arg.interactor || geo.mapInteractor());\n\n  return this;\n};\n\ninherit(geo.map, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class feature\n *\n * @class\n * @returns {geo.feature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.feature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.feature)) {\n    return new geo.feature(arg);\n  }\n  geo.sceneObject.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  arg = arg || {};\n\n  var m_this = this,\n      m_selectionAPI = arg.selectionAPI === undefined ? false : arg.selectionAPI,\n      m_style = {},\n      m_layer = arg.layer === undefined ? null : arg.layer,\n      m_gcs = arg.gcs === undefined ? \"EPSG:4326\" : arg.gcs,\n      m_visible = arg.visible === undefined ? true : arg.visible,\n      m_bin = arg.bin === undefined ? 0 : arg.bin,\n      m_renderer = arg.renderer === undefined ? null : arg.renderer,\n      m_data = [],\n      m_dataTime = geo.timestamp(),\n      m_buildTime = geo.timestamp(),\n      m_updateTime = geo.timestamp(),\n      m_selectedFeatures = [];\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private method to bind mouse handlers on the map element.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._bindMouseHandlers = function () {\n\n    // Don't bind handlers for improved performance on features that don't\n    // require it.\n    if (!m_selectionAPI) {\n      return;\n    }\n\n    // First unbind to be sure that the handlers aren't bound twice.\n    m_this._unbindMouseHandlers();\n\n    m_this.geoOn(geo.event.mousemove, m_this._handleMousemove);\n    m_this.geoOn(geo.event.mouseclick, m_this._handleMouseclick);\n    m_this.geoOn(geo.event.brushend, m_this._handleBrushend);\n    m_this.geoOn(geo.event.brush, m_this._handleBrush);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private method to unbind mouse handlers on the map element.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._unbindMouseHandlers = function () {\n    m_this.geoOff(geo.event.mousemove, m_this._handleMousemove);\n    m_this.geoOff(geo.event.mouseclick, m_this._handleMouseclick);\n    m_this.geoOff(geo.event.brushend, m_this._handleBrushend);\n    m_this.geoOff(geo.event.brush, m_this._handleBrush);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * For binding mouse events, use functions with\n   * the following call signatures:\n   *\n   * function handler(arg) {\n   *   // arg.data - the data object of the feature\n   *   // arg.index - the index inside the data array of the featue\n   *   // arg.mouse - mouse information object (see src/core/mapInteractor.js)\n   * }\n   *\n   * i.e.\n   *\n   * feature.geoOn(geo.event.feature.mousemove, function (arg) {\n   *   // do something with the feature marker.\n   * });\n   */\n  ////////////////////////////////////////////////////////////////////////////\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Search for features containing the given point.\n   *\n   * Returns an object:\n   * {\n   *   data: [...] // an array of data objects for matching features\n   *   index: [...] // an array of indices of the matching features\n   * }\n   *\n   * @argument {Object} coordinate\n   * @returns {Object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pointSearch = function () {\n    // base class method does nothing\n    return {\n      index: [],\n      found: []\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private mousemove handler\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMousemove = function () {\n    var mouse = m_this.layer().map().interactor().mouse(),\n        data = m_this.data(),\n        over = m_this.pointSearch(mouse.geo),\n        newFeatures = [], oldFeatures = [];\n\n    // There are probably faster ways of doing this:\n    newFeatures = over.index.filter(function (i) {\n      return m_selectedFeatures.indexOf(i) < 0;\n    });\n    oldFeatures = m_selectedFeatures.filter(function (i) {\n      return over.index.indexOf(i) < 0;\n    });\n\n    // Fire events for mouse in first.\n    newFeatures.forEach(function (i) {\n      m_this.geoTrigger(geo.event.feature.mouseover, {\n        data: data[i],\n        index: i,\n        mouse: mouse\n      }, true);\n    });\n\n    // Fire events for mouse out next\n    oldFeatures.forEach(function (i) {\n      m_this.geoTrigger(geo.event.feature.mouseout, {\n        data: data[i],\n        index: i,\n        mouse: mouse\n      }, true);\n    });\n\n    // Fire events for mouse move last\n    over.index.forEach(function (i) {\n      m_this.geoTrigger(geo.event.feature.mousemove, {\n        data: data[i],\n        index: i,\n        mouse: mouse\n      }, true);\n    });\n\n    // Replace the selected features array\n    m_selectedFeatures = over.index;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private mouseclick handler\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleMouseclick = function () {\n    var mouse = m_this.layer().map().interactor().mouse(),\n        data = m_this.data(),\n        over = m_this.pointSearch(mouse.geo);\n\n    over.index.forEach(function (i) {\n      m_this.geoTrigger(geo.event.feature.mouseclick, {\n        data: data[i],\n        index: i,\n        mouse: mouse\n      }, true);\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private brush handler.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleBrush = function (brush) {\n    var idx = m_this.boxSearch(brush.gcs.lowerLeft, brush.gcs.upperRight),\n        data = m_this.data();\n\n    idx.forEach(function (i) {\n      m_this.geoTrigger(geo.event.feature.brush, {\n        data: data[i],\n        index: i,\n        mouse: brush.mouse,\n        brush: brush\n      }, true);\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private brushend handler.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._handleBrushend = function (brush) {\n    var idx = m_this.boxSearch(brush.gcs.lowerLeft, brush.gcs.upperRight),\n        data = m_this.data();\n\n    idx.forEach(function (i) {\n      m_this.geoTrigger(geo.event.feature.brushend, {\n        data: data[i],\n        index: i,\n        mouse: brush.mouse,\n        brush: brush\n      }, true);\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set style used by the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style = function (arg1, arg2) {\n    if (arg1 === undefined) {\n      return m_style;\n    }  else if (arg2 === undefined) {\n      m_style = $.extend({}, m_style, arg1);\n      m_this.modified();\n      return m_this;\n    } else {\n      m_style[arg1] = arg2;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * A uniform getter that always returns a function even for constant styles.\n   * Maybe extend later to support accessor-like objects.  If undefined input,\n   * return all the styles as an object.\n   *\n   * @param {string|undefined} key\n   * @return function () { ... }\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style.get = function (key) {\n    var tmp, out;\n    if (key === undefined) {\n      var all = {}, k;\n      for (k in m_style) {\n        if (m_style.hasOwnProperty(k)) {\n          all[k] = m_this.style.get(k);\n        }\n      }\n      return all;\n    }\n    out = geo.util.ensureFunction(m_style[key]);\n    if (key.toLowerCase().match(/color$/)) {\n      tmp = out;\n      out = function () {\n        return geo.util.convertColor(\n          tmp.apply(this, arguments)\n        );\n      };\n    }\n    return out;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get layer referenced by the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get renderer used by the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.renderer = function () {\n    return m_renderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get list of drawables or nodes that are context/api specific.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.drawables = function () {\n    return m_this._drawables();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set projection of the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcs = function (val) {\n    if (val === undefined) {\n      return m_gcs;\n    } else {\n      m_gcs = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set visibility of the feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.visible = function (val) {\n    if (val === undefined) {\n      return m_visible;\n    } else {\n      m_visible = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set bin of the feature\n   *\n   * Bin number is typically used for sorting the order of rendering\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.bin = function (val) {\n    if (val === undefined) {\n      return m_bin;\n    } else {\n      m_bin = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set timestamp of data change\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.dataTime = function (val) {\n    if (val === undefined) {\n      return m_dataTime;\n    } else {\n      m_dataTime = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set timestamp of last time build happened\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.buildTime = function (val) {\n    if (val === undefined) {\n      return m_buildTime;\n    } else {\n      m_buildTime = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set timestamp of last time update happened\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.updateTime = function (val) {\n    if (val === undefined) {\n      return m_updateTime;\n    } else {\n      m_updateTime = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set data\n   *\n   * @returns {Array}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function (data) {\n    if (data === undefined) {\n      return m_data;\n    } else {\n      m_data = data;\n      m_this.dataTime().modified();\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    if (!m_layer) {\n      throw \"Feature requires a valid layer\";\n    }\n    m_style = $.extend({},\n                {\"opacity\": 1.0}, arg.style === undefined ? {} :\n                arg.style);\n    m_this._bindMouseHandlers();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get context specific drawables\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._drawables = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   *\n   * Derived class should implement this\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this._unbindMouseHandlers();\n  };\n\n  this._init(arg);\n  return this;\n};\n\n\n////////////////////////////////////////////////////////////////////////////\n/**\n * This event object provides mouse/keyboard events that can be handled\n * by the features.  This provides a similar interface as core events,\n * but with different names so the events don't interfere.  Subclasses\n * can override this to provide custom events.\n */\n////////////////////////////////////////////////////////////////////////////\ngeo.event.feature = {\n  mousemove:  \"geo_feature_mousemove\",\n  mouseover:  \"geo_feature_mouseover\",\n  mouseout:   \"geo_feature_mouseout\",\n  mouseclick: \"geo_feature_mouseclick\",\n  brushend:   \"geo_feature_brushend\",\n  brush:      \"geo_feature_brush\"\n};\n\ninherit(geo.feature, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pointFeature\n *\n * @class\n * @returns {geo.pointFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.pointFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.pointFeature)) {\n    return new geo.pointFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_position = arg.position === undefined ? function (d) { return d; } : arg.position,\n      s_init = this._init,\n      m_rangeTree = null,\n      s_data = this.data,\n      s_style = this.style,\n      m_maxRadius = 0;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set position\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_position;\n    } else {\n      m_position = val;\n      m_this.dataTime().modified();\n      m_this._updateRangeTree();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update the current range tree object.  Should be called whenever the\n   * data changes.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._updateRangeTree = function () {\n    var pts, position,\n        radius = m_this.style.get(\"radius\"),\n        stroke = m_this.style.get(\"stroke\"),\n        strokeWidth = m_this.style.get(\"strokeWidth\");\n\n    position = m_this.position();\n\n    m_maxRadius = 0;\n\n    // create an array of positions in geo coordinates\n    pts = m_this.data().map(function (d, i) {\n      var pt = position(d);\n      pt.idx = i;\n\n      // store the maximum point radius\n      m_maxRadius = Math.max(\n        m_maxRadius,\n        radius(d, i) + (stroke(d, i) ? strokeWidth(d, i) : 0)\n      );\n\n      return pt;\n    });\n\n    m_rangeTree = new geo.util.RangeTree(pts);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns an array of datum indices that contain the given point.\n   * Largely adapted from wigglemaps pointQuerier:\n   *\n   * https://github.com/dotskapes/wigglemaps/blob/cf5bed3fbfe2c3e48d31799462a80c564be1fb60/src/query/PointQuerier.js\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.pointSearch = function (p) {\n    var min, max, data, idx = [], box, found = [], ifound = [], map, pt,\n        stroke = m_this.style.get(\"stroke\"),\n        strokeWidth = m_this.style.get(\"strokeWidth\"),\n        radius = m_this.style.get(\"radius\");\n\n    data = m_this.data();\n    if (!m_this.data || !m_this.data.length) {\n      return {\n        found: [],\n        index: []\n      };\n    }\n\n    map = m_this.layer().map();\n    pt = map.gcsToDisplay(p);\n\n    // Get the upper right corner in geo coordinates\n    min = map.displayToGcs({\n      x: pt.x - m_maxRadius,\n      y: pt.y + m_maxRadius   // GCS coordinates are bottom to top\n    });\n\n    // Get the lower left corner in geo coordinates\n    max = map.displayToGcs({\n      x: pt.x + m_maxRadius,\n      y: pt.y - m_maxRadius\n    });\n\n    // Find points inside the bounding box\n    box = new geo.util.Box(geo.util.vect(min.x, min.y), geo.util.vect(max.x, max.y));\n    m_rangeTree.search(box).forEach(function (q) {\n      idx.push(q.idx);\n    });\n\n    // Filter by circular region\n    idx.forEach(function (i) {\n      var d = data[i],\n          p = m_this.position()(d, i),\n          dx, dy, rad;\n\n      rad = radius(data[i], i);\n      rad += stroke(data[i], i) ? strokeWidth(data[i], i) : 0;\n      p = map.gcsToDisplay(p);\n      dx = p.x - pt.x;\n      dy = p.y - pt.y;\n      if (Math.sqrt(dx * dx + dy * dy) <= rad) {\n        found.push(d);\n        ifound.push(i);\n      }\n    });\n\n    return {\n      data: found,\n      index: ifound\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns an array of datum indices that are contained in the given box.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.boxSearch = function (lowerLeft, upperRight) {\n    var pos = m_this.position(),\n        idx = [];\n    // TODO: use the range tree\n    m_this.data().forEach(function (d, i) {\n      var p = pos(d);\n      if (p.x >= lowerLeft.x &&\n          p.x <= upperRight.x &&\n          p.y >= lowerLeft.y &&\n          p.y <= upperRight.y\n      ) {\n        idx.push(i);\n      }\n    });\n    return idx;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Overloaded data method that updates the internal range tree on write.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.data = function (data) {\n    if (data === undefined) {\n      return s_data();\n    }\n    s_data(data);\n    m_this._updateRangeTree();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Overloaded style method that updates the internal range tree on write.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style = function (arg1, arg2) {\n    if (arg1 === undefined) {\n      return s_style();\n    }\n    s_style(arg1, arg2);\n    m_this._updateRangeTree();\n    return m_this;\n  };\n  this.style.get = s_style.get;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns the bounding box for a given datum in screen coordinates as an\n   * object:\n   *\n   * {\n   *   min: {\n   *     x: value,\n   *     y: value\n   *   },\n   *   max: {\n   *     x: value,\n   *     y: value\n   *   }\n   * }\n   *\n   * @returns {object}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._boundingBox = function (d) {\n    var pt, radius;\n\n    // get the position in geo coordinates\n    pt = m_this.position()(d);\n\n    // convert to screen coordinates\n    pt = m_this.layer().map().gcsToDisplay(pt);\n\n    // get the radius of the points (should we add stroke width?)\n    radius = m_this.style().radius(d);\n\n    return {\n      min: {\n        x: pt.x - radius,\n        y: pt.y - radius\n      },\n      max: {\n        x: pt.x + radius,\n        y: pt.y + radius\n      }\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        radius: 10.0,\n        stroke: true,\n        strokeColor: { r: 0.0, g: 1.0, b: 0.0 },\n        strokeWidth: 2.0,\n        strokeOpacity: 1.0,\n        fillColor: { r: 1.0, g: 0.0, b: 0.0 },\n        fill: true,\n        fillOpacity: 1.0,\n        sprites: false,\n        sprites_image: null\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n\n    if (m_position) {\n      m_this.dataTime().modified();\n    }\n  };\n\n  return m_this;\n};\n\ngeo.event.pointFeature = $.extend({}, geo.event.feature);\n\ninherit(geo.pointFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lineFeature\n *\n * @class\n * @returns {geo.lineFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.lineFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.lineFeature)) {\n    return new geo.lineFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_position,\n      m_line,\n      s_init = this._init;\n\n  if (arg.line === undefined) {\n    m_line = function (d) {\n      return d;\n    };\n  } else {\n    m_line = arg.line;\n  }\n\n  if (arg.position === undefined) {\n    m_position = function (d) {\n      return d;\n    };\n  } else {\n    m_position = arg.position;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set line accessor\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.line = function (val) {\n    if (val === undefined) {\n      return m_line;\n    } else {\n      m_line = val;\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set position accessor\n   *\n   * @returns {geo.pointFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_position;\n    } else {\n      m_position = val;\n      m_this.dataTime().modified();\n      m_this.modified();\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        \"strokeWidth\": 1.0,\n        // Default to gold color for lines\n        \"strokeColor\": { r: 1.0, g: 0.8431372549, b: 0.0 },\n        \"strokeStyle\": \"solid\",\n        \"strokeOpacity\": 1.0\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n\n    if (m_position) {\n      m_this.dataTime().modified();\n    }\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.lineFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pathFeature\n *\n * @class\n * @returns {geo.pathFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.pathFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.pathFeature)) {\n    return new geo.pathFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_position = arg.position === undefined ? [] : arg.position,\n      s_init = this._init;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set positions\n   *\n   * @returns {geo.pathFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.position = function (val) {\n    if (val === undefined) {\n      return m_position;\n    }\n    // Copy incoming array of positions\n    m_position = val;\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(\n      {},\n      {\n        \"strokeWidth\": function () { return 1; },\n        \"strokeColor\": function () { return { r: 1.0, g: 1.0, b: 1.0 }; },\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n\n    if (m_position) {\n      m_this.dataTime().modified();\n    }\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.pathFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class polygonFeature\n *\n * @class\n * @returns {geo.polygonFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.polygonFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.polygonFeature)) {\n    return new geo.polygonFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  var m_this = this,\n      s_init = this._init;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    var defaultStyle = $.extend(\n      {},\n      {\n        \"color\": [1.0, 1.0, 1.0],\n        \"fill_color\": [1.0, 1.0, 1.0],\n        \"fill\": true\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n  };\n\n  m_this._init(arg);\n  return m_this;\n};\n\ninherit(geo.polygonFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class planeFeature\n *\n * @class\n * @returns {geo.planeFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.planeFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.planeFeature)) {\n    return new geo.planeFeature(arg);\n  }\n  arg = arg || {};\n\n  // Defaults\n  arg.ul = arg.ul === undefined ? [0.0, 1.0, 0.0] : arg.ul;\n  arg.lr = arg.lr === undefined ? [1.0, 0.0, 0.0] : arg.lr;\n  arg.depth = arg.depth === undefined ? 0.0 : arg.depth;\n\n  geo.polygonFeature.call(this, arg);\n\n  var m_this = this,\n      m_origin = [arg.ul.x, arg.lr.y, arg.depth],\n      m_upperLeft = [arg.ul.x, arg.ul.y, arg.depth],\n      m_lowerRight = [arg.lr.x, arg.lr.y, arg.depth],\n      m_defaultDepth = arg.depth,\n      m_drawOnAsyncResourceLoad = arg.drawOnAsyncResourceLoad === undefined ?\n                                    true : false,\n      s_init = this._init;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set origin\n   *\n   * @returns {geo.planeFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.origin = function (val) {\n    if (val === undefined) {\n      return m_origin;\n    } else if (val instanceof Array) {\n      if (val.length > 3 || val.length < 2) {\n        throw \"Upper left point requires point in 2 or 3 dimension\";\n      }\n      m_origin = val.slice(0);\n      if (m_origin.length === 2) {\n        m_origin[2] = m_defaultDepth;\n      }\n    } else if (val instanceof geo.latlng) {\n      m_origin = [val.x(), val.y(), m_defaultDepth];\n    }\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set pt1\n   *\n   * @returns {geo.planeFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.upperLeft = function (val) {\n    if (val === undefined) {\n      return m_upperLeft;\n    } else if (val instanceof Array) {\n      if (val.length > 3 || val.length < 2) {\n        throw \"Upper left point requires point in 2 or 3 dimension\";\n      }\n      m_upperLeft = val.slice(0);\n      if (m_upperLeft.length === 2) {\n        m_upperLeft[2] = m_defaultDepth;\n      }\n    } else if (val instanceof geo.latlng) {\n      m_upperLeft = [val.x(), val.y(), m_defaultDepth];\n    }\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set origin\n   *\n   * @returns {geo.planeFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.lowerRight = function (val) {\n    if (val === undefined) {\n      return m_lowerRight;\n    } else if (val instanceof Array) {\n      if (val.length > 3 || val.length < 2) {\n        throw \"Upper left point requires point in 2 or 3 dimension\";\n      }\n      m_lowerRight = val.slice(0);\n      if (m_lowerRight.length === 2) {\n        m_lowerRight[2] = m_defaultDepth;\n      }\n      m_this.dataTime().modified();\n    } else if (val instanceof geo.latlng) {\n      m_lowerRight = [val.x(), val.y(), m_defaultDepth];\n    }\n    m_this.dataTime().modified();\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set if draw should happen as soon as a async resource is loaded\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.drawOnAsyncResourceLoad = function (val) {\n    if (val === undefined) {\n      return m_drawOnAsyncResourceLoad;\n    } else {\n      m_drawOnAsyncResourceLoad = val;\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    var style = null;\n    s_init.call(m_this, arg);\n    style = m_this.style();\n    if (style.image === undefined) {\n      style.image = null;\n    }\n    m_this.style(style);\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.planeFeature, geo.polygonFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class geomFeature\n *\n * @class\n * @returns {geo.geomFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.geomFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof geo.geomFeature)) {\n    return new geo.geomFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  arg.style = arg.style === undefined ? $.extend({}, {\n    \"color\": [1.0, 1.0, 1.0],\n    \"point_sprites\": false,\n    \"point_sprites_image\": null\n  }, arg.style) : arg.style;\n\n  // Update style\n  this.style(arg.style);\n\n  return this;\n};\n\ninherit(geo.geomFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class graphFeature\n *\n * @class\n * @returns {geo.graphFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.graphFeature = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.graphFeature)) {\n    return new geo.graphFeature(arg);\n  }\n  arg = arg || {};\n  geo.feature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_draw = this.draw,\n      s_style = this.style,\n      m_nodes = null,\n      m_points = null,\n      m_children = function (d) { return d.children; },\n      m_links = [],\n      s_init = this._init,\n      s_exit = this._exit;\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n\n    var defaultStyle = $.extend(true, {},\n      {\n        nodes: {\n          radius: 5.0,\n          fill: true,\n          fillColor: { r: 1.0, g: 0.0, b: 0.0 },\n          strokeColor: { r: 0, g: 0, b: 0 }\n        },\n        links: {\n          strokeColor: { r: 0.0, g: 0.0, b: 0.0 }\n        },\n        linkType: \"path\" /* 'path' || 'line' */\n      },\n      arg.style === undefined ? {} : arg.style\n    );\n\n    m_this.style(defaultStyle);\n    m_this.nodes(function (d) { return d; });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Call child _build methods\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    m_this.children().forEach(function (child) {\n      child._build();\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Call child _update methods\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    m_this.children().forEach(function (child) {\n      child._update();\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Custom _exit method to remove all sub-features\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.data([]);\n    m_points._exit();\n    m_this.removeChild(m_points);\n    s_exit();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set style\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.style = function (arg) {\n    var out = s_style.call(m_this, arg);\n    if (out !== m_this) {\n      return out;\n    }\n    // set styles for sub-features\n    m_points.style(arg.nodes);\n    m_links.forEach(function (l) {\n      l.style(arg.links);\n    });\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set links accessor.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.links = function (arg) {\n    if (arg === undefined) {\n      return m_children;\n    }\n\n    m_children = geo.util.ensureFunction(arg);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set nodes\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.nodes = function (val) {\n    if (val === undefined) {\n      return m_nodes;\n    }\n    m_nodes = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get internal node feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.nodeFeature = function () {\n    return m_points;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get internal link features\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.linkFeatures = function () {\n    return m_links;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build the feature for drawing\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n\n    var layer = m_this.layer(),\n        data = m_this.data(),\n        nLinks = 0,\n        style;\n\n    // get the feature style object\n    style = m_this.style();\n\n    // Bind data to the point nodes\n    m_points.data(data);\n    m_points.style(style.nodes);\n\n    // get links from node connections\n    data.forEach(function (source) {\n      (source.children || []).forEach(function (target) {\n        var link;\n        nLinks += 1;\n        if (m_links.length < nLinks) {\n          link = geo.createFeature(\n            style.linkType, layer, layer.renderer()\n          ).style(style.links);\n          m_this.addChild(link);\n          m_links.push(link);\n        }\n        m_links[nLinks - 1].data([source, target]);\n      });\n    });\n\n    m_links.splice(nLinks, m_links.length - nLinks).forEach(function (l) {\n      l._exit();\n      m_this.removeChild(l);\n    });\n\n    s_draw();\n    return m_this;\n  };\n\n  m_points = geo.createFeature(\n    \"point\",\n    this.layer(),\n    this.layer().renderer()\n  );\n  m_this.addChild(m_points);\n\n  if (arg.nodes) {\n    this.nodes(arg.nodes);\n  }\n\n  this._init(arg);\n  return this;\n};\n\ninherit(geo.graphFeature, geo.feature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform geometric data of a feature from source projection to destination\n * projection.\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform = {};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Custom transform for a feature used for OpenStreetMap\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.osmTransformFeature = function (destGcs, feature, inplace) {\n  /// TODO\n  /// Currently we make assumption that incoming feature is in 4326\n  /// which may not be true.\n\n  \"use strict\";\n\n  if (!feature) {\n    console.log(\"[warning] Invalid (null) feature\");\n    return;\n  }\n\n  if (feature.gcs() === destGcs) {\n    return;\n  }\n\n  if (!(feature instanceof geo.pointFeature ||\n        feature instanceof geo.lineFeature)) {\n    throw \"Supports only point or line feature\";\n  }\n\n  var noOfComponents = null,\n      pointOffset = 0,\n      count = null,\n      inPos = null,\n      outPos = null,\n      srcGcs = feature.gcs(),\n      i,\n      yCoord;\n\n  inplace = !!inplace;\n  if (feature instanceof geo.pointFeature ||\n      feature instanceof geo.lineFeature) {\n\n    ///  If source GCS is not in 4326, transform it first into 4326\n    /// before we transform it for OSM.\n    if (srcGcs !== \"EPSG:4326\") {\n      geo.transform.transformFeature(\"EPSG:4326\", feature, true);\n    }\n\n    inPos = feature.positions();\n    count = inPos.length;\n\n    if (!(inPos instanceof Array)) {\n      throw \"Supports Array of 2D and 3D points\";\n    }\n\n    if (inPos.length > 0 && inPos[0] instanceof geo.latlng) {\n      noOfComponents = 2;\n      pointOffset = 1;\n    } else {\n      noOfComponents = (count % 2 === 0 ? 2 :\n                       (count % 3 === 0 ? 3 : null));\n      pointOffset = noOfComponents;\n    }\n\n    if (noOfComponents !== 2 && noOfComponents !== 3) {\n      throw \"Transform points require points in 2D or 3D\";\n    }\n\n    if (inplace) {\n      outPos = inPos;\n    } else {\n      outPos = inPos.slice(0);\n    }\n\n    for (i = 0; i < count; i += pointOffset) {\n\n      /// Y goes from 0 (top edge is 85.0511 °N) to 2zoom − 1\n      /// (bottom edge is 85.0511 °S) in a Mercator projection.\n      if (inPos[i] instanceof geo.latlng) {\n        yCoord = inPos[i].lat();\n      } else {\n        yCoord = inPos[i + 1];\n      }\n\n      if (yCoord > 85.0511) {\n        yCoord = 85.0511;\n      }\n      if (yCoord < -85.0511) {\n        yCoord = -85.0511;\n      }\n      if (inPos[i] instanceof geo.latlng) {\n        outPos[i] = geo.latlng(geo.mercator.lat2y(yCoord), outPos[i].lng());\n      } else {\n        outPos[i + 1] = geo.mercator.lat2y(yCoord);\n      }\n    }\n\n    if (inplace) {\n      feature.positions(outPos);\n      feature.gcs(destGcs);\n    }\n    return outPos;\n  }\n\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform a feature to destination GCS\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.transformFeature = function (destGcs, feature, inplace) {\n  \"use strict\";\n\n  if (!feature) {\n    throw \"Invalid (null) feature\";\n  }\n\n  if (!(feature instanceof geo.pointFeature ||\n        feature instanceof geo.lineFeature)) {\n    throw \"Supports only point or line feature\";\n  }\n\n  if (feature.gcs() === destGcs) {\n    return feature.positions();\n  }\n\n  if (destGcs === \"EPSG:3857\") {\n    return geo.transform.osmTransformFeature(destGcs, feature, inplace);\n  }\n\n  var noOfComponents = null,\n      pointOffset = 0,\n      count = null,\n      inPos = null,\n      outPos = null,\n      projPoint = null,\n      srcGcs = feature.gcs(),\n      i,\n      projSrcGcs = new proj4.Proj(srcGcs),\n      projDestGcs = new proj4.Proj(destGcs);\n\n  inplace = !!inplace;\n  if (feature instanceof geo.pointFeature ||\n      feature instanceof geo.lineFeature) {\n    inPos = feature.positions();\n    count = inPos.length;\n\n    if (!(inPos instanceof Array)) {\n      throw \"Supports Array of 2D and 3D points\";\n    }\n\n    if (inPos.length > 0 && inPos[0] instanceof geo.latlng) {\n      noOfComponents = 2;\n      pointOffset = 1;\n    } else {\n      noOfComponents = (count % 2 === 0 ? 2 :\n                       (count % 3 === 0 ? 3 : null));\n      pointOffset = noOfComponents;\n    }\n\n    if (noOfComponents !== 2 && noOfComponents !== 3) {\n      throw \"Transform points require points in 2D or 3D\";\n    }\n\n    if (inplace) {\n      outPos = inPos;\n    } else {\n      outPos = [];\n      outPos.length = inPos.length;\n    }\n\n    for (i = 0; i < count; i += pointOffset) {\n      if (noOfComponents === 2) {\n        projPoint = new proj4.Point(inPos[i], inPos[i + 1], 0.0);\n      } else {\n        projPoint = new proj4.Point(inPos[i], inPos[i + 1], inPos[i + 2]);\n      }\n\n      proj4.transform(projSrcGcs, projDestGcs, projPoint);\n\n      if (noOfComponents === 2) {\n        outPos[i] =  projPoint.x;\n        outPos[i + 1] = projPoint.y;\n      } else {\n        outPos[i] = projPoint.x;\n        outPos[i + 1] = projPoint.y;\n        outPos[i + 2] = projPoint.z;\n      }\n    }\n\n    if (inplace) {\n      feature.positions(outPos);\n      feature.gcs(destGcs);\n    }\n\n    return outPos;\n  }\n\n  return null;\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform geometric data of a layer from source projection to destination\n * projection.\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.transformLayer = function (destGcs, layer, baseLayer) {\n  \"use strict\";\n\n  var features, count, i;\n\n  if (!layer) {\n    throw \"Requires valid layer for tranformation\";\n  }\n\n  if (!baseLayer) {\n    throw \"Requires baseLayer used by the map\";\n  }\n\n  if (layer === baseLayer) {\n    return;\n  }\n\n  if (layer instanceof geo.featureLayer) {\n    features = layer.features();\n    count = features.length;\n    i = 0;\n\n    for (i = 0; i < count; i += 1) {\n      if (destGcs === \"EPSG:3857\" && baseLayer instanceof geo.osmLayer) {\n        geo.transform.osmTransformFeature(\n          destGcs, features[i], true);\n      } else {\n        geo.transform.transformFeature(\n          destGcs, features[i], true);\n      }\n    }\n\n    layer.gcs(destGcs);\n  } else {\n    throw \"Only feature layer transformation is supported\";\n  }\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Transform position coordinates from source projection to destination\n * projection.\n *\n * @param srcGcs GCS of the coordinates\n * @param destGcs Desired GCS of the transformed coordinates\n * @param coordinates\n * @return {Array | geo.latlng} Transformed coordinates\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.transform.transformCoordinates = function (srcGcs, destGcs, coordinates,\n                                               numberOfComponents) {\n  \"use strict\";\n\n  var i, count, offset, xCoord, yCoord, zCoord, xAcc,\n      yAcc, zAcc, writer, output, projPoint,\n      projSrcGcs = new proj4.Proj(srcGcs),\n      projDestGcs = new proj4.Proj(destGcs);\n\n  /// Default Z accessor\n  zAcc = function () {\n    return 0.0;\n  };\n\n  if (destGcs === srcGcs) {\n    return coordinates;\n  }\n\n  /// TODO: Can we check for EPSG code?\n  if (!destGcs || !srcGcs) {\n    throw \"Invalid source or destination GCS\";\n  }\n\n  /// Helper methods\n  function handleLatLngCoordinates() {\n    if (coordinates[0] && coordinates[0] instanceof geo.latlng) {\n      xAcc = function (index) {\n        return coordinates[index].x();\n      };\n      yAcc = function (index) {\n        return coordinates[index].y();\n      };\n      writer = function (index, x, y) {\n        output[index] = geo.latlng(y, x);\n      };\n    } else {\n      xAcc = function () {\n        return coordinates.x();\n      };\n      yAcc = function () {\n        return coordinates.y();\n      };\n      writer = function (index, x, y) {\n        output = geo.latlng(y, x);\n      };\n    }\n  }\n\n  /// Helper methods\n  function handleArrayCoordinates() {\n    if (coordinates[0] instanceof Array) {\n      if (coordinates[0].length === 2) {\n        xAcc = function (index) {\n          return coordinates[index][0];\n        };\n        yAcc = function (index) {\n          return coordinates[index][1];\n        };\n        writer = function (index, x, y) {\n          output[index] = [x, y];\n        };\n      } else if (coordinates[0].length === 3) {\n        xAcc = function (index) {\n          return coordinates[index][0];\n        };\n        yAcc = function (index) {\n          return coordinates[index][1];\n        };\n        zAcc = function (index) {\n          return coordinates[index][2];\n        };\n        writer = function (index, x, y, z) {\n          output[index] = [x, y, z];\n        };\n      } else {\n        throw \"Invalid coordinates. Requires two or three components per array\";\n      }\n    } else {\n      if (coordinates.length === 2) {\n        offset = 2;\n\n        xAcc = function (index) {\n          return coordinates[index * offset];\n        };\n        yAcc = function (index) {\n          return coordinates[index * offset + 1];\n        };\n        writer = function (index, x, y) {\n          output[index] = x;\n          output[index + 1] = y;\n        };\n      } else if (coordinates.length === 3) {\n        offset = 3;\n\n        xAcc = function (index) {\n          return coordinates[index * offset];\n        };\n        yAcc = function (index) {\n          return coordinates[index * offset + 1];\n        };\n        zAcc = function (index) {\n          return coordinates[index * offset + 2];\n        };\n        writer = function (index, x, y, z) {\n          output[index] = x;\n          output[index + 1] = y;\n          output[index + 2] = z;\n        };\n      } else if (numberOfComponents) {\n        if (numberOfComponents === 2 || numberOfComponents || 3) {\n          offset = numberOfComponents;\n\n          xAcc = function (index) {\n            return coordinates[index];\n          };\n          yAcc = function (index) {\n            return coordinates[index + 1];\n          };\n          if (numberOfComponents === 2) {\n            writer = function (index, x, y) {\n              output[index] = x;\n              output[index + 1] = y;\n            };\n          } else {\n            zAcc = function (index) {\n              return coordinates[index + 2];\n            };\n            writer = function (index, x, y, z) {\n              output[index] = x;\n              output[index + 1] = y;\n              output[index + 2] = z;\n            };\n          }\n        } else {\n          throw \"Number of components should be two or three\";\n        }\n      } else {\n        throw \"Invalid coordinates\";\n      }\n    }\n  }\n\n  /// Helper methods\n  function handleObjectCoordinates() {\n    if (coordinates[0] &&\n        \"x\" in coordinates[0] &&\n        \"y\" in coordinates[0]) {\n      xAcc = function (index) {\n        return coordinates[index].x;\n      };\n      yAcc = function (index) {\n        return coordinates[index].y;\n      };\n\n      if (\"z\" in coordinates[0]) {\n        zAcc = function (index) {\n          return coordinates[index].z;\n        };\n        writer = function (index, x, y, z) {\n          output[i] = {x: x, y: y, z: z};\n        };\n      } else {\n        writer = function (index, x, y) {\n          output[index] = {x: x, y: y};\n        };\n      }\n    } else if (coordinates &&\n        \"x\" in coordinates && \"y\" in coordinates) {\n      xAcc = function () {\n        return coordinates.x;\n      };\n      yAcc = function () {\n        return coordinates.y;\n      };\n\n      if (\"z\" in coordinates) {\n        zAcc = function () {\n          return coordinates.z;\n        };\n        writer = function (index, x, y, z) {\n          output = {x: x, y: y, z: z};\n        };\n      } else {\n        writer = function (index, x, y) {\n          output = {x: x, y: y};\n        };\n      }\n    } else {\n      throw \"Invalid coordinates\";\n    }\n  }\n\n  if (coordinates instanceof Array) {\n    output = [];\n    output.length = coordinates.length;\n    count = coordinates.length;\n\n    if (coordinates[0] instanceof Array ||\n        coordinates[0] instanceof geo.latlng ||\n        coordinates[0] instanceof Object) {\n      offset = 1;\n\n      if (coordinates[0] instanceof Array) {\n        handleArrayCoordinates();\n      } else if (coordinates[0] instanceof geo.latlng) {\n        handleLatLngCoordinates();\n      } else if (coordinates[0] instanceof Object) {\n        handleObjectCoordinates();\n      }\n    } else {\n      handleArrayCoordinates();\n    }\n  } else if (coordinates && coordinates instanceof Object) {\n    count = 1;\n    offset = 1;\n    if (coordinates instanceof geo.latlng) {\n      handleLatLngCoordinates();\n    } else if (coordinates && \"x\" in coordinates && \"y\" in coordinates) {\n      handleObjectCoordinates();\n    } else {\n      throw \"Coordinates are not valid\";\n    }\n  }\n\n  if (destGcs === \"EPSG:3857\" && srcGcs === \"EPSG:4326\") {\n    for (i = 0; i < count; i += offset) {\n      /// Y goes from 0 (top edge is 85.0511 °N) to 2zoom − 1\n      /// (bottom edge is 85.0511 °S) in a Mercator projection.\n      xCoord = xAcc(i);\n      yCoord = yAcc(i);\n      zCoord = zAcc(i);\n\n      if (yCoord > 85.0511) {\n        yCoord = 85.0511;\n      }\n      if (yCoord < -85.0511) {\n        yCoord = -85.0511;\n      }\n\n      writer(i, xCoord, geo.mercator.lat2y(yCoord), zCoord);\n    }\n\n    return output;\n  } else {\n    for (i = 0; i < count; i += offset) {\n      projPoint = new proj4.Point(xAcc(i), yAcc(i), zAcc(i));\n      proj4.transform(projSrcGcs, projDestGcs, projPoint);\n      writer(i, projPoint.x, projPoint.y, projPoint.z);\n      return output;\n    }\n  }\n};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class renderer\n *\n * @param canvas\n * @returns {geo.renderer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.renderer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.renderer)) {\n    return new geo.renderer(arg);\n  }\n  geo.object.call(this);\n\n  arg = arg || {};\n  var m_this = this,\n      m_layer = arg.layer === undefined ? null : arg.layer,\n      m_canvas = arg.canvas === undefined ? null : arg.canvas,\n      m_initialized = false;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get layer of the renderer\n   *\n   * @returns {*}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.layer = function () {\n    return m_layer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get canvas for the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.canvas = function (val) {\n    if (val === undefined) {\n      return m_canvas;\n    } else {\n      m_canvas = val;\n      m_this.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get map that this renderer belongs to\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.map = function () {\n    if (m_layer) {\n      return m_layer.map();\n    } else {\n      return null;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get base layer that belongs to this renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.baseLayer = function () {\n    if (m_this.map()) {\n      return m_this.map().baseLayer();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set if renderer has been initialized\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.initialized = function (val) {\n    if (val === undefined) {\n      return m_initialized;\n    } else {\n      m_initialized = val;\n      return m_this;\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get render API used by the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.api = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Reset to default\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.reset = function () {\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from world to GCS coordinate space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToGcs = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from display to GCS space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToGcs = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from display to GCS space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.gcsToDisplay = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from world to display space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert array of points from display to world space\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function () {\n    throw \"Should be implemented by derivied classes\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get mouse coodinates related to canvas\n   *\n   * @param event\n   * @returns {{x: number, y: number}}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.relMouseCoords = function (event) {\n    var totalOffsetX = 0,\n        totalOffsetY = 0,\n        canvasX = 0,\n        canvasY = 0,\n        currentElement = m_this.canvas();\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n      currentElement = currentElement.offsetParent;\n    } while (currentElement);\n\n    canvasX = event.pageX - totalOffsetX;\n    canvasY = event.pageY - totalOffsetY;\n\n    return {\n      x: canvasX,\n      y: canvasY\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._render = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Connect mouse events to the map layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._connectMouseEvents = function () {\n\n  };\n\n  return this;\n};\n\ninherit(geo.renderer, geo.object);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of osmLayer\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.osmLayer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof geo.osmLayer)) {\n    return new geo.osmLayer(arg);\n  }\n  geo.featureLayer.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Private member variables\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n    m_tiles = {},\n    m_hiddenBinNumber = 0,\n    m_lastVisibleBinNumber = 999,\n    m_visibleBinNumber = 1000,\n    m_pendingNewTiles = [],\n    m_pendingInactiveTiles = [],\n    m_numberOfCachedTiles = 0,\n    m_tileCacheSize = 100,\n    m_baseUrl = \"http://tile.openstreetmap.org/\",\n    m_imageFormat = \"png\",\n    m_updateTimerId = null,\n    m_lastVisibleZoom = null,\n    m_visibleTilesRange = {},\n    s_init = this._init,\n    m_pendingNewTilesStat = {},\n    s_update = this._update,\n    m_updateDefer = null,\n    m_zoomLevelDelta = 2.5,\n    m_tileUrl;\n\n  if (arg && arg.baseUrl !== undefined) {\n    m_baseUrl = arg.baseUrl;\n  }\n\n  if (arg && arg.zoomDelta !== undefined) {\n    m_zoomLevelDelta = arg.zoomDelta;\n  }\n\n  if (arg && arg.imageFormat !== undefined) {\n    m_imageFormat = arg.imageFormat;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Returns a url string containing the requested tile.  This default\n   * version uses the open street map standard, but the user can\n   * change the default behavior.\n   *\n   * @param {integer} zoom The zoom level\n   * @param {integer} x The tile from the xth row\n   * @param {integer} y The tile from the yth column\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  m_tileUrl = function (zoom, x, y) {\n    return m_baseUrl + zoom + \"/\" + x +\n      \"/\" + y + \".\" + m_imageFormat;\n  };\n\n  if (arg && arg.tileUrl !== undefined) {\n    m_tileUrl = arg.tileUrl;\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return zoom to be used for fetching the tiles\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function getModifiedMapZoom() {\n    return Math.floor(m_this.map().zoom() + m_zoomLevelDelta);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if a tile is visible in current view\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function isTileVisible(tile) {\n    if (tile.zoom in m_visibleTilesRange) {\n      if (tile.index_x >= m_visibleTilesRange[tile.zoom].startX &&\n          tile.index_x <= m_visibleTilesRange[tile.zoom].endX &&\n          tile.index_y >= m_visibleTilesRange[tile.zoom].startY &&\n          tile.index_y <= m_visibleTilesRange[tile.zoom].endY) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Draw new tiles and remove the old ones\n   *\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function drawTiles() {\n    m_this._removeTiles();\n    m_this.draw();\n    delete m_pendingNewTilesStat[m_updateTimerId];\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set tile cache size\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.tileCacheSize = function (val) {\n    if (val === undefined) {\n      return m_tileCacheSize;\n    }\n    m_tileCacheSize = val;\n    m_this.modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set the tile url formatting function.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.tileUrl = function (val) {\n    if (val === undefined) {\n      return m_tileUrl;\n    }\n    m_tileUrl = val;\n    m_this.modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in latitude-longitude-altitude\n   * space to local space of the layer\n   *\n   * @param input Input can be of following types:\n   * geo.latlng, [geo.latlng], [x1,y1, x2, y2], [[x,y]], {x:val: y:val, z:val},\n   * [{x:val: y:val}]\n   *\n   * @returns geo.latlng, [geo.latlng], or {x:lon, y:lat}, [{x:lon, y:lat}]\n   * [x1,y1, x2, y2], [[x,y]]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.toLocal = function (input) {\n    var i, output, delta;\n\n    /// Now handle different data types\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n      output.length = input.length;\n\n      /// Input is array of geo.latlng\n      if (input[0] instanceof geo.latlng) {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = geo.latlng(input[i]);\n          output[i].lat(geo.mercator.lat2y(output[i].lat()));\n        }\n      } else if (input[0] instanceof Array) {\n        delta = input % 3 === 0 ? 3 : 2;\n\n        if (delta === 2) {\n          for (i = 0; i < input.length; i += delta) {\n            output[i] = input[i];\n            output[i + 1] = geo.mercator.lat2y(input[i + 1]);\n          }\n        } else {\n          for (i = 0; i < input.length; i += delta) {\n            output[i] = input[i];\n            output[i + 1] = geo.mercator.lat2y(input[i + 1]);\n            output[i + 2] = input[i + 2];\n          }\n        }\n      } else if (input[0] instanceof Object &&\n                 \"x\" in input[0] && \"y\" in input[0] && \"z\" in input[0]) {\n        /// Input is array of object\n        output[i] = { x: input[i].x, y: geo.mercator.lat2y(input[i].y),\n                      z: input[i].z };\n      } else if (input[0] instanceof Object &&\n                 \"x\" in input[0] && \"y\" in input[0] && \"z\" in input[0]) {\n        /// Input is array of object\n        output[i] = { x: input[i].x, y: geo.mercator.lat2y(input[i].y)};\n      } else if (input.length >= 2) {\n        output = input.slice(0);\n        output[1] = geo.mercator.lat2y(input[1]);\n      }\n    } else if (input instanceof geo.latlng) {\n      output = {};\n      output.x = input.x();\n      output.y = geo.mercator.lat2y(input.y());\n    } else {\n      output = {};\n      output.x = input.x;\n      output.y = geo.mercator.lat2y(input.y);\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Transform a point or array of points in local space to\n   * latitude-longitude space\n   *\n   * @input Input An object, array, of array of objects/array representing 2D\n   * point in space. [x,y], [[x,y]], [{x:val: y:val}], {x:val, y:val}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.fromLocal = function (input) {\n    var i, output;\n\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n      output.length = input.length;\n\n      if (input[0] instanceof Object) {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = {};\n          output[i].x = input[i].x;\n          output[i].y = geo.mercator.y2lat(input[i].y);\n        }\n      } else if (input[0] instanceof Array) {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = input[i];\n          output[i][1] = geo.mercator.y2lat(input[i][1]);\n        }\n      } else {\n        for (i = 0; i < input.length; i += 1) {\n          output[i] = input[i];\n          output[i + 1] = geo.mercator.y2lat(input[i + 1]);\n        }\n      }\n    }\n    else {\n      output = {};\n      output.x = input.x;\n      output.y = geo.mercator.y2lat(input.y);\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Check if a tile exists in the cache\n   *\n   * @param zoom {number} The zoom value for the map [1-17]\n   * @param x {number} X axis tile index\n   * @param y {number} Y axis tile index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._hasTile = function (zoom, x, y) {\n    if (!m_tiles[zoom]) {\n      return false;\n    }\n    if (!m_tiles[zoom][x]) {\n      return false;\n    }\n    if (!m_tiles[zoom][x][y]) {\n      return false;\n    }\n    return true;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a new tile\n   * @param x {number} X axis tile index\n   * @param y {number} Y axis tile index\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._addTile = function (request, zoom, x, y) {\n    if (!m_tiles[zoom]) {\n      m_tiles[zoom] = {};\n    }\n    if (!m_tiles[zoom][x]) {\n      m_tiles[zoom][x] = {};\n    }\n    if (m_tiles[zoom][x][y]) {\n      return;\n    }\n\n    /// Compute corner points\n    var noOfTilesX = Math.max(1, Math.pow(2, zoom)),\n        noOfTilesY = Math.max(1, Math.pow(2, zoom)),\n        /// Convert into mercator\n        totalLatDegrees = 360.0,\n        lonPerTile = 360.0 / noOfTilesX,\n        latPerTile = totalLatDegrees / noOfTilesY,\n        llx = -180.0 + x * lonPerTile,\n        lly = -totalLatDegrees * 0.5 + y * latPerTile,\n        urx = -180.0 + (x + 1) * lonPerTile,\n        ury = -totalLatDegrees * 0.5 + (y + 1) * latPerTile,\n        tile = new Image();\n\n    tile.LOADING = true;\n    tile.LOADED = false;\n    tile.REMOVED = false;\n    tile.REMOVING = false;\n\n    tile.crossOrigin = \"anonymous\";\n    tile.zoom = zoom;\n    tile.index_x = x;\n    tile.index_y = y;\n    tile.llx = llx;\n    tile.lly = lly;\n    tile.urx = urx;\n    tile.ury = ury;\n    tile.lastused = new Date();\n\n    tile.src = m_tileUrl(zoom, x, Math.pow(2, zoom) - 1 - y);\n\n    m_tiles[zoom][x][y] = tile;\n    m_pendingNewTiles.push(tile);\n    m_numberOfCachedTiles += 1;\n    return tile;\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Clear tiles that are no longer required\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  /* jshint -W089 */\n  this._removeTiles = function () {\n    var i, x, y, tile, zoom, currZoom = getModifiedMapZoom(),\n        lastZoom = m_lastVisibleZoom;\n\n    if (!m_tiles) {\n      return m_this;\n    }\n\n    for (zoom in m_tiles) {\n      for (x in m_tiles[zoom]) {\n        for (y in m_tiles[zoom][x]) {\n          tile = m_tiles[zoom][x][y];\n          if (tile) {\n            tile.REMOVING = true;\n            m_pendingInactiveTiles.push(tile);\n          }\n        }\n      }\n    }\n\n    /// First remove the tiles if we have cached more than max cached limit\n    m_pendingInactiveTiles.sort(function (a, b) {\n      return a.lastused - b.lastused;\n    });\n\n    i = 0;\n\n    /// Get rid of tiles if we have reached our threshold. However,\n    /// If the tile is required for current zoom, then do nothing.\n    /// Also don\"t delete the tile if its from the previous zoom\n    while (m_numberOfCachedTiles > m_tileCacheSize &&\n      i < m_pendingInactiveTiles.length) {\n      tile = m_pendingInactiveTiles[i];\n\n      if (isTileVisible(tile)) {\n        i += 1;\n        continue;\n      }\n      m_this.deleteFeature(tile.feature);\n      delete m_tiles[tile.zoom][tile.index_x][tile.index_y];\n      m_pendingInactiveTiles.splice(i, 1);\n      m_numberOfCachedTiles -= 1;\n    }\n\n    for (i = 0; i < m_pendingInactiveTiles.length; i += 1) {\n      tile = m_pendingInactiveTiles[i];\n      tile.REMOVING = false;\n      tile.REMOVED = false;\n      if (tile.zoom !== currZoom && tile.zoom === lastZoom) {\n        tile.feature.bin(m_lastVisibleBinNumber);\n      } else if (tile.zoom !== currZoom) {\n        tile.feature.bin(m_hiddenBinNumber);\n      } else {\n        tile.lastused = new Date();\n        tile.feature.bin(m_visibleBinNumber);\n      }\n      tile.feature._update();\n    }\n    m_pendingInactiveTiles = [];\n\n    return m_this;\n  };\n  /* jshint +W089 */\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create / delete tiles as necessary\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._addTiles = function (request) {\n    var feature, ren = m_this.renderer(),\n        zoom = getModifiedMapZoom(),\n        /// First get corner points\n        /// In display coordinates the origin is on top left corner (0, 0)\n        llx = 0.0, lly = m_this.height(), urx = m_this.width(), ury = 0.0,\n        temp = null, tile = null, tile1x = null, tile1y = null, tile2x = null,\n        tile2y = null, invJ = null, i = 0, j = 0, lastStartX, lastStartY,\n        lastEndX, lastEndY, currStartX, currStartY, currEndX, currEndY,\n        worldPt1 = ren.displayToWorld([llx, lly]),\n        worldPt2 = ren.displayToWorld([urx, ury]);\n\n    worldPt1[0] = Math.max(worldPt1[0], -180.0);\n    worldPt1[0] = Math.min(worldPt1[0],  180.0);\n    worldPt1[1] = Math.max(worldPt1[1], -180.0);\n    worldPt1[1] = Math.min(worldPt1[1],  180.0);\n\n    worldPt2[0] = Math.max(worldPt2[0], -180.0);\n    worldPt2[0] = Math.min(worldPt2[0],  180.0);\n    worldPt2[1] = Math.max(worldPt2[1], -180.0);\n    worldPt2[1] = Math.min(worldPt2[1],  180.0);\n\n    /// Compute tilex and tiley\n    tile1x = geo.mercator.long2tilex(worldPt1[0], zoom);\n    tile1y = geo.mercator.lat2tiley(worldPt1[1], zoom);\n\n    tile2x = geo.mercator.long2tilex(worldPt2[0], zoom);\n    tile2y = geo.mercator.lat2tiley(worldPt2[1], zoom);\n\n    /// Clamp tilex and tiley\n    tile1x = Math.max(tile1x, 0);\n    tile1x = Math.min(Math.pow(2, zoom) - 1, tile1x);\n    tile1y = Math.max(tile1y, 0);\n    tile1y = Math.min(Math.pow(2, zoom) - 1, tile1y);\n\n    tile2x = Math.max(tile2x, 0);\n    tile2x = Math.min(Math.pow(2, zoom) - 1, tile2x);\n    tile2y = Math.max(tile2y, 0);\n    tile2y = Math.min(Math.pow(2, zoom) - 1, tile2y);\n\n    /// Check and update variables appropriately if view\n    /// direction is flipped. This should not happen but\n    /// just in case.\n    if (tile1x > tile2x) {\n      temp = tile1x;\n      tile1x = tile2x;\n      tile2x = temp;\n    }\n    if (tile2y > tile1y) {\n      temp = tile1y;\n      tile1y = tile2y;\n      tile2y = temp;\n    }\n\n    /// Compute current tile indices\n    currStartX = tile1x;\n    currEndX = tile2x;\n    currStartY = (Math.pow(2, zoom) - 1 - tile1y);\n    currEndY = (Math.pow(2, zoom) - 1 - tile2y);\n    if (currEndY < currStartY) {\n      temp = currStartY;\n      currStartY = currEndY;\n      currEndY = temp;\n    }\n\n    /// Compute last tile indices\n    lastStartX = geo.mercator.long2tilex(worldPt1[0],\n                   m_lastVisibleZoom);\n    lastStartY = geo.mercator.lat2tiley(worldPt1[1],\n                   m_lastVisibleZoom);\n    lastEndX = geo.mercator.long2tilex(worldPt2[0],\n                   m_lastVisibleZoom);\n    lastEndY = geo.mercator.lat2tiley(worldPt2[1],\n                   m_lastVisibleZoom);\n    lastStartY = Math.pow(2, m_lastVisibleZoom) - 1 - lastStartY;\n    lastEndY   = Math.pow(2, m_lastVisibleZoom) - 1 - lastEndY;\n    if (lastEndY < lastStartY) {\n      temp = lastStartY;\n      lastStartY = lastEndY;\n      lastEndY = temp;\n    }\n\n    m_visibleTilesRange = {};\n    m_visibleTilesRange[zoom] = { startX: currStartX, endX: currEndX,\n                                  startY: currStartY, endY: currEndY };\n\n    m_visibleTilesRange[m_lastVisibleZoom] =\n                                { startX: lastStartX, endX: lastEndX,\n                                  startY: lastStartY, endY: lastEndY };\n    m_pendingNewTilesStat[m_updateTimerId] = { total:\n      ((tile2x - tile1x + 1) * (tile1y - tile2y + 1)), count: 0 };\n\n    for (i = tile1x; i <= tile2x; i += 1) {\n      for (j = tile2y; j <= tile1y; j += 1) {\n        invJ = (Math.pow(2, zoom) - 1 - j);\n        if  (!m_this._hasTile(zoom, i, invJ)) {\n          tile = m_this._addTile(request, zoom, i, invJ);\n        } else {\n          tile = m_tiles[zoom][i][invJ];\n          tile.feature.bin(m_visibleBinNumber);\n          if (tile.LOADED && m_updateTimerId in m_pendingNewTilesStat) {\n            m_pendingNewTilesStat[m_updateTimerId].count += 1;\n          }\n          tile.lastused = new Date();\n          tile.feature._update();\n        }\n        tile.updateTimerId = m_updateTimerId;\n      }\n    }\n\n    // define a function here to set tile properties after it is loaded\n    function tileOnLoad(tile) {\n      var defer = $.Deferred();\n      m_this.addDeferred(defer);\n\n      return function () {\n        tile.LOADING = false;\n        tile.LOADED = true;\n        if ((tile.REMOVING || tile.REMOVED) &&\n          tile.feature &&\n          tile.zoom !== getModifiedMapZoom()) {\n          tile.feature.bin(m_hiddenBinNumber);\n          tile.REMOVING = false;\n          tile.REMOVED = true;\n        } else {\n          tile.REMOVED = false;\n          tile.lastused = new Date();\n          tile.feature.bin(m_visibleBinNumber);\n        }\n\n        if (tile.updateTimerId === m_updateTimerId &&\n            m_updateTimerId in m_pendingNewTilesStat) {\n          tile.feature.bin(m_visibleBinNumber);\n          m_pendingNewTilesStat[m_updateTimerId].count += 1;\n        } else {\n          tile.REMOVED = true;\n          tile.feature.bin(m_hiddenBinNumber);\n        }\n        tile.feature._update();\n\n        if (m_updateTimerId in m_pendingNewTilesStat &&\n            m_pendingNewTilesStat[m_updateTimerId].count >=\n            m_pendingNewTilesStat[m_updateTimerId].total) {\n          drawTiles();\n        }\n        defer.resolve();\n      };\n    }\n\n    /// And now finally add them\n    for (i = 0; i < m_pendingNewTiles.length; i += 1) {\n      tile = m_pendingNewTiles[i];\n      feature = m_this.createFeature(\"plane\", {drawOnAsyncResourceLoad: false,\n                    onload: tileOnLoad(tile)})\n                  .origin([tile.llx, tile.lly])\n                  .upperLeft([tile.llx, tile.ury])\n                  .lowerRight([tile.urx, tile.lly])\n                  .gcs(\"EPSG:3857\")\n                  .style(\"image\", tile);\n      tile.feature = feature;\n      tile.feature._update();\n    }\n    m_pendingNewTiles = [];\n\n    if (m_updateTimerId in m_pendingNewTilesStat &&\n        m_pendingNewTilesStat[m_updateTimerId].count >=\n        m_pendingNewTilesStat[m_updateTimerId].total) {\n      drawTiles();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update OSM tiles as needed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function updateOSMTiles(request) {\n    if (request === undefined) {\n      request = {};\n    }\n\n    var zoom = getModifiedMapZoom();\n\n    if (!m_lastVisibleZoom) {\n      m_lastVisibleZoom = zoom;\n    }\n\n    /// Add tiles that are currently visible\n    m_this._addTiles(request);\n\n    /// Update the zoom\n    if (m_lastVisibleZoom !== zoom) {\n      m_lastVisibleZoom = zoom;\n    }\n\n    m_this.updateTime().modified();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create / delete tiles as necessary\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._updateTiles = function (request) {\n    var defer = $.Deferred();\n    m_this.addDeferred(defer);\n\n    if (m_updateTimerId !== null) {\n      clearTimeout(m_updateTimerId);\n      m_updateDefer.resolve();\n      m_updateDefer = defer;\n      if (m_updateTimerId in m_pendingNewTilesStat) {\n        delete m_pendingNewTilesStat[m_updateTimerId];\n      }\n      /// Set timeout for 60 ms. 60 ms seems to playing well\n      /// with the events. Also, 60ms corresponds to 15 FPS.\n      m_updateTimerId = setTimeout(function () {\n        updateOSMTiles(request);\n        m_updateDefer.resolve();\n      }, 100);\n    } else {\n      m_updateDefer = defer;\n      m_updateTimerId = setTimeout(function () {\n        updateOSMTiles(request);\n        m_updateDefer.resolve();\n      }, 0);\n    }\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   *\n   * Do not call parent _init method as its already been executed\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    s_init.call(m_this);\n    m_this.gcs(\"EPSG:3857\");\n    m_this.map().zoomRange({\n      min: 0,\n      max: 18 - m_zoomLevelDelta\n    });\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update layer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function (request) {\n    /// Update tiles (create new / delete old etc...)\n    m_this._updateTiles(request);\n\n    /// Now call base class update\n    s_update.call(m_this, request);\n  };\n\n  return this;\n};\n\ninherit(geo.osmLayer, geo.featureLayer);\n\ngeo.registerLayer(\"osm\", geo.osmLayer);\n","/**\n * @module geo.gl\n */\nggl = ogs.namespace('geo.gl'); // jshint ignore: line\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module ggl\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vglRenderer\n *\n * @param canvas\n * @returns {ggl.vglRenderer}\n */\n//////////////////////////////////////////////////////////////////////////////\nggl.renderer = function (arg) {\n  'use strict';\n\n  if (!(this instanceof ggl.renderer)) {\n    return new ggl.renderer(arg);\n  }\n  geo.renderer.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get context specific renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.contextRenderer = function () {\n    throw 'Should be implemented by derived classes';\n  };\n\n  return this;\n};\n\ninherit(ggl.renderer, geo.renderer);\n\ngeo.registerRenderer('vglRenderer', ggl.vglRenderer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.gl\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of lineFeature\n *\n * @class\n * @returns {ggl.lineFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\nggl.lineFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof ggl.lineFeature)) {\n    return new ggl.lineFeature(arg);\n  }\n  arg = arg || {};\n  geo.lineFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_actor = null,\n      s_init = this._init,\n      s_update = this._update;\n\n  var vertexShaderSource = [\n    'attribute vec3 pos;',\n    'attribute vec3 prev;',\n    'attribute vec3 next;',\n    'attribute float offset;',\n\n    'attribute vec3 strokeColor;',\n    'attribute float strokeOpacity;',\n    'attribute float strokeWidth;',\n\n    'uniform mat4 modelViewMatrix;',\n    'uniform mat4 projectionMatrix;',\n    'uniform float pixelWidth;',\n\n    'varying vec3 strokeColorVar;',\n    'varying float strokeWidthVar;',\n    'varying float strokeOpacityVar;',\n\n    'void main(void)',\n    '{',\n    '  vec4 worldPos = projectionMatrix * modelViewMatrix * vec4(pos.xyz, 1);',\n    '  if (worldPos.w != 0.0) {',\n    '    worldPos = worldPos/worldPos.w;',\n    '  }',\n    '  vec4 worldNext = projectionMatrix * modelViewMatrix * vec4(next.xyz, 1);',\n    '  if (worldNext.w != 0.0) {',\n    '    worldNext = worldNext/worldNext.w;',\n    '  }',\n    '  vec4 worldPrev = projectionMatrix* modelViewMatrix * vec4(prev.xyz, 1);',\n    '  if (worldPrev.w != 0.0) {',\n    '    worldPrev = worldPrev/worldPrev.w;',\n    '  }',\n    '  strokeColorVar = strokeColor;',\n    '  strokeWidthVar = strokeWidth;',\n    '  strokeOpacityVar = strokeOpacity;',\n    '  vec2 deltaNext = worldNext.xy - worldPos.xy;',\n    '  vec2 deltaPrev = worldPos.xy - worldPrev.xy;',\n    '  float angleNext = 0.0;',\n    '  if (deltaNext.x != 0.0) { angleNext = atan(deltaNext.y, deltaNext.x); }',\n    '  float anglePrev = 0.0;',\n    '  if (deltaPrev.x != 0.0) { anglePrev = atan(deltaPrev.y, deltaPrev.x); }',\n    '  if (deltaPrev.xy == vec2(0, 0)) anglePrev = angleNext;',\n    '  if (deltaNext.xy == vec2(0, 0)) angleNext = anglePrev;',\n    '  float angle = (anglePrev + angleNext) / 2.0;',\n    '  float distance = (offset * strokeWidth * pixelWidth) /',\n    '                    cos(anglePrev - angle);',\n    '  worldPos.x += distance * sin(angle);',\n    '  worldPos.y -= distance * cos(angle);',\n    '  vec4  p = worldPos;',\n    '  gl_Position = p;',\n    '}'\n  ].join('\\n');\n\n  function createVertexShader() {\n    var shader = new vgl.shader(gl.VERTEX_SHADER);\n    shader.setShaderSource(vertexShaderSource);\n    return shader;\n  }\n\n  var fragmentShaderSource = [\n    '#ifdef GL_ES',\n    '  precision highp float;',\n    '#endif',\n    'varying vec3 strokeColorVar;',\n    'varying float strokeWidthVar;',\n    'varying float strokeOpacityVar;',\n    'void main () {',\n    '  gl_FragColor = vec4 (strokeColorVar, strokeOpacityVar);',\n    '}'\n  ].join('\\n');\n\n  function createFragmentShader() {\n    var shader = new vgl.shader(gl.FRAGMENT_SHADER);\n    shader.setShaderSource(fragmentShaderSource);\n    return shader;\n  }\n\n  function createGLLines() {\n    var i, prev = [], next = [], numPts = m_this.data().length,\n        itemIndex = 0, lineItemIndex = 0, lineItem = null, p = null,\n        start, position = [], strokeWidth = [], strokeColor = [],\n        strokeOpacity = [], posFunc, strokeWidthFunc, strokeColorFunc,\n        strokeOpacityFunc, buffers = vgl.DataBuffers(1024),\n        sourcePositions = vgl.sourceDataP3fv(),\n        prevSourcePositions = vgl.sourceDataAnyfv(3,\n          vgl.vertexAttributeKeysIndexed.Four),\n        nextSourcePositions = vgl.sourceDataAnyfv(3,\n          vgl.vertexAttributeKeysIndexed.Five),\n        offsetSourcePositions = vgl.sourceDataAnyfv(1,\n          vgl.vertexAttributeKeysIndexed.Six),\n        sourceStokeWidth = vgl.sourceDataAnyfv(1,\n          vgl.vertexAttributeKeysIndexed.One),\n        sourceStrokeColor = vgl.sourceDataAnyfv(3,\n          vgl.vertexAttributeKeysIndexed.Two),\n        sourceStrokeOpacity = vgl.sourceDataAnyfv(1,\n          vgl.vertexAttributeKeysIndexed.Three),\n        trianglePrimitive = vgl.triangles(),\n        mat = vgl.material(),\n        blend = vgl.blend(),\n        prog = vgl.shaderProgram(),\n        vertexShader = createVertexShader(),\n        fragmentShader = createFragmentShader(),\n        posAttr = vgl.vertexAttribute('pos'),\n        prevAttr = vgl.vertexAttribute('prev'),\n        nextAttr = vgl.vertexAttribute('next'),\n        offsetAttr = vgl.vertexAttribute('offset'),\n        stokeWidthAttr = vgl.vertexAttribute('strokeWidth'),\n        strokeColorAttr = vgl.vertexAttribute('strokeColor'),\n        strokeOpacityAttr = vgl.vertexAttribute('strokeOpacity'),\n        modelViewUniform = new vgl.modelViewUniform('modelViewMatrix'),\n        projectionUniform = new vgl.projectionUniform('projectionMatrix'),\n        pixelWidthUniform = new vgl.floatUniform('pixelWidth',\n                              2.0 / m_this.renderer().width()),\n        geom = vgl.geometryData(),\n        mapper = vgl.mapper();\n\n    posFunc = m_this.position();\n    strokeWidthFunc = m_this.style.get('strokeWidth');\n    strokeColorFunc = m_this.style.get('strokeColor');\n    strokeOpacityFunc = m_this.style.get('strokeOpacity');\n\n    m_this.data().forEach(function (item) {\n      lineItem = m_this.line()(item, itemIndex);\n      lineItem.forEach(function (lineItemData) {\n        p = posFunc(lineItemData, lineItemIndex, item, itemIndex);\n        if (p instanceof geo.latlng) {\n          position.push([p.x(), p.y(), 0.0]);\n        } else {\n          position.push([p.x, p.y, p.z || 0.0]);\n        }\n        strokeWidth.push(strokeWidthFunc(item,\n          itemIndex, lineItemData, lineItemIndex));\n        var sc = strokeColorFunc(item,\n          itemIndex, lineItemData, lineItemIndex);\n        strokeColor.push([sc.r, sc.g, sc.b]);\n        strokeOpacity.push(strokeOpacityFunc(item,\n          itemIndex, lineItemData, lineItemIndex));\n\n        // Assuming that we will have atleast two points\n        if (lineItemIndex === 0) {\n          var posxx = position[position.length - 1];\n          prev.push(posxx);\n          position.push(posxx);\n          prev.push(posxx);\n          next.push(posxx);\n          strokeWidth.push(strokeWidthFunc(item,\n            itemIndex, lineItemData, lineItemIndex));\n          strokeOpacity.push(strokeOpacityFunc(item,\n            itemIndex, lineItemData, lineItemIndex));\n          strokeColor.push([sc.r, sc.g, sc.b]);\n        }\n        else {\n          prev.push(position[position.length - 2]);\n          next.push(position[position.length - 1]);\n        }\n\n        lineItemIndex += 1;\n      });\n      next.push(position[position.length - 1]);\n      lineItemIndex = 0;\n      itemIndex += 1;\n    });\n\n    position = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 position, 3);\n    prev = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 prev, 3);\n    next = geo.transform.transformCoordinates(\n                 m_this.gcs(), m_this.layer().map().gcs(),\n                 next, 3);\n\n    buffers.create('pos', 3);\n    buffers.create('next', 3);\n    buffers.create('prev', 3);\n    buffers.create('offset', 1);\n    buffers.create('indices', 1);\n    buffers.create('strokeWidth', 1);\n    buffers.create('strokeColor', 3);\n    buffers.create('strokeOpacity', 1);\n\n    numPts = position.length;\n\n    // TODO: Right now this is ugly but we will fix it.\n    prog.addVertexAttribute(posAttr,\n      vgl.vertexAttributeKeys.Position);\n    prog.addVertexAttribute(stokeWidthAttr,\n      vgl.vertexAttributeKeysIndexed.One);\n    prog.addVertexAttribute(strokeColorAttr,\n      vgl.vertexAttributeKeysIndexed.Two);\n    prog.addVertexAttribute(strokeOpacityAttr,\n      vgl.vertexAttributeKeysIndexed.Three);\n    prog.addVertexAttribute(prevAttr,\n      vgl.vertexAttributeKeysIndexed.Four);\n    prog.addVertexAttribute(nextAttr,\n      vgl.vertexAttributeKeysIndexed.Five);\n    prog.addVertexAttribute(offsetAttr,\n      vgl.vertexAttributeKeysIndexed.Six);\n\n    prog.addUniform(modelViewUniform);\n    prog.addUniform(projectionUniform);\n    prog.addUniform(pixelWidthUniform);\n\n    prog.addShader(fragmentShader);\n    prog.addShader(vertexShader);\n\n    mat.addAttribute(prog);\n    mat.addAttribute(blend);\n\n    m_actor = vgl.actor();\n    m_actor.setMaterial(mat);\n\n    start = buffers.alloc(numPts * 6);\n    var currentIndex = start;\n\n    for (i = 0; i < numPts; i += 1) {\n      //buffers.write('indices', [i], start + i, 1);\n      buffers.repeat('strokeWidth', [strokeWidth[i]], start + i * 6, 6);\n      buffers.repeat('strokeColor', strokeColor[i], start + i * 6, 6);\n      buffers.repeat('strokeOpacity', [strokeOpacity[i]], start + i * 6, 6);\n    }\n\n    var addVert = function (p, c, n, offset) {\n      buffers.write('prev', p, currentIndex, 1);\n      buffers.write('pos', c, currentIndex, 1);\n      buffers.write('next', n, currentIndex, 1);\n      buffers.write('offset', [offset], currentIndex, 1);\n      buffers.write('indices', [currentIndex], currentIndex, 1);\n      currentIndex += 1;\n    };\n\n    for (i = 1; i < position.length; i += 1) {\n      //buffers.write ('unit', unit_buffer, currentIndex, 6);\n      addVert(prev[i - 1], position[i - 1], next[i - 1], 1);\n      addVert(prev[i], position[i], next[i], -1);\n      addVert(prev[i - 1], position[i - 1], next[i - 1], -1);\n\n      addVert(prev[i - 1], position[i - 1], next[i - 1], 1);\n      addVert(prev[i], position[i], next[i], 1);\n      addVert(prev[i], position[i], next[i], -1);\n    }\n\n    sourcePositions.pushBack(buffers.get('pos'));\n    geom.addSource(sourcePositions);\n\n    prevSourcePositions.pushBack(buffers.get('prev'));\n    geom.addSource(prevSourcePositions);\n\n    nextSourcePositions.pushBack(buffers.get('next'));\n    geom.addSource(nextSourcePositions);\n\n    sourceStokeWidth.pushBack(buffers.get('strokeWidth'));\n    geom.addSource(sourceStokeWidth);\n\n    sourceStrokeColor.pushBack(buffers.get('strokeColor'));\n    geom.addSource(sourceStrokeColor);\n\n    sourceStrokeOpacity.pushBack(buffers.get('strokeOpacity'));\n    geom.addSource(sourceStrokeOpacity);\n\n    offsetSourcePositions.pushBack(buffers.get('offset'));\n    geom.addSource(offsetSourcePositions);\n\n    trianglePrimitive.setIndices(buffers.get('indices'));\n    geom.addPrimitive(trianglePrimitive);\n\n    mapper.setGeometryData(geom);\n    m_actor.setMapper(mapper);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    createGLLines();\n\n    m_this.renderer().contextRenderer().addActor(m_actor);\n    m_this.buildTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_this.buildTime().getMTime() ||\n        m_this.updateTime().getMTime() <= m_this.getMTime()) {\n      m_this._build();\n    }\n\n    m_actor.setVisible(m_this.visible());\n    m_actor.material().setBinNumber(m_this.bin());\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(ggl.lineFeature, geo.lineFeature);\n\n// Now register it\ngeo.registerFeature('vgl', 'line', ggl.lineFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.gl\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of pointFeature\n *\n * @class\n * @returns {ggl.pointFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\nggl.pointFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof ggl.pointFeature)) {\n    return new ggl.pointFeature(arg);\n  }\n  arg = arg || {};\n  geo.pointFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      m_actor = null,\n      m_pixelWidthUniform = null,\n      m_aspectUniform = null,\n      s_init = this._init,\n      s_update = this._update;\n\n  var vertexShaderSource = [\n      \"attribute vec3 pos;\",\n      \"attribute vec2 unit;\",\n      \"attribute float rad;\",\n      \"attribute vec3 fillColor;\",\n      \"attribute vec3 strokeColor;\",\n      \"attribute float fillOpacity;\",\n      \"attribute float strokeWidth;\",\n      \"attribute float strokeOpacity;\",\n      \"attribute float fill;\",\n      \"attribute float stroke;\",\n      \"uniform float pixelWidth;\",\n      \"uniform float aspect;\",\n      \"uniform mat4 modelViewMatrix;\",\n      \"uniform mat4 projectionMatrix;\",\n      \"varying vec3 unitVar;\",\n      \"varying vec4 fillColorVar;\",\n      \"varying vec4 strokeColorVar;\",\n      \"varying float radiusVar;\",\n      \"varying float strokeWidthVar;\",\n      \"varying float fillVar;\",\n      \"varying float strokeVar;\",\n      \"void main(void)\",\n      \"{\",\n      \"  unitVar = vec3 (unit, 1.0);\",\n      \"  fillColorVar = vec4 (fillColor, fillOpacity);\",\n      \"  strokeColorVar = vec4 (strokeColor, strokeOpacity);\",\n      \"  strokeWidthVar = strokeWidth;\",\n      \"  fillVar = fill;\",\n      \"  strokeVar = stroke;\",\n      \"  radiusVar = rad;\",\n      \"  vec4 p = (projectionMatrix * modelViewMatrix * vec4(pos, 1.0)).xyzw;\",\n      \"  if (p.w != 0.0) {\",\n      \"    p = p/p.w;\",\n      \"  }\",\n      \"  p += (rad + strokeWidth) * \",\n      \"vec4 (unit.x * pixelWidth, unit.y * pixelWidth * aspect, 0.0, 1.0);\",\n      \"  gl_Position = vec4(p.xyz, 1.0);\",\n      \"}\"\n    ].join(\"\\n\");\n\n  function createVertexShader() {\n    var shader = new vgl.shader(gl.VERTEX_SHADER);\n\n    shader.setShaderSource(vertexShaderSource);\n    return shader;\n  }\n\n  var fragmentShaderSource = [\n      \"#ifdef GL_ES\",\n      \"  precision highp float;\",\n      \"#endif\",\n      \"uniform float aspect;\",\n      \"varying vec3 unitVar;\",\n      \"varying vec4 fillColorVar;\",\n      \"varying vec4 strokeColorVar;\",\n      \"varying float radiusVar;\",\n      \"varying float strokeWidthVar;\",\n      \"varying float fillVar;\",\n      \"varying float strokeVar;\",\n      \"bool to_bool (in float value) {\",\n      \"  if (value < 1.0)\",\n      \"    return false;\",\n      \"  else\",\n      \"    return true;\",\n      \"}\",\n      \"void main () {\",\n      \"  bool fill = to_bool (fillVar);\",\n      \"  bool stroke = to_bool (strokeVar);\",\n      \"  vec4 strokeColor, fillColor;\",\n      \"  // No stroke or fill implies nothing to draw\",\n      \"  if (!fill && !stroke)\",\n      \"    discard;\",\n      \"  // Get normalized texture coordinates and polar r coordinate\",\n      \"  vec2 tex = (unitVar.xy + 1.0) / 2.0;\",\n      \"  float rad = length (unitVar.xy);\",\n      \"  // If there is no stroke, the fill region should transition to nothing\",\n      \"  if (!stroke)\",\n      \"    strokeColor = vec4 (fillColorVar.rgb, 0.0);\",\n      \"  else\",\n      \"    strokeColor = strokeColorVar;\",\n      \"  // Likewise, if there is no fill, the stroke should transition to nothing\",\n      \"  if (!fill)\",\n      \"    fillColor = vec4 (strokeColor.rgb, 0.0);\",\n      \"  else\",\n      \"    fillColor = fillColorVar;\",\n      \"  float radiusWidth = radiusVar;\",\n      \"  // Distance to antialias over\",\n      \"  float antialiasDist = 3.0 / (2.0 * radiusVar);\",\n      \"  if (rad < (radiusWidth / (radiusWidth + strokeWidthVar))) {\",\n      \"    float endStep = radiusWidth / (radiusWidth + strokeWidthVar);\",\n      \"    float step = smoothstep (endStep - antialiasDist, endStep, rad);\",\n      \"    gl_FragColor = mix (fillColor, strokeColor, step);\",\n      \"  }\",\n      \"  else {\",\n      \"    float step = smoothstep (1.0 - antialiasDist, 1.0, rad);\",\n      \"    gl_FragColor = mix (strokeColor, vec4 (strokeColor.rgb, 0.0), step);\",\n      \"  }\",\n      \"}\"\n    ].join(\"\\n\");\n\n  function createFragmentShader() {\n    var shader = new vgl.shader(gl.FRAGMENT_SHADER);\n    shader.setShaderSource(fragmentShaderSource);\n    return shader;\n  }\n\n  var rect = function (x, y, w, h) {\n    var verts = [\n        x - w, y + h,\n        x - w, y - h,\n        x + w, y + h,\n        x - w, y - h,\n        x + w, y - h,\n        x + w, y + h\n      ];\n    return verts;\n  };\n\n  function createGLPoints() {\n    var i, numPts = m_this.data().length,\n        start, unit = rect(0, 0, 1, 1),\n        position = [], radius = [], strokeWidth = [],\n        fillColor = [], fill = [], strokeColor = [], stroke = [],\n        fillOpacity = [], strokeOpacity = [], posFunc, radFunc, strokeWidthFunc,\n        fillColorFunc, fillFunc, strokeColorFunc, strokeFunc, fillOpacityFunc,\n        strokeOpactityFunc, buffers = vgl.DataBuffers(1024),\n        sourcePositions = vgl.sourceDataP3fv(),\n        sourceUnits = vgl.sourceDataAnyfv(2, vgl.vertexAttributeKeysIndexed.One),\n        sourceRadius = vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Two),\n        sourceStokeWidth = vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Three),\n        sourceFillColor = vgl.sourceDataAnyfv(3, vgl.vertexAttributeKeysIndexed.Four),\n        sourceFill = vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Five),\n        sourceStrokeColor = vgl.sourceDataAnyfv(3, vgl.vertexAttributeKeysIndexed.Six),\n        sourceStroke = vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Seven),\n        sourceAlpha = vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Eight),\n        sourceStrokeOpacity = vgl.sourceDataAnyfv(1, vgl.vertexAttributeKeysIndexed.Nine),\n        trianglesPrimitive = vgl.triangles(),\n        mat = vgl.material(),\n        blend = vgl.blend(),\n        prog = vgl.shaderProgram(),\n        vertexShader = createVertexShader(),\n        fragmentShader = createFragmentShader(),\n        posAttr = vgl.vertexAttribute(\"pos\"),\n        unitAttr = vgl.vertexAttribute(\"unit\"),\n        radAttr = vgl.vertexAttribute(\"rad\"),\n        stokeWidthAttr = vgl.vertexAttribute(\"strokeWidth\"),\n        fillColorAttr = vgl.vertexAttribute(\"fillColor\"),\n        fillAttr = vgl.vertexAttribute(\"fill\"),\n        strokeColorAttr = vgl.vertexAttribute(\"strokeColor\"),\n        strokeAttr = vgl.vertexAttribute(\"stroke\"),\n        fillOpacityAttr = vgl.vertexAttribute(\"fillOpacity\"),\n        strokeOpacityAttr = vgl.vertexAttribute(\"strokeOpacity\"),\n        modelViewUniform = new vgl.modelViewUniform(\"modelViewMatrix\"),\n        projectionUniform = new vgl.projectionUniform(\"projectionMatrix\"),\n        geom = vgl.geometryData(),\n        mapper = vgl.mapper();\n\n    m_pixelWidthUniform = new vgl.floatUniform(\"pixelWidth\",\n                            2.0 / m_this.renderer().width());\n    m_aspectUniform = new vgl.floatUniform(\"aspect\",\n                        m_this.renderer().width() / m_this.renderer().height());\n\n    posFunc = m_this.position();\n    radFunc = m_this.style.get(\"radius\");\n    strokeWidthFunc = m_this.style.get(\"strokeWidth\");\n    fillColorFunc = m_this.style.get(\"fillColor\");\n    fillFunc = m_this.style.get(\"fill\");\n    strokeColorFunc = m_this.style.get(\"strokeColor\");\n    strokeFunc = m_this.style.get(\"stroke\");\n    fillOpacityFunc = m_this.style.get(\"fillOpacity\");\n    strokeOpactityFunc = m_this.style.get(\"strokeOpacity\");\n\n    m_this.data().forEach(function (item) {\n      var p = posFunc(item), c;\n\n      position.push([p.x, p.y, p.z || 0]);\n      radius.push(radFunc(item));\n      strokeWidth.push(strokeWidthFunc(item));\n      fill.push(fillFunc(item) ? 1.0 : 0.0);\n\n      c = fillColorFunc(item);\n      fillColor.push([ c.r, c.g, c.b ]);\n\n      c = strokeColorFunc(item);\n      strokeColor.push([ c.r, c.g, c.b ]);\n\n      stroke.push(strokeFunc(item) ? 1.0 : 0.0);\n      fillOpacity.push(fillOpacityFunc(item));\n      strokeOpacity.push(strokeOpactityFunc(item));\n    });\n\n    position = geo.transform.transformCoordinates(\n                  m_this.gcs(), m_this.layer().map().gcs(),\n                  position, 3);\n\n    buffers.create(\"pos\", 3);\n    buffers.create(\"indices\", 1);\n    buffers.create(\"unit\", 2);\n    buffers.create(\"rad\", 1);\n    buffers.create(\"strokeWidth\", 1);\n    buffers.create(\"fillColor\", 3);\n    buffers.create(\"fill\", 1);\n    buffers.create(\"strokeColor\", 3);\n    buffers.create(\"stroke\", 1);\n    buffers.create(\"fillOpacity\", 1);\n    buffers.create(\"strokeOpacity\", 1);\n\n    // TODO: Right now this is ugly but we will fix it.\n    prog.addVertexAttribute(posAttr, vgl.vertexAttributeKeys.Position);\n    prog.addVertexAttribute(unitAttr, vgl.vertexAttributeKeysIndexed.One);\n    prog.addVertexAttribute(radAttr, vgl.vertexAttributeKeysIndexed.Two);\n    prog.addVertexAttribute(stokeWidthAttr, vgl.vertexAttributeKeysIndexed.Three);\n    prog.addVertexAttribute(fillColorAttr, vgl.vertexAttributeKeysIndexed.Four);\n    prog.addVertexAttribute(fillAttr, vgl.vertexAttributeKeysIndexed.Five);\n    prog.addVertexAttribute(strokeColorAttr, vgl.vertexAttributeKeysIndexed.Six);\n    prog.addVertexAttribute(strokeAttr, vgl.vertexAttributeKeysIndexed.Seven);\n    prog.addVertexAttribute(fillOpacityAttr, vgl.vertexAttributeKeysIndexed.Eight);\n    prog.addVertexAttribute(strokeOpacityAttr, vgl.vertexAttributeKeysIndexed.Nine);\n\n    prog.addUniform(m_pixelWidthUniform);\n    prog.addUniform(m_aspectUniform);\n    prog.addUniform(modelViewUniform);\n    prog.addUniform(projectionUniform);\n\n    prog.addShader(fragmentShader);\n    prog.addShader(vertexShader);\n\n    mat.addAttribute(prog);\n    mat.addAttribute(blend);\n\n    m_actor = vgl.actor();\n    m_actor.setMaterial(mat);\n\n    start = buffers.alloc(6 * numPts);\n    for (i = 0; i < numPts; i += 1) {\n      buffers.repeat(\"pos\", position[i],\n                      start + i * 6, 6);\n      buffers.write(\"unit\", unit, start + i * 6, 6);\n      buffers.write(\"indices\", [i], start + i, 1);\n      buffers.repeat(\"rad\", [radius[i]], start + i * 6, 6);\n      buffers.repeat(\"strokeWidth\", [strokeWidth[i]], start + i * 6, 6);\n      buffers.repeat(\"fillColor\", fillColor[i], start + i * 6, 6);\n      buffers.repeat(\"fill\", [fill[i]], start + i * 6, 6);\n      buffers.repeat(\"strokeColor\", strokeColor[i], start + i * 6, 6);\n      buffers.repeat(\"stroke\", [stroke[i]], start + i * 6, 6);\n      buffers.repeat(\"fillOpacity\", [fillOpacity[i]], start + i * 6, 6);\n      buffers.repeat(\"strokeOpacity\", [strokeOpacity[i]], start + i * 6, 6);\n    }\n\n    sourcePositions.pushBack(buffers.get(\"pos\"));\n    geom.addSource(sourcePositions);\n\n    sourceUnits.pushBack(buffers.get(\"unit\"));\n    geom.addSource(sourceUnits);\n\n    sourceRadius.pushBack(buffers.get(\"rad\"));\n    geom.addSource(sourceRadius);\n\n    sourceStokeWidth.pushBack(buffers.get(\"strokeWidth\"));\n    geom.addSource(sourceStokeWidth);\n\n    sourceFillColor.pushBack(buffers.get(\"fillColor\"));\n    geom.addSource(sourceFillColor);\n\n    sourceFill.pushBack(buffers.get(\"fill\"));\n    geom.addSource(sourceFill);\n\n    sourceStrokeColor.pushBack(buffers.get(\"strokeColor\"));\n    geom.addSource(sourceStrokeColor);\n\n    sourceStroke.pushBack(buffers.get(\"stroke\"));\n    geom.addSource(sourceStroke);\n\n    sourceAlpha.pushBack(buffers.get(\"fillOpacity\"));\n    geom.addSource(sourceAlpha);\n\n    sourceStrokeOpacity.pushBack(buffers.get(\"strokeOpacity\"));\n    geom.addSource(sourceStrokeOpacity);\n\n    trianglesPrimitive.setIndices(buffers.get(\"indices\"));\n    geom.addPrimitive(trianglesPrimitive);\n\n    mapper.setGeometryData(geom);\n\n    m_actor.setMapper(mapper);\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    s_init.call(m_this, arg);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    createGLPoints();\n\n    m_this.renderer().contextRenderer().addActor(m_actor);\n    m_this.renderer().contextRenderer().render();\n    m_this.buildTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n\n    s_update.call(m_this);\n\n    // For now build if the data or style changes. In the future we may\n    // we able to partially update the data using dynamic gl buffers.\n    if (m_this.dataTime().getMTime() >= m_this.buildTime().getMTime() ||\n        m_this.updateTime().getMTime() < m_this.getMTime()) {\n      m_this._build();\n    }\n\n    // Update uniforms\n    m_pixelWidthUniform.set(2.0 / m_this.renderer().width());\n    m_aspectUniform.set(m_this.renderer().width() /\n                        m_this.renderer().height());\n\n    m_actor.setVisible(m_this.visible());\n    m_actor.material().setBinNumber(m_this.bin());\n\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n  };\n\n  m_this._init();\n  return this;\n};\n\ninherit(ggl.pointFeature, geo.pointFeature);\n\n// Now register it\ngeo.registerFeature(\"vgl\", \"point\", ggl.pointFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of geomFeature\n *\n * @class\n * Create a geometry feature given a geometry {vgl.geometryData}\n *\n * @param arg {\"geom\": vgl.geometryData}\n * @returns {ggl.geomFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\nggl.geomFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof ggl.geomFeature)) {\n    return new ggl.geomFeature(arg);\n  }\n  arg = arg || {};\n  geo.geomFeature.call(this, arg);\n\n  // Initialize\n  var m_this = this,\n      m_geom = arg.geom || null,\n      m_actor = vgl.actor(),\n      m_mapper = vgl.mapper(),\n      m_material = null,\n      m_scalar = null,\n      m_color = arg.color || [1.0, 1.0, 1.0],\n      m_buildTime = null,\n      m_noOfPrimitives = 0;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var style = m_this.style();\n\n    // Vertex color gets the preference\n    if (m_geom !== null) {\n      m_scalar = m_geom.sourceData(vgl.vertexAttributeKeys.Scalar);\n      m_color = m_geom.sourceData(vgl.vertexAttributeKeys.Color);\n      m_mapper.setGeometryData(m_geom);\n    }\n\n    this.setMapper(m_mapper);\n\n    if (style.point_sprites !== undefined && style.point_sprites &&\n        style.point_sprites_image !== undefined &&\n        style.point_sprites_image !== null &&\n        m_noOfPrimitives === 1 &&\n        m_geom.primitive(0).primitiveType() === gl.POINTS) {\n      m_material = vgl.utils.createPointSpritesMaterial(\n                     style.point_sprites_image);\n    }\n    else if (m_scalar) {\n      if (m_color instanceof vgl.lookupTable) {\n        m_color.updateRange(m_scalar.scalarRange());\n        m_material = vgl.utils.createColorMappedMaterial(m_color);\n      } else {\n        m_color = vgl.lookupTable();\n        m_color.updateRange(m_scalar.scalarRange());\n        m_material = vgl.utils.createColorMappedMaterial(m_color);\n      }\n    } else if (m_color) {\n      m_material = vgl.utils.createColorMaterial();\n    } else {\n      m_material = vgl.utils.createSolidColorMaterial();\n    }\n    m_actor.setMaterial(m_material);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @private\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    if (m_buildTime &&\n        m_buildTime.getMTime() < m_this.getMTime()) {\n      if (m_color instanceof vgl.lookupTable) {\n        vgl.utils.updateColorMappedMaterial(m_this.material(),\n          m_this.style.color);\n      } else {\n        // TODO\n      }\n    } else {\n      m_buildTime = vgl.timestamp();\n      m_buildTime.modified();\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get/Set geometry\n   *\n   * @returns {ggl.geomFeature}\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.geometry = function (val) {\n    if (val === undefined) {\n      return m_geom;\n    } else {\n      m_geom = val;\n      m_this.modified();\n      return m_this;\n    }\n  };\n\n  return this;\n};\n\ninherit(ggl.geomFeature, geo.geomFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of planeFeature\n *\n * @class\n * Create a plane feature given a lower left corner point {geo.latlng}\n * and and upper right corner point {geo.latlng}\n * @param lowerleft\n * @param upperright\n * @returns {geo.planeFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\nggl.planeFeature = function (arg) {\n  \"use strict\";\n  if (!(this instanceof ggl.planeFeature)) {\n    return new ggl.planeFeature(arg);\n  }\n  geo.planeFeature.call(this, arg);\n\n  var m_this = this,\n      m_actor = null,\n      m_onloadCallback = arg.onload === undefined ? null : arg.onload;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Gets the coordinates for this plane\n   *\n   * @returns {Array} [[origin], [upper left] [lower right]]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.coords = function () {\n    return [m_this.origin(), m_this.upperLeft(), m_this.lowerRight()];\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build this feature\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var or = m_this.origin(),\n        ul = m_this.upperLeft(),\n        lr = m_this.lowerRight(),\n        /// img could be a source or an Image\n        img = m_this.style().image,\n        image = null,\n        texture = null;\n\n    /// TODO If for some reason base layer changes its gcs at run time\n    /// then we need to trigger an event to rebuild every feature\n    or = geo.transform.transformCoordinates(m_this.gcs(),\n                                            m_this.layer().map().gcs(),\n                                            or);\n    ul = geo.transform.transformCoordinates(m_this.gcs(),\n                                            m_this.layer().map().gcs(),\n                                            ul);\n    lr = geo.transform.transformCoordinates(m_this.gcs(),\n                                            m_this.layer().map().gcs(),\n                                            lr);\n\n    m_this.buildTime().modified();\n\n    if (m_actor) {\n      m_this.renderer().contextRenderer().removeActor(m_actor);\n    }\n\n    if (img && img instanceof Image) {\n      image = img;\n    } else if (img) {\n      image = new Image();\n      image.src = img;\n    }\n\n    if (!image) {\n      m_actor = vgl.utils.createPlane(or[0], or[1], or[2],\n        ul[0], ul[1], ul[2],\n        lr[0], lr[1], lr[2]);\n\n      m_this.renderer().contextRenderer().addActor(m_actor);\n\n    } else {\n      m_actor = vgl.utils.createTexturePlane(or[0], or[1], or[2],\n        lr[0], lr[1], lr[2],\n        ul[0], ul[1], ul[2], true);\n      texture = vgl.texture();\n      m_this.visible(false);\n\n      /// TODO: Is there a reliable way to make sure that image is loaded already?\n      m_this.renderer().contextRenderer().addActor(m_actor);\n\n      if (image.complete) {\n        texture.setImage(image);\n        m_actor.material().addAttribute(texture);\n        /// NOTE Currently we assume that we want to show the feature as\n        /// soon as the image gets loaded. However, there might be a case\n        /// where we want to lock down the visibility. We will deal with that\n        /// later.\n        m_this.visible(true);\n\n        if (m_onloadCallback) {\n          m_onloadCallback.call(m_this);\n        }\n        //}\n      } else {\n        image.onload = function () {\n          texture.setImage(image);\n          m_actor.material().addAttribute(texture);\n          /// NOTE Currently we assume that we want to show the feature as\n          /// soon as the image gets loaded. However, there might be a case\n          /// where we want to lock down the visibility. We will deal with that\n          /// later.\n          m_this.visible(true);\n\n          if (m_onloadCallback) {\n            m_onloadCallback.call(m_this);\n          }\n\n          if (m_this.drawOnAsyncResourceLoad()) {\n            m_this._update();\n            m_this.layer().draw();\n          }\n        };\n      }\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    if (m_this.buildTime().getMTime() <= m_this.dataTime().getMTime()) {\n      m_this._build();\n    }\n\n    if (m_this.updateTime().getMTime() <= m_this.getMTime()) {\n      m_actor.setVisible(m_this.visible());\n      m_actor.material().setBinNumber(m_this.bin());\n    }\n\n    m_this.updateTime().modified();\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Destroy\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_this.renderer().contextRenderer().removeActor(m_actor);\n  };\n\n  return this;\n};\n\ninherit(ggl.planeFeature, geo.planeFeature);\n\n// Now register it\ngeo.registerFeature(\"vgl\", \"plane\", ggl.planeFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module ggl\n */\n//////////////////////////////////////////////////////////////////////////////\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Single VGL viewer\n *\n * This singleton instance is used to share a single GL context across multiple\n * vlgRenderer and therefore layers.\n */\n//////////////////////////////////////////////////////////////////////////////\nggl._vglViewerInstances = {\n  viewers: [],\n  maps: []\n};\n\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Retrives the singleton, lazily constructs as necessary.\n *\n * @return {vgl.viewer} the single viewer instance.\n */\n//////////////////////////////////////////////////////////////////////////////\n\nggl.vglViewerInstance = function (map) {\n  \"use strict\";\n\n  var mapIdx,\n      maps = ggl._vglViewerInstances.maps,\n      viewers = ggl._vglViewerInstances.viewers;\n\n  function makeViewer() {\n    var canvas = $(document.createElement(\"canvas\"));\n    canvas.attr(\"class\", \"webgl-canvas\");\n    var viewer = vgl.viewer(canvas.get(0));\n    viewer.renderWindow().removeRenderer(\n    viewer.renderWindow().activeRenderer());\n    viewer.init();\n    return viewer;\n  }\n\n  for (mapIdx = 0; mapIdx < maps.length; mapIdx += 1) {\n    if (map === maps[mapIdx]) {\n      break;\n    }\n  }\n\n  if (map !== maps[mapIdx]) {\n    maps[mapIdx] = map;\n    viewers[mapIdx] = makeViewer();\n  }\n\n  return viewers[mapIdx];\n};\n\nggl.vglViewerInstance.deleteCache = function (viewer) {\n  \"use strict\";\n\n  var mapIdx,\n      maps = ggl._vglViewerInstances.maps,\n      viewers = ggl._vglViewerInstances.viewers;\n\n  for (mapIdx = 0; mapIdx < viewers.length; mapIdx += 1) {\n    if (viewer === viewers[mapIdx]) {\n      break;\n    }\n  }\n\n  if (viewer === viewers[mapIdx]) {\n    maps.splice(mapIdx, 1);\n    viewers.splice(mapIdx, 1);\n  }\n};\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class vglRenderer\n *\n * @param canvas\n * @returns {ggl.vglRenderer}\n */\n//////////////////////////////////////////////////////////////////////////////\nggl.vglRenderer = function (arg) {\n  \"use strict\";\n\n  if (!(this instanceof ggl.vglRenderer)) {\n    return new ggl.vglRenderer(arg);\n  }\n  ggl.renderer.call(this, arg);\n\n  var m_this = this,\n      m_viewer = ggl.vglViewerInstance(this.layer().map()),\n      m_contextRenderer = vgl.renderer(),\n      m_width = 0,\n      m_height = 0,\n      s_init = this._init;\n\n  m_contextRenderer.setResetScene(false);\n\n  /// TODO: Move this API to the base class\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return width of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.width = function () {\n    return m_width;\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return height of the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.height = function () {\n    return m_height;\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert input data in display space to world space\n   *\n   * @param input {x:val, y:val}, [{x:val, y:val}],\n   * [{x:val, y:val}], [x1,y1], [[x,y]]\n   *\n   * @returns {x:val, y:val, z:val, w:val}, [{x:val, y:val, z:val, w:val}],\n              [[x, y, z, w]], [x1,y1,z1,w]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function (input) {\n    var i,\n        delta,\n        ren = m_this.contextRenderer(),\n        cam = ren.camera(),\n        fdp = ren.focusDisplayPoint(),\n        output,\n        temp,\n        point;\n\n    /// Handle if the input is an array [...]\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n    /// Input is array of object {x:val, y:val}\n      if (input[0] instanceof Object) {\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          point = input[i];\n          temp = ren.displayToWorld(vec4.fromValues(\n                   point.x, point.y, fdp[2], 1.0),\n                   cam.viewMatrix(), cam.projectionMatrix(),\n                   m_width, m_height);\n          output.push({x: temp[0], y: temp[1], z: temp[2], w: temp[3]});\n        }\n    /// Input is array of 2d array [[x,y], [x,y]]\n      } else if (input[0] instanceof Array) {\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          point = input[i];\n          temp = ren.displayToWorld(vec4.fromValues(\n                   point[0], point[1], fdp[2], 1.0),\n                   cam.viewMatrix(), cam.projectionMatrix(),\n                   m_width, m_height);\n          output.push(temp);\n        }\n    /// Input is flat array [x1,y1,x2,y2]\n      } else {\n        delta = input.length % 3 === 0 ? 3 : 2;\n        for (i = 0; i < input.length; i += delta) {\n          temp = ren.displayToWorld(vec4.fromValues(\n            input[i],\n            input[i + 1],\n            fdp[2],\n            1.0), cam.viewMatrix(), cam.projectionMatrix(),\n            m_width, m_height);\n          output.push(temp[0]);\n          output.push(temp[1]);\n          output.push(temp[2]);\n          output.push(temp[3]);\n        }\n      }\n    /// Input is object {x:val, y:val}\n    } else if (input instanceof Object) {\n      output = {};\n      temp = ren.displayToWorld(vec4.fromValues(\n               input.x, input.y, fdp[2], 1.0),\n               cam.viewMatrix(), cam.projectionMatrix(),\n               m_width, m_height);\n      output = {x: temp[0], y: temp[1], z: temp[2], w: temp[3]};\n    } else {\n      throw \"Display to world conversion requires array of 2D/3D points\";\n    }\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert input data in world space to display space\n   *\n   * @param input {x:val, y:val} or {x:val, y:val, z:val} or [{x:val, y:val}]\n   * [{x:val, y:val, z:val}] or [[x,y]] or  [[x,y,z]] or [x1,y1,z1, x2, y2, z2]\n   *\n   * @returns {x:val, y:val} or [{x:val, y:val}] or [[x,y]] or\n   * [x1,y1, x2, y2]\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function (input) {\n    var i, temp, delta,\n        ren = m_this.contextRenderer(), cam = ren.camera(),\n        fp = cam.focalPoint(), output = [];\n\n    /// Input is an array\n    if (input instanceof Array && input.length > 0) {\n      output = [];\n\n      /// Input is an array of objects\n      if (input[0] instanceof Object) {\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          temp = ren.worldToDisplay(vec4.fromValues(\n                   input[i].x, input[i].y, fp[2], 1.0), cam.viewMatrix(),\n                   cam.projectionMatrix(),\n                   m_width, m_height);\n          output[i] = { x: temp[0], y: temp[1], z: temp[2] };\n        }\n      } else if (input[0] instanceof Array) {\n        /// Input is an array of array\n        delta = 1;\n        for (i = 0; i < input.length; i += delta) {\n          temp = ren.worldToDisplay(\n                   vec4.fromValues(input[i][0], input[i][1], fp[2], 1.0),\n                   cam.viewMatrix(), cam.projectionMatrix(), m_width, m_height);\n          output[i].push(temp);\n        }\n      } else {\n        /// Input is a flat array of 2 or 3 dimension\n        delta = input.length % 3 === 0 ? 3 : 2;\n        if (delta === 2)  {\n          for (i = 0; i < input.length; i += delta) {\n            temp = ren.worldToDisplay(vec4.fromValues(\n                     input[i], input[i + 1], fp[2], 1.0), cam.viewMatrix(),\n                     cam.projectionMatrix(),\n                     m_width, m_height);\n            output.push(temp[0]);\n            output.push(temp[1]);\n            output.push(temp[2]);\n          }\n        } else {\n          for (i = 0; i < input.length; i += delta) {\n            temp = ren.worldToDisplay(vec4.fromValues(\n                         input[i], input[i + 1], input[i + 2], 1.0), cam.viewMatrix(),\n                         cam.projectionMatrix(),\n                         m_width, m_height);\n            output.push(temp[0]);\n            output.push(temp[1]);\n            output.push(temp[2]);\n          }\n        }\n      }\n    } else if (input instanceof Object) {\n      temp = ren.worldToDisplay(vec4.fromValues(\n               input.x, input.y, fp[2], 1.0), cam.viewMatrix(),\n               cam.projectionMatrix(),\n               m_width, m_height);\n\n      output = {x: temp[0], y: temp[1], z: temp[2]};\n    } else {\n      throw \"World to display conversion requires array of 2D/3D points\";\n    }\n\n    return output;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get context specific renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.contextRenderer = function () {\n    return m_contextRenderer;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get API used by the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.api = function () {\n    return \"vgl\";\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (m_this.initialized()) {\n      return m_this;\n    }\n\n    s_init.call(m_this);\n\n    m_this.canvas($(m_viewer.canvas()));\n    if (m_viewer.renderWindow().renderers().length > 0) {\n      m_contextRenderer.setLayer(m_viewer.renderWindow().renderers().length);\n      m_contextRenderer.setResetScene(false);\n    }\n    m_viewer.renderWindow().addRenderer(m_contextRenderer);\n\n    m_this.layer().node().append(m_this.canvas());\n\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function (x, y, w, h) {\n    m_width = w;\n    m_height = h;\n    m_this.canvas().attr(\"width\", w);\n    m_this.canvas().attr(\"height\", h);\n    m_viewer.renderWindow().positionAndResize(x, y, w, h);\n    m_this._render();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Render\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._render = function () {\n    m_viewer.render();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    ggl.vglViewerInstance.deleteCache(m_viewer);\n  };\n\n  this._updateRendererCamera = function () {\n    var vglRenderer = m_this.contextRenderer(),\n        renderWindow = m_viewer.renderWindow(),\n        camera = vglRenderer.camera(),\n        pos, fp, cr;\n\n    vglRenderer.resetCameraClippingRange();\n    pos = camera.position();\n    fp = camera.focalPoint();\n    cr = camera.clippingRange();\n    renderWindow.renderers().forEach(function (renderer) {\n      var cam = renderer.camera();\n\n      if (cam !== camera) {\n        cam.setPosition(pos[0], pos[1], pos[2]);\n        cam.setFocalPoint(fp[0], fp[1], fp[2]);\n        cam.setClippingRange(cr[0], cr[1]);\n        renderer.render();\n      }\n    });\n  };\n\n  // connect to interactor events\n  this.geoOn(geo.event.pan, function (evt) {\n    var vglRenderer = m_this.contextRenderer(),\n        camera,\n        focusPoint,\n        centerDisplay,\n        centerGeo,\n        newCenterDisplay,\n        newCenterGeo,\n        renderWindow,\n        layer = m_this.layer();\n\n    // only the base layer needs to respond\n    if (layer.map().baseLayer() !== layer) {\n      return;\n    }\n\n    // skip handling if the renderer is unconnected\n    if (!vglRenderer || !vglRenderer.camera()) {\n      console.log(\"Pan event triggered on unconnected vgl renderer.\");\n    }\n\n    renderWindow = m_viewer.renderWindow();\n    camera = vglRenderer.camera();\n    focusPoint = renderWindow.focusDisplayPoint();\n\n    // Calculate the center in display coordinates\n    centerDisplay = [ m_width / 2, m_height / 2, 0 ];\n\n    // Calculate the center in world coordinates\n    centerGeo = renderWindow.displayToWorld(\n      centerDisplay[0],\n      centerDisplay[1],\n      focusPoint,\n      vglRenderer\n    );\n\n    newCenterDisplay = [\n      centerDisplay[0] + evt.screenDelta.x,\n      centerDisplay[1] + evt.screenDelta.y\n    ];\n\n    newCenterGeo = renderWindow.displayToWorld(\n      newCenterDisplay[0],\n      newCenterDisplay[1],\n      focusPoint,\n      vglRenderer\n    );\n\n    camera.pan(\n      centerGeo[0] - newCenterGeo[0],\n      centerGeo[1] - newCenterGeo[1],\n      centerGeo[2] - newCenterGeo[2]\n    );\n\n    evt.center = {\n      x: newCenterGeo[0],\n      y: newCenterGeo[1],\n      z: newCenterGeo[2]\n    };\n\n    m_this._updateRendererCamera();\n  });\n\n  this.geoOn(geo.event.zoom, function (evt) {\n    var vglRenderer = m_this.contextRenderer(),\n        camera,\n        renderWindow,\n        layer = m_this.layer(),\n        delta,\n        center,\n        dir,\n        focusPoint,\n        position,\n        newZ;\n\n    // only the base layer needs to respond\n    if (layer.map().baseLayer() !== layer) {\n      return;\n    }\n\n    // skip handling if the renderer is unconnected\n    if (!vglRenderer || !vglRenderer.camera()) {\n      console.log(\"Zoom event triggered on unconnected vgl renderer.\");\n    }\n\n    renderWindow = m_viewer.renderWindow();\n    camera = vglRenderer.camera();\n    focusPoint = camera.focalPoint();\n    position = camera.position();\n    newZ = 360 * Math.pow(2, -evt.zoomLevel);\n\n    if (evt.screenPosition) {\n      center = renderWindow.displayToWorld(\n        evt.screenPosition.x,\n        evt.screenPosition.y,\n        focusPoint,\n        vglRenderer\n      );\n      dir = [center[0] - position[0], center[1] - position[1], center[2] - position[2]];\n      position[0] += dir[0] * (1 - newZ / position[2]);\n      position[1] += dir[1] * (1 - newZ / position[2]);\n    } else {\n      dir = undefined;\n      delta = -delta;\n    }\n\n    camera.setPosition(position[0], position[1], 360 * Math.pow(2, -evt.zoomLevel));\n    if (dir) {\n      camera.setFocalPoint(position[0], position[1], focusPoint[2]);\n    }\n\n    m_this._updateRendererCamera();\n  });\n\n  return this;\n};\n\ninherit(ggl.vglRenderer, ggl.renderer);\n\ngeo.registerRenderer(\"vglRenderer\", ggl.vglRenderer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.d3\n */\n//////////////////////////////////////////////////////////////////////////////\ngd3 = ogs.namespace('geo.d3'); // jshint ignore: line\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Get a random string to use as a div ID\n */\n//////////////////////////////////////////////////////////////////////////////\n(function (gd3) {\n  'use strict';\n\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz',\n    strLength = 8;\n\n  gd3.uniqueID = function () {\n    var strArray = [],\n        i;\n    strArray.length = strLength;\n    for (i = 0; i < strLength; i += 1) {\n      strArray[i] = chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return strArray.join('');\n  };\n\n  // event propagated when the d3 renderer rescales its group element\n  geo.event.d3Rescale = 'geo.d3.rescale';\n}(gd3));\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.d3\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * D3 specific subclass of object which adds an id property for d3 selections\n * on groups of objects by class id.\n */\n//////////////////////////////////////////////////////////////////////////////\n\ngd3.object = function (arg) {\n  'use strict';\n  // this is used to extend other geojs classes, so only generate\n  // a new object when that is not the case... like if this === window\n  if (!(this instanceof geo.object)) {\n    return new gd3.object(arg);\n  }\n  geo.sceneObject.call(this);\n\n  var m_id = 'd3-' + gd3.uniqueID(),\n      m_this = this,\n      s_draw = this.draw;\n\n  this._d3id = function () {\n    return m_id;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Returns a d3 selection for the feature elements\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.select = function () {\n    return m_this.renderer().select(m_this._d3id());\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Redraw the object.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n    m_this._update();\n    s_draw();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Removes the element from the svg and the renderer\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    return m_this.renderer()._removeFeature(m_this._d3id());\n  };\n\n  return this;\n};\n\ninherit(gd3.object, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo.d3\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of pointFeature\n *\n * @class\n * @returns {gd3.pointFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngd3.pointFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof gd3.pointFeature)) {\n    return new gd3.pointFeature(arg);\n  }\n  arg = arg || {};\n  geo.pointFeature.call(this, arg);\n  gd3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      s_update = this._update,\n      m_buildTime = geo.timestamp(),\n      m_style = {},\n      m_sticky;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    m_sticky = m_this.layer().sticky();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data(),\n        s_style = m_this.style.get(),\n        m_renderer = m_this.renderer(),\n        pos_func = m_this.position();\n\n    // call super-method\n    s_update.call(m_this);\n\n    // default to empty data array\n    if (!data) { data = []; }\n\n    // fill in d3 renderer style object defaults\n    m_style.id = m_this._d3id();\n    m_style.data = data;\n    m_style.append = 'circle';\n    m_style.attributes = {\n      r: m_renderer._convertScale(s_style.radius),\n      cx: function (d) {\n        return m_renderer.worldToDisplay(pos_func(d)).x;\n      },\n      cy: function (d) {\n        return m_renderer.worldToDisplay(pos_func(d)).y;\n      }\n    };\n    m_style.style = s_style;\n    m_style.classes = [ 'd3PointFeature' ];\n\n    // pass to renderer to draw\n    m_this.renderer()._drawFeatures(m_style);\n\n    // update time stamps\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n\n    return m_this;\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(gd3.pointFeature, geo.pointFeature);\n\n// Now register it\ngeo.registerFeature('d3', 'point', gd3.pointFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class lineFeature\n *\n * @class\n * @returns {gd3.lineFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngd3.lineFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof gd3.lineFeature)) {\n    return new gd3.lineFeature(arg);\n  }\n  arg = arg || {};\n  geo.lineFeature.call(this, arg);\n  gd3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      m_buildTime = geo.timestamp(),\n      s_update = this._update;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data() || [],\n        s_style = m_this.style(),\n        m_renderer = m_this.renderer(),\n        pos_func = m_this.position(),\n        line = d3.svg.line()\n                .x(function (d) { return m_renderer.worldToDisplay(pos_func(d)).x; })\n                .y(function (d) { return m_renderer.worldToDisplay(pos_func(d)).y; });\n\n    s_update.call(m_this);\n    s_style.fill = function () { return false; };\n\n    data.forEach(function (item, idx) {\n      var m_style;\n\n      // item is an object representing a single line\n      // m_this.line()(item) is an array of coordinates\n      m_style = {\n        data: [m_this.line()(item)],\n        append: 'path',\n        attributes: {\n          d: line\n        },\n        id: m_this._d3id(),\n        classes: [ 'd3LineFeature', 'd3SubLine-' + idx ],\n        style: s_style\n      };\n\n      m_renderer._drawFeatures(m_style);\n    });\n\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n\n    return m_this;\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(gd3.lineFeature, geo.lineFeature);\n\ngeo.registerFeature('d3', 'line', gd3.lineFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class pathFeature\n *\n * @class\n * @returns {gd3.pathFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngd3.pathFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof gd3.pathFeature)) {\n    return new gd3.pathFeature(arg);\n  }\n  arg = arg || {};\n  geo.pathFeature.call(this, arg);\n  gd3.object.call(this);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  var m_this = this,\n      s_init = this._init,\n      m_buildTime = geo.timestamp(),\n      s_update = this._update,\n      m_style = {};\n\n  m_style.style = {};\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var data = m_this.data() || [],\n        s_style = m_this.style(),\n        m_renderer = m_this.renderer(),\n        tmp, diag;\n    s_update.call(m_this);\n\n    diag = function (d) {\n        var p = {\n          source: d.source,\n          target: d.target\n        };\n        return d3.svg.diagonal()(p);\n      };\n    tmp = [];\n    data.forEach(function (d, i) {\n      var src, trg;\n      if (i < data.length - 1) {\n        src = d;\n        trg = data[i + 1];\n        tmp.push({\n          source: m_renderer.worldToDisplay(src),\n          target: m_renderer.worldToDisplay(trg)\n        });\n      }\n    });\n    m_style.data = tmp;\n    m_style.attributes = {\n      d: diag\n    };\n\n    m_style.id = m_this._d3id();\n    m_style.append = 'path';\n    m_style.classes = [ 'd3PathFeature' ];\n    m_style.style = $.extend({\n      'fill': function () { return false; },\n      'fillColor': function () { return { r: 0, g: 0, b: 0 }; }\n    }, s_style);\n\n    m_this.renderer()._drawFeatures(m_style);\n\n    m_buildTime.modified();\n    m_this.updateTime().modified();\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update\n   *\n   * @override\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n\n    return m_this;\n  };\n\n  this._init(arg);\n  return this;\n};\n\ninherit(gd3.pathFeature, geo.pathFeature);\n\ngeo.registerFeature('d3', 'path', gd3.pathFeature);\n","gd3.graphFeature = function (arg) {\n  'use strict';\n\n  var m_this = this;\n\n  if (!(this instanceof gd3.graphFeature)) {\n    return new gd3.graphFeature(arg);\n  }\n  geo.graphFeature.call(this, arg);\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Returns a d3 selection for the graph elements\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.select = function () {\n    var renderer = m_this.renderer(),\n        selection = {},\n        node = m_this.nodeFeature(),\n        links = m_this.linkFeatures();\n    selection.nodes = renderer.select(node._d3id());\n    selection.links = links.map(function (link) {\n      return renderer.select(link._d3id());\n    });\n    return selection;\n  };\n\n  return this;\n};\n\ninherit(gd3.graphFeature, geo.graphFeature);\n\ngeo.registerFeature('d3', 'graph', gd3.graphFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of planeFeature\n *\n * @class\n * Create a plane feature given a lower left corner point {geo.latlng}\n * and and upper right corner point {geo.latlng}\n * @param lowerleft\n * @param upperright\n * @returns {geo.planeFeature}\n */\n//////////////////////////////////////////////////////////////////////////////\ngd3.planeFeature = function (arg) {\n  'use strict';\n  if (!(this instanceof gd3.planeFeature)) {\n    return new gd3.planeFeature(arg);\n  }\n  geo.planeFeature.call(this, arg);\n  gd3.object.call(this);\n\n  var m_this = this,\n      m_style = {},\n      s_update = this._update,\n      s_init = this._init,\n      m_buildTime = geo.timestamp();\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Normalize a coordinate as an object {x: ..., y: ...}\n   *\n   * @private\n   * @returns {Object}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  function normalize(pt) {\n    if (Array.isArray(pt)) {\n      return {\n        x: pt[0],\n        y: pt[1]\n      };\n    } else if (pt instanceof geo.latlng) {\n      return {\n        x: pt.x(),\n        y: pt.y()\n      };\n    }\n    return pt;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Build the feature object and pass to the renderer for drawing.\n   *\n   * @private\n   * @returns {gd3.planeFeature}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._build = function () {\n    var origin = normalize(m_this.origin()),\n        ul = normalize(m_this.upperLeft()),\n        lr = normalize(m_this.lowerRight()),\n        renderer = m_this.renderer(),\n        s = m_this.style();\n\n    delete s.fill_color;\n    delete s.color;\n    delete s.opacity;\n    if (!s.screenCoordinates) {\n      origin = renderer.worldToDisplay(origin);\n      ul = renderer.worldToDisplay(ul);\n      lr = renderer.worldToDisplay(lr);\n    }\n    m_style.id = m_this._d3id();\n    m_style.style = s;\n    m_style.attributes = {\n      x: ul.x,\n      y: ul.y,\n      width: lr.x - origin.x,\n      height: origin.y - ul.y\n    };\n    m_style.append = 'rect';\n    m_style.data = [0];\n    m_style.classes = ['d3PlaneFeature'];\n\n    renderer._drawFeatures(m_style);\n    m_buildTime.modified();\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Redraw the plane feature if necessary.\n   *\n   * @private\n   * @returns {gd3.planeFeature}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n    s_update.call(m_this);\n\n    if (m_this.dataTime().getMTime() >= m_buildTime.getMTime()) {\n      m_this._build();\n    }\n    return m_this;\n  };\n\n  //////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initializes the plane feature style (over-riding the parent default).\n   *\n   * @private\n   * @returns {gd3.planeFeature}\n   */\n  //////////////////////////////////////////////////////////////////////////////\n  this._init = function (arg) {\n    s_init.call(m_this, arg || {});\n    m_this.style({\n      stroke: function () { return false; },\n      fill: function () { return true; },\n      fillColor: function () { return {r: 0.3, g: 0.3, b: 0.3}; },\n      fillOpacity: function () { return 0.5; }\n    });\n    return m_this;\n  };\n\n  this._init();\n  return this;\n};\n\ninherit(gd3.planeFeature, geo.planeFeature);\n\ngeo.registerFeature('d3', 'plane', gd3.planeFeature);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module gd3\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class d3Renderer\n *\n * @param canvas\n * @returns {gd3.d3Renderer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngd3.d3Renderer = function (arg) {\n  'use strict';\n\n  if (!(this instanceof gd3.d3Renderer)) {\n    return new gd3.d3Renderer(arg);\n  }\n  geo.renderer.call(this, arg);\n  gd3.object.call(this, arg);\n\n  arg = arg || {};\n\n  var m_this = this,\n      m_sticky = null,\n      m_features = {},\n      m_corners = null,\n      m_width = null,\n      m_height = null,\n      m_scale = 1,\n      m_dx = 0,\n      m_dy = 0,\n      m_svg = null,\n      m_defs = null;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set attributes to a d3 selection.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setAttrs(select, attrs) {\n    var key;\n    for (key in attrs) {\n      if (attrs.hasOwnProperty(key)) {\n        select.attr(key, attrs[key]);\n      }\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Meta functions for converting from geojs styles to d3.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._convertColor = function (f, g) {\n    f = geo.util.ensureFunction(f);\n    g = g || function () { return true; };\n    return function () {\n      var c;\n      if (g.apply(this, arguments)) {\n        c = f.apply(this, arguments);\n        if (c.hasOwnProperty('r') &&\n            c.hasOwnProperty('g') &&\n            c.hasOwnProperty('b')) {\n          c = d3.rgb(255 * c.r, 255 * c.g, 255 * c.b);\n        }\n      }\n      return c;\n    };\n  };\n\n  this._convertPosition = function (f) {\n    f = geo.util.ensureFunction(f);\n    return function () {\n      return m_this.worldToDisplay(f.apply(this, arguments));\n    };\n  };\n\n  this._convertScale = function (f) {\n    f = geo.util.ensureFunction(f);\n    return function () {\n      return f.apply(this, arguments) / m_scale;\n    };\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set styles to a d3 selection. Ignores unkown style keys.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setStyles(select, styles) {\n    /* jshint validthis:true */\n    var key, k, f;\n    function fillFunc() {\n      if (styles.fill.apply(this, arguments)) {\n        return null;\n      } else {\n        return 'none';\n      }\n    }\n    function strokeFunc() {\n      if (styles.stroke.apply(this, arguments)) {\n        return null;\n      } else {\n        return 'none';\n      }\n    }\n    for (key in styles) {\n      if (styles.hasOwnProperty(key)) {\n        f = null;\n        k = null;\n        if (key === 'strokeColor') {\n          k = 'stroke';\n          f = m_this._convertColor(styles[key], styles.stroke);\n        } else if (key === 'stroke' && styles[key]) {\n          k = 'stroke';\n          f = strokeFunc;\n        } else if (key === 'strokeWidth') {\n          k = 'stroke-width';\n          f = m_this._convertScale(styles[key]);\n        } else if (key === 'strokeOpacity') {\n          k = 'stroke-opacity';\n          f = styles[key];\n        } else if (key === 'fillColor') {\n          k = 'fill';\n          f = m_this._convertColor(styles[key], styles.fill);\n        } else if (key === 'fill' && !styles.hasOwnProperty('fillColor')) {\n          k = 'fill';\n          f = fillFunc;\n        } else if (key === 'fillOpacity') {\n          k = 'fill-opacity';\n          f = styles[key];\n        }\n        if (k) {\n          select.style(k, f);\n        }\n      }\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the map instance or return null if not connected to a map.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function getMap() {\n    var layer = m_this.layer();\n    if (!layer) {\n      return null;\n    }\n    return layer.map();\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get the svg group element associated with this renderer instance.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function getGroup() {\n    return m_svg.select('.group-' + m_this._d3id());\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set the initial lat-lon coordinates of the map view.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function initCorners() {\n    var layer = m_this.layer(),\n        map = layer.map(),\n        width = m_this.layer().width(),\n        height = m_this.layer().height();\n\n    m_width = width;\n    m_height = height;\n    if (!m_width || !m_height) {\n      throw 'Map layer has size 0';\n    }\n    m_corners = {\n      'upperLeft': map.displayToGcs({'x': 0, 'y': 0}),\n      'lowerRight': map.displayToGcs({'x': width, 'y': height})\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Set the translation, scale, and zoom for the current view.\n   * @note rotation not yet supported\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function setTransform() {\n\n    if (!m_corners) {\n      initCorners();\n    }\n\n    if (!m_sticky) {\n      return;\n    }\n\n    var layer = m_this.layer(),\n        map = layer.map(),\n        upperLeft = map.gcsToDisplay(m_corners.upperLeft),\n        lowerRight = map.gcsToDisplay(m_corners.lowerRight),\n        group = getGroup(),\n        dx, dy, scale;\n\n    // calculate the translation\n    dx = upperLeft.x;\n    dy = upperLeft.y;\n\n    // calculate the scale\n    scale = (lowerRight.y - upperLeft.y) / m_height;\n\n    // set the group transform property\n    group.attr('transform', 'matrix(' + [scale, 0, 0, scale, dx, dy].join() + ')');\n\n    // set internal variables\n    m_scale = scale;\n    m_dx = dx;\n    m_dy = dy;\n  }\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from screen pixel coordinates to the local coordinate system\n   * in the SVG group element taking into account the transform.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function baseToLocal(pt) {\n    return {\n      x: (pt.x - m_dx) / m_scale,\n      y: (pt.y - m_dy) / m_scale\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from the local coordinate system in the SVG group element\n   * to screen pixel coordinates.\n   * @private\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  function localToBase(pt) {\n    return {\n      x: pt.x * m_scale + m_dx,\n      y: pt.y * m_scale + m_dy\n    };\n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Initialize\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    if (!m_this.canvas()) {\n      var canvas;\n      m_svg = d3.select(m_this.layer().node().get(0)).append('svg');\n\n      // create a global svg definitions element\n      m_defs = m_svg.append('defs');\n\n      var shadow = m_defs\n        .append('filter')\n          .attr('id', 'geo-highlight')\n          .attr('x', '-100%')\n          .attr('y', '-100%')\n          .attr('width', '300%')\n          .attr('height', '300%');\n      shadow\n        .append('feMorphology')\n          .attr('operator', 'dilate')\n          .attr('radius', 2)\n          .attr('in', 'SourceAlpha')\n          .attr('result', 'dilateOut');\n      shadow\n        .append('feGaussianBlur')\n          .attr('stdDeviation', 5)\n          .attr('in', 'dilateOut')\n          .attr('result', 'blurOut');\n      shadow\n        .append('feColorMatrix')\n          .attr('type', 'matrix')\n          .attr('values', '-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0')\n          .attr('in', 'blurOut')\n          .attr('result', 'invertOut');\n      shadow\n        .append('feBlend')\n          .attr('in', 'SourceGraphic')\n          .attr('in2', 'invertOut')\n          .attr('mode', 'normal');\n      canvas = m_svg.append('g');\n\n      shadow = m_defs.append('filter')\n          .attr('id', 'geo-blur')\n          .attr('x', '-100%')\n          .attr('y', '-100%')\n          .attr('width', '300%')\n          .attr('height', '300%');\n\n      shadow\n        .append('feGaussianBlur')\n          .attr('stdDeviation', 20)\n          .attr('in', 'SourceGraphic');\n\n      m_sticky = m_this.layer().sticky();\n      m_svg.attr('class', m_this._d3id());\n      m_svg.attr('width', m_this.layer().node().width());\n      m_svg.attr('height', m_this.layer().node().height());\n\n      canvas.attr('class', 'group-' + m_this._d3id());\n\n      m_this.canvas(canvas);\n    }\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from coordinates in the svg group element to lat/lon.\n   * Supports objects or arrays of objects.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.displayToWorld = function (pt) {\n    var map = getMap();\n    if (!map) {\n      throw 'Cannot project until this layer is connected to a map.';\n    }\n    if (Array.isArray(pt)) {\n      pt = pt.map(function (x) {\n        return map.displayToGcs(localToBase(x));\n      });\n    } else {\n      pt = map.displayToGcs(localToBase(pt));\n    }\n    return pt;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Convert from lat/lon to pixel coordinates in the svg group element.\n   * Supports objects or arrays of objects.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.worldToDisplay = function (pt) {\n    var map = getMap();\n    if (!map) {\n      throw 'Cannot project until this layer is connected to a map.';\n    }\n    var v;\n    if (Array.isArray(pt)) {\n      v = pt.map(function (x) {\n        return baseToLocal(map.gcsToDisplay(x));\n      });\n    } else {\n      v = baseToLocal(map.gcsToDisplay(pt));\n    }\n    return v;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Get API used by the renderer\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.api = function () {\n    return 'd3';\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Return the current scaling factor to build features that shouldn't\n   * change size during zooms.  For example:\n   *\n   *  selection.append('circle')\n   *    .attr('r', r0 / renderer.scaleFactor());\n   *\n   * This will create a circle element with radius r0 independent of the\n   * current zoom level.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.scaleFactor = function () {\n    return m_scale;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Handle resize event\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._resize = function (x, y, w, h) {\n    if (!m_corners) {\n      initCorners();\n    }\n    m_svg.attr('width', w);\n    m_svg.attr('height', h);\n    setTransform();\n    m_this.layer().geoTrigger(geo.event.d3Rescale, { scale: m_scale }, true);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Update noop for gd3.object api.\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._update = function () {\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Exit\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_features = {};\n    m_this.canvas().remove();\n  };\n\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a new feature element from an object that describes the feature\n   * attributes.  To be called from feature classes only.\n   *\n   * Input:\n   *  {\n   *    id:         A unique string identifying the feature.\n   *    data:       Array of data objects used in a d3 data method.\n   *    index:      A function that returns a unique id for each data element.\n   *    style:      An object containing element CSS styles.\n   *    attributes: An object containing element attributes.\n   *    classes:    An array of classes to add to the elements.\n   *    append:     The element type as used in d3 append methods.\n   *  }\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._drawFeatures = function (arg) {\n    m_features[arg.id] = {\n      data: arg.data,\n      index: arg.dataIndex,\n      style: arg.style,\n      attributes: arg.attributes,\n      classes: arg.classes,\n      append: arg.append\n    };\n    return m_this.__render(arg.id);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Updates a feature by performing a d3 data join.  If no input id is\n  *  provided then this method will update all features.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.__render = function (id) {\n    var key;\n    if (id === undefined) {\n      for (key in m_features) {\n        if (m_features.hasOwnProperty(key)) {\n          m_this.__render(key);\n        }\n      }\n      return m_this;\n    }\n    var data = m_features[id].data,\n        index = m_features[id].index,\n        style = m_features[id].style,\n        attributes = m_features[id].attributes,\n        classes = m_features[id].classes,\n        append = m_features[id].append,\n        selection = m_this.select(id).data(data, index);\n    selection.enter().append(append);\n    selection.exit().remove();\n    setAttrs(selection, attributes);\n    selection.attr('class', classes.concat([id]).join(' '));\n    setStyles(selection, style);\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Returns a d3 selection for the given feature id.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.select = function (id) {\n    return getGroup().selectAll('.' + id);\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Removes a feature from the layer.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this._removeFeature = function (id) {\n    m_this.select(id).remove();\n    delete m_features[id];\n    return m_this;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n  *  Override draw method to do nothing.\n  */\n  ////////////////////////////////////////////////////////////////////////////\n  this.draw = function () {\n  };\n\n  // connect to pan event\n  this.layer().geoOn(geo.event.pan, setTransform);\n\n  // connect to zoom event\n  this.layer().geoOn(geo.event.zoom, function () {\n    setTransform();\n    m_this.__render();\n    m_this.layer().geoTrigger(geo.event.d3Rescale, { scale: m_scale }, true);\n  });\n\n  this.layer().geoOn(geo.event.resize, function (event) {\n    m_this._resize(event.x, event.y, event.width, event.height);\n  });\n\n  this._init(arg);\n  return this;\n};\n\ninherit(gd3.d3Renderer, geo.renderer);\n\ngeo.registerRenderer('d3Renderer', gd3.d3Renderer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * @namespace\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui = {};\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class uiLayer\n *\n * @class\n * @returns {geo.gui.uiLayer}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.uiLayer = function (arg) {\n  'use strict';\n\n  // The widget stays fixed on the screen.  (only available in d3 at the moment)\n  arg.renderer = 'd3Renderer';\n  arg.sticky = false;\n\n  if (!(this instanceof geo.gui.uiLayer)) {\n    return new geo.gui.uiLayer(arg);\n  }\n  geo.layer.call(this, arg);\n\n  var m_this = this;\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create a new ui control\n   *\n   * @returns {geo.gui.Widget} Will return a new control widget\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.createWidget = function (widgetName, arg) {\n\n    var newWidget = geo.createWidget(\n      widgetName, m_this, m_this.renderer(), arg);\n\n    m_this.addChild(newWidget);\n    newWidget._init();\n    m_this.modified();\n    return newWidget;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete a ui control\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this.deleteWidget = function (widget) {\n    widget._exit();\n    m_this.removeChild(widget);\n    m_this.modified();\n    return m_this;\n  };\n};\n\ninherit(geo.gui.uiLayer, geo.layer);\n\ngeo.registerLayer('ui', geo.gui.uiLayer);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class widget\n *\n * @class\n * @returns {geo.gui.widget}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.widget = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gui.widget)) {\n    return new geo.gui.widget(arg);\n  }\n  geo.sceneObject.call(this, arg);\n\n  var m_this = this,\n      m_layer = arg.layer;\n\n  this._init = function () {\n    m_this.modified();\n  };\n\n  this._exit = function () {\n    m_this.children().forEach(function (child) {\n      child._exit();\n    });\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Create feature give a name\n   *\n   * @returns {geo.Feature} Will return a new feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._createFeature = function (featureName, arg) {\n\n    var newFeature = geo.createFeature(\n      featureName, m_this, m_this.renderer(), arg);\n\n    m_this.addChild(newFeature);\n    m_this.modified();\n    return newFeature;\n  };\n\n  ////////////////////////////////////////////////////////////////////////////\n  /**\n   * Delete feature\n   */\n  ////////////////////////////////////////////////////////////////////////////\n  this._deleteFeature = function (feature) {\n    m_this.removeChild(feature);\n\n    return m_this;\n  };\n\n  this.layer = function () {\n    return m_layer;\n  };\n};\ninherit(geo.gui.widget, geo.sceneObject);\n","//////////////////////////////////////////////////////////////////////////////\n/**\n * @module geo\n */\n//////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Create a new instance of class sliderWidget\n *\n * @class\n * @returns {geo.gui.sliderWidget}\n */\n//////////////////////////////////////////////////////////////////////////////\ngeo.gui.sliderWidget = function (arg) {\n  'use strict';\n  if (!(this instanceof geo.gui.sliderWidget)) {\n    return new geo.gui.sliderWidget(arg);\n  }\n  geo.gui.widget.call(this, arg);\n\n  var m_this = this,\n      m_xscale,\n      m_yscale,\n      m_plus,\n      m_minus,\n      m_track,\n      m_nub,\n      m_width = 20, // Approximate size of the widget in pixels\n      m_height = 100,\n      m_nubSize = 10,\n      m_plusIcon,\n      m_minusIcon,\n      m_group,\n      m_lowContrast,\n      m_highlightDur = 100;\n\n  /* http://icomoon.io */\n  /* CC BY 3.0 http://creativecommons.org/licenses/by/3.0/ */\n  /* jshint -W101 */\n  m_plusIcon = 'M512 81.92c-237.568 0-430.080 192.614-430.080 430.080 0 237.568 192.563 430.080 430.080 430.080s430.080-192.563 430.080-430.080c0-237.517-192.563-430.080-430.080-430.080zM564.326 564.326v206.182h-104.653v-206.182h-206.234v-104.653h206.182v-206.234h104.704v206.182h206.182v104.704h-206.182z';\n  m_minusIcon = 'M512 81.92c-237.568 0-430.080 192.614-430.080 430.080 0 237.568 192.563 430.080 430.080 430.080s430.080-192.563 430.080-430.080c0-237.517-192.563-430.080-430.080-430.080zM770.56 459.674v104.704h-517.12v-104.704h517.12z';\n  /* jshint +W101 */\n\n  // Define off-white gray colors for low contrast ui (unselected).\n  m_lowContrast = {\n    white: '#f4f4f4',\n    black: '#505050'\n  };\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Add an icon from a path string.\n *\n * @function\n * @argument {String} icon svg path string\n * @argument {d3 selection} base where to append the element\n * @argument {Number} cx Center x-coordinate\n * @argument {Number} cy Center y-coordinate\n * @argument {Number} size Icon size in pixels\n * @returns {d3 group element}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  function put_icon(icon, base, cx, cy, size) {\n    var g = base.append('g');\n\n    // the scale factor\n    var s = size / 1024;\n\n    g.append('g')\n      .append('g')\n        .attr(\n          'transform',\n          'translate(' + cx + ',' + cy + ') scale(' + s + ') translate(-512,-512)'\n      )\n      .append('path')\n        .attr('d', icon)\n        .attr('class', 'geo-glyphicon');\n\n    return g;\n  }\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Initialize the slider widget in the map.\n *\n * @function\n * @returns {geo.gui.sliderWidget}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  this._init = function () {\n    var svg = m_this.layer().renderer().canvas(),\n        x0 = 40,\n        y0 = 40 + m_width,\n        map = m_this.layer().map();\n\n    // create d3 scales for positioning\n    // TODO: make customizable and responsive\n    m_xscale = d3.scale.linear().domain([-4, 4]).range([x0, x0 + m_width]);\n    m_yscale = d3.scale.linear().domain([0, 1]).range([y0, y0 + m_height]);\n\n    // Create the main group element\n    svg = svg.append('g').classed('geo-ui-slider', true);\n    m_group = svg;\n\n    // Create + zoom button\n    m_plus = svg.append('g');\n    m_plus.append('circle')\n      .datum({\n        fill: 'white',\n        stroke: null\n      })\n      .classed('geo-zoom-in', true)\n      .attr('cx', m_xscale(0))\n      .attr('cy', m_yscale(0.0) - m_width + 2)\n      .attr('r', m_width / 2)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('click', function () {\n        var z = map.zoom();\n        map.transition({\n          zoom: z + 1,\n          ease: d3.ease('cubic-in-out'),\n          duration: 500\n        });\n      })\n      .on('mousedown', function () {\n        d3.event.stopPropagation();\n      });\n\n    put_icon(\n      m_plusIcon,\n      m_plus,\n      m_xscale(0),\n      m_yscale(0) - m_width + 2,\n      m_width + 5\n    ).style('cursor', 'pointer')\n      .style('pointer-events', 'none')\n      .select('path')\n      .datum({\n        fill: 'black',\n        stroke: null\n      });\n\n\n    // Create the - zoom button\n    m_minus = svg.append('g');\n    m_minus.append('circle')\n      .datum({\n        fill: 'white',\n        stroke: null\n      })\n      .classed('geo-zoom-out', true)\n      .attr('cx', m_xscale(0))\n      .attr('cy', m_yscale(1.0) + m_width - 2)\n      .attr('r', m_width / 2)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('click', function () {\n        var z = map.zoom();\n        map.transition({\n          zoom: z - 1,\n          ease: d3.ease('cubic-in-out'),\n          duration: 500\n        });\n      })\n      .on('mousedown', function () {\n        d3.event.stopPropagation();\n      });\n\n    put_icon(\n      m_minusIcon,\n      m_minus,\n      m_xscale(0),\n      m_yscale(1) + m_width - 2,\n      m_width + 5\n    ).style('cursor', 'pointer')\n      .style('pointer-events', 'none')\n      .select('path')\n      .datum({\n        fill: 'black',\n        stroke: null\n      });\n\n    // Respond to a mouse event on the widget\n    function respond(evt, trans) {\n      var z = m_yscale.invert(d3.mouse(m_this.layer().node()[0])[1]),\n          zrange = map.zoomRange();\n      z = (1 - z) * (zrange.max - zrange.min) + zrange.min;\n      if (trans) {\n        map.transition({\n          zoom: z,\n          ease: d3.ease('cubic-in-out'),\n          duration: 500,\n          done: m_this._update()\n        });\n      } else {\n        map.zoom(z);\n        m_this._update();\n      }\n      evt.stopPropagation();\n    }\n\n    // Create the track\n    m_track = svg.append('rect')\n      .datum({\n        fill: 'white',\n        stroke: 'black'\n      })\n      .classed('geo-zoom-track', true)\n      .attr('x', m_xscale(0) - m_width / 6)\n      .attr('y', m_yscale(0))\n      .attr('rx', m_width / 10)\n      .attr('ry', m_width / 10)\n      .attr('width', m_width / 3)\n      .attr('height', m_height)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('click', function () {\n        respond(d3.event, true);\n      });\n\n    // Create the nub\n    m_nub = svg.append('rect')\n      .datum({\n        fill: 'black',\n        stroke: null\n      })\n      .classed('geo-zoom-nub', true)\n      .attr('x', m_xscale(-4))\n      .attr('y', m_yscale(0.5) - m_nubSize / 2)\n      .attr('rx', 3)\n      .attr('ry', 3)\n      .attr('width', m_width)\n      .attr('height', m_nubSize)\n      .style({\n        'cursor': 'pointer'\n      })\n      .on('mousedown', function () {\n        d3.select(document).on('mousemove.geo.slider', function () {\n          respond(d3.event);\n        });\n        d3.select(document).on('mouseup.geo.slider', function () {\n          respond(d3.event);\n          d3.select(document).on('.geo.slider', null);\n        });\n        d3.event.stopPropagation();\n      });\n\n    var mouseOver = function () {\n      d3.select(this).attr('filter', 'url(#geo-highlight)');\n      m_group.selectAll('rect,path,circle').transition()\n        .duration(m_highlightDur)\n        .style('fill', function (d) {\n          return d.fill || null;\n        })\n        .style('stroke', function (d) {\n          return d.stroke || null;\n        });\n\n    };\n\n    var mouseOut = function () {\n      d3.select(this).attr('filter', null);\n      m_group.selectAll('circle,rect,path').transition()\n        .duration(m_highlightDur)\n        .style('fill', function (d) {\n          return m_lowContrast[d.fill] || null;\n        })\n        .style('stroke', function (d) {\n          return m_lowContrast[d.stroke] || null;\n        });\n    };\n\n    m_group.selectAll('*')\n      .on('mouseover', mouseOver)\n      .on('mouseout', mouseOut);\n\n    // Update the nub position on zoom\n    m_this.layer().geoOn(geo.event.zoom, function () {\n      m_this._update();\n    });\n\n    mouseOut();\n    m_this._update();\n  };\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Removes the slider element from the map and unbinds all handlers.\n *\n * @function\n * @returns {geo.gui.sliderWidget}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  this._exit = function () {\n    m_group.remove();\n    m_this.layer().geoOff(geo.event.zoom);\n  };\n\n//////////////////////////////////////////////////////////////////////////////\n/**\n * Update the slider widget state in reponse to map changes.  I.e. zoom\n * range changes.\n *\n * @function\n * @returns {geo.gui.sliderWidget}\n * @private\n */\n//////////////////////////////////////////////////////////////////////////////\n  this._update = function (obj) {\n    var map = m_this.layer().map(),\n        zoomRange = map.zoomRange(),\n        zoom = map.zoom(),\n        zoomScale = d3.scale.linear();\n\n    obj = obj || {};\n    zoom = obj.value || zoom;\n    zoomScale.domain([zoomRange.min, zoomRange.max])\n      .range([1, 0])\n      .clamp(true);\n\n    m_nub.attr('y', m_yscale(zoomScale(zoom)) - m_nubSize / 2);\n  };\n};\n\ninherit(geo.gui.sliderWidget, geo.gui.widget);\n\ngeo.registerWidget('d3', 'slider', geo.gui.sliderWidget);\n"]}